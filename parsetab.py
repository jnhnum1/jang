
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xb6\x16`\xf00=\x1a\xbe\x8d\xedm\xb3\xd6\xa6\xa4]'
    
_lr_action_items = {'LSQUARE':([0,1,2,3,6,7,9,11,12,14,16,19,23,25,26,27,29,30,31,32,33,34,36,38,39,40,41,42,43,46,47,48,49,50,52,56,60,61,63,65,66,67,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,100,101,102,103,104,105,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,146,150,151,152,154,155,156,157,158,161,163,165,166,167,168,169,171,173,174,175,177,178,180,181,],[1,1,1,-30,-29,1,-28,-68,1,1,-65,-89,1,-27,-4,-77,1,-66,-32,-31,1,83,83,83,1,1,1,1,1,83,1,1,-30,102,83,1,-28,-27,83,1,-5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-23,-24,1,83,83,83,83,83,1,83,83,1,1,-18,1,-44,-43,-33,-45,1,1,83,-3,83,-78,83,83,83,83,83,83,83,83,83,83,83,1,83,83,83,83,83,83,1,83,-42,1,83,83,83,83,-41,-81,83,-79,1,83,-39,-40,1,-72,-82,-83,83,83,-73,-80,-69,1,83,-70,-71,]),'DIVIDE':([3,6,9,11,16,19,25,27,30,31,32,34,36,38,46,49,50,52,60,61,63,88,89,91,92,93,94,95,100,101,104,110,111,112,113,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,140,141,144,146,150,151,152,154,155,156,158,161,163,166,167,168,169,171,173,174,175,178,180,181,],[-30,-29,-28,-68,-65,-89,-27,-77,-66,-32,-31,79,79,79,79,-30,79,79,-28,-27,79,-23,-24,79,79,79,79,79,79,79,-18,-44,-43,-33,-45,79,-3,79,-78,79,79,-50,79,79,79,79,-48,79,-59,79,79,79,79,79,79,79,79,-42,79,79,79,79,-41,-81,79,-79,79,-39,-40,-72,-82,-83,79,79,-73,-80,-69,79,-70,-71,]),'RETURN':([0,26,29,33,56,66,],[2,-4,2,2,2,-5,]),'UNDEFINED':([0,1,2,7,12,14,23,26,29,33,39,40,41,42,43,47,48,56,65,66,67,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,97,102,103,105,114,115,132,139,142,157,165,177,],[19,19,19,19,19,19,19,-4,19,19,19,19,19,19,19,19,19,19,19,-5,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'NE':([3,6,9,11,16,19,25,27,30,31,32,34,36,38,46,49,50,52,60,61,63,88,89,91,92,93,94,95,100,101,104,110,111,112,113,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,140,141,144,146,150,151,152,154,155,156,158,161,163,166,167,168,169,171,173,174,175,178,180,181,],[-30,-29,-28,-68,-65,-89,-27,-77,-66,-32,-31,73,73,73,73,-30,73,73,-28,-27,73,-23,-24,-63,-62,-64,-61,73,73,73,-18,-44,-43,-33,-45,73,-3,-58,-78,-53,-56,-50,-54,-46,-52,73,-48,-49,-59,-51,73,-19,73,73,-55,73,73,-42,73,73,73,73,-41,-81,73,-79,73,-39,-40,-72,-82,-83,73,73,-73,-80,-69,73,-70,-71,]),'WHILE':([0,26,29,33,56,66,],[10,-4,10,10,10,-5,]),'DEL':([0,26,29,33,56,66,],[12,-4,12,12,12,-5,]),'NEW':([0,1,2,7,12,14,23,26,29,33,39,40,41,42,43,47,48,56,65,66,67,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,97,102,103,105,114,115,132,139,142,157,165,177,],[13,13,13,13,13,13,13,-4,13,13,13,13,13,13,13,13,13,13,13,-5,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'PRINT':([0,26,29,33,56,66,],[14,-4,14,14,14,-5,]),'CONST':([0,26,29,33,56,66,],[5,-4,5,5,5,-5,]),'TRUE':([0,1,2,7,12,14,23,26,29,33,39,40,41,42,43,47,48,56,65,66,67,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,97,102,103,105,114,115,132,139,142,157,165,177,],[16,16,16,16,16,16,16,-4,16,16,16,16,16,16,16,16,16,16,16,-5,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'MINUS':([3,6,9,11,16,19,25,27,30,31,32,34,36,38,46,49,50,52,60,61,63,88,89,91,92,93,94,95,100,101,104,110,111,112,113,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,140,141,144,146,150,151,152,154,155,156,158,161,163,166,167,168,169,171,173,174,175,178,180,181,],[-30,-29,-28,-68,-65,-89,-27,-77,-66,-32,-31,70,70,70,70,-30,70,70,-28,-27,70,-23,-24,70,70,70,70,70,70,70,-18,-44,-43,-33,-45,70,-3,-58,-78,70,70,-50,70,-46,70,70,-48,70,-59,70,70,70,70,70,-55,70,70,-42,70,70,70,70,-41,-81,70,-79,70,-39,-40,-72,-82,-83,70,70,-73,-80,-69,70,-70,-71,]),'DOT':([3,6,9,11,16,19,25,27,30,31,32,34,36,38,46,49,50,52,60,61,63,88,89,91,92,93,94,95,100,101,104,110,111,112,113,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,140,141,144,146,150,151,152,154,155,156,158,161,163,166,167,168,169,171,173,174,175,178,180,181,],[-30,-29,-28,-68,-65,-89,-27,-77,-66,-32,-31,71,71,71,71,-30,71,71,-28,-27,71,-23,-24,71,71,71,71,71,71,71,-18,-44,-43,-33,-45,71,-3,71,-78,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-42,71,71,71,71,-41,-81,71,-79,71,-39,-40,-72,-82,-83,71,71,-73,-80,-69,71,-70,-71,]),'RBRACE':([2,3,6,8,9,11,16,18,19,20,21,25,26,27,29,30,31,32,33,34,38,46,49,52,56,64,66,68,69,88,89,91,92,93,94,95,104,106,110,111,112,113,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,136,137,140,141,151,152,154,156,158,160,161,163,166,167,168,173,174,175,180,181,],[-93,-30,-29,-10,-28,-68,-65,-1,-89,-7,-6,-27,-4,-77,-11,-66,-32,-31,-11,-2,-92,-67,-90,-91,-11,-85,-5,118,-9,-23,-24,-63,-62,-64,-61,-84,-18,-8,-44,-43,-33,-45,-3,-58,-78,-53,-56,-50,-54,-46,-52,-60,-48,-49,-59,-51,-19,-47,-57,-55,-88,-42,-87,-41,-81,-79,-86,-74,-39,-40,-72,-82,-83,-73,-80,-69,-70,-71,]),'RSQUARE':([1,3,6,9,11,16,19,25,27,30,31,32,35,36,37,46,88,89,91,92,93,94,95,104,110,111,112,113,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,144,152,154,155,156,157,161,163,166,167,168,169,173,174,175,180,181,],[-11,-30,-29,-28,-68,-65,-89,-27,-77,-66,-32,-31,88,-25,89,-67,-23,-24,-63,-62,-64,-61,-84,-18,-44,-43,-33,-45,-3,-58,-78,-53,-56,-50,-54,-46,-52,-60,-48,-49,-59,-51,154,156,-19,-47,-57,-55,-26,-42,156,-41,-81,167,-79,168,-39,-40,-72,-82,-83,174,-73,-80,-69,-70,-71,]),'LE':([3,6,9,11,16,19,25,27,30,31,32,34,36,38,46,49,50,52,60,61,63,88,89,91,92,93,94,95,100,101,104,110,111,112,113,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,140,141,144,146,150,151,152,154,155,156,158,161,163,166,167,168,169,171,173,174,175,178,180,181,],[-30,-29,-28,-68,-65,-89,-27,-77,-66,-32,-31,72,72,72,72,-30,72,72,-28,-27,72,-23,-24,-63,-62,-64,-61,72,72,72,-18,-44,-43,-33,-45,72,-3,-58,-78,None,72,-50,None,-46,None,72,-48,72,-59,None,72,72,72,72,-55,72,72,-42,72,72,72,72,-41,-81,72,-79,72,-39,-40,-72,-82,-83,72,72,-73,-80,-69,72,-70,-71,]),'RPAREN':([3,6,9,11,16,19,23,25,27,30,31,32,46,47,57,58,59,60,61,62,63,65,88,89,91,92,93,94,95,98,99,100,101,103,104,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,136,137,141,142,145,148,149,150,152,154,156,159,161,163,164,165,166,167,168,171,173,174,175,178,180,181,],[-30,-29,-28,-68,-65,-89,-11,-27,-77,-66,-32,-31,-67,-11,-11,-38,-34,-28,-27,112,113,-11,-23,-24,-63,-62,-64,-61,-84,-16,141,-15,143,-11,-18,147,-12,-13,-44,-43,-33,-45,-35,152,153,-3,-58,-78,-53,-56,-50,-54,-46,-52,-60,-48,-49,-59,-51,-19,-47,-57,-55,-42,-11,161,-11,-37,-36,-41,-81,-79,-17,-39,-40,-14,-35,-72,-82,-83,-36,-73,-80,-69,179,-70,-71,]),',':([3,6,9,11,16,19,25,27,30,31,32,36,37,46,60,61,63,88,89,91,92,93,94,95,100,104,108,110,111,112,113,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,136,137,138,141,146,150,152,154,156,161,163,166,167,168,173,174,175,180,181,],[-30,-29,-28,-68,-65,-89,-27,-77,-66,-32,-31,-25,90,-67,-28,-27,114,-23,-24,-63,-62,-64,-61,-84,142,-18,148,-44,-43,-33,-45,-3,-58,-78,-53,-56,-50,-54,-46,-52,-60,-48,-49,-59,-51,-19,-47,-57,-55,-26,-42,162,165,-41,-81,-79,-39,-40,-72,-82,-83,-73,-80,-69,-70,-71,]),'EXPT':([3,6,9,11,16,19,25,27,30,31,32,34,36,38,46,49,50,52,60,61,63,88,89,91,92,93,94,95,100,101,104,110,111,112,113,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,140,141,144,146,150,151,152,154,155,156,158,161,163,166,167,168,169,171,173,174,175,178,180,181,],[-30,-29,-28,-68,-65,-89,-27,-77,-66,-32,-31,74,74,74,74,-30,74,74,-28,-27,74,-23,-24,74,74,74,74,74,74,74,-18,-44,-43,-33,-45,74,-3,74,-78,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-42,74,74,74,74,-41,-81,74,-79,74,-39,-40,-72,-82,-83,74,74,-73,-80,-69,74,-70,-71,]),'LT':([3,6,9,11,16,19,25,27,30,31,32,34,36,38,46,49,50,52,60,61,63,88,89,91,92,93,94,95,100,101,104,110,111,112,113,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,140,141,144,146,150,151,152,154,155,156,158,161,163,166,167,168,169,171,173,174,175,178,180,181,],[-30,-29,-28,-68,-65,-89,-27,-77,-66,-32,-31,75,75,75,75,-30,75,75,-28,-27,75,-23,-24,-63,-62,-64,-61,75,75,75,-18,-44,-43,-33,-45,75,-3,-58,-78,None,75,-50,None,-46,None,75,-48,75,-59,None,75,75,75,75,-55,75,75,-42,75,75,75,75,-41,-81,75,-79,75,-39,-40,-72,-82,-83,75,75,-73,-80,-69,75,-70,-71,]),'PLUS':([3,6,9,11,16,19,25,27,30,31,32,34,36,38,46,49,50,52,60,61,63,88,89,91,92,93,94,95,100,101,104,110,111,112,113,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,140,141,144,146,150,151,152,154,155,156,158,161,163,166,167,168,169,171,173,174,175,178,180,181,],[-30,-29,-28,-68,-65,-89,-27,-77,-66,-32,-31,76,76,76,76,-30,76,76,-28,-27,76,-23,-24,76,76,76,76,76,76,76,-18,-44,-43,-33,-45,76,-3,-58,-78,76,76,-50,76,-46,76,76,-48,76,-59,76,76,76,76,76,-55,76,76,-42,76,76,76,76,-41,-81,76,-79,76,-39,-40,-72,-82,-83,76,76,-73,-80,-69,76,-70,-71,]),'OBJ_END':([3,6,9,11,16,17,19,25,27,30,31,32,46,53,55,88,89,91,92,93,94,95,104,110,111,112,113,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,136,137,141,146,152,154,156,161,162,163,166,167,168,170,173,174,175,180,181,],[-30,-29,-28,-68,-65,-11,-89,-27,-77,-66,-32,-31,-67,104,-20,-23,-24,-63,-62,-64,-61,-84,-18,-44,-43,-33,-45,-3,-58,-78,-53,-56,-50,-54,-46,-52,-60,-48,-49,-59,-51,-19,-47,-57,-55,-42,-21,-41,-81,-79,-39,-11,-40,-72,-82,-83,-22,-73,-80,-69,-70,-71,]),'TIMESEQUALS':([3,4,6,27,49,120,154,156,167,168,174,],[-76,41,-75,-77,-76,-78,-81,-79,-82,-83,-80,]),':':([3,6,9,11,16,19,25,27,30,31,32,46,54,83,88,89,91,92,93,94,95,102,104,110,111,112,113,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,141,144,152,154,156,161,163,166,167,168,173,174,175,180,181,],[-30,-29,-28,-68,-65,-89,-27,-77,-66,-32,-31,-67,105,132,-23,-24,-63,-62,-64,-61,-84,132,-18,-44,-43,-33,-45,-3,-58,-78,-53,-56,-50,-54,-46,-52,-60,-48,-49,-59,-51,157,-19,-47,-57,-55,-42,157,-41,-81,-79,-39,-40,-72,-82,-83,-73,-80,-69,-70,-71,]),'ASSIGN':([3,4,6,27,45,49,64,96,120,154,156,167,168,174,],[-76,43,-75,-77,97,-76,115,139,-78,-81,-79,-82,-83,-80,]),'$end':([0,2,3,6,8,9,11,15,16,18,19,20,21,25,26,27,30,31,32,33,34,38,46,49,52,56,64,66,69,88,89,91,92,93,94,95,104,106,110,111,112,113,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,136,137,140,141,151,152,154,156,158,160,161,163,166,167,168,173,174,175,180,181,],[-11,-93,-30,-29,-10,-28,-68,0,-65,-1,-89,-7,-6,-27,-4,-77,-66,-32,-31,-11,-2,-92,-67,-90,-91,-11,-85,-5,-9,-23,-24,-63,-62,-64,-61,-84,-18,-8,-44,-43,-33,-45,-3,-58,-78,-53,-56,-50,-54,-46,-52,-60,-48,-49,-59,-51,-19,-47,-57,-55,-88,-42,-87,-41,-81,-79,-86,-74,-39,-40,-72,-82,-83,-73,-80,-69,-70,-71,]),'FUNCTION':([0,1,2,7,12,14,23,26,29,33,39,40,41,42,43,47,48,56,65,66,67,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,97,102,103,105,114,115,132,139,142,157,165,177,],[22,22,22,22,22,22,22,-4,22,22,22,22,22,22,22,22,22,22,22,-5,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'GT':([3,6,9,11,16,19,25,27,30,31,32,34,36,38,46,49,50,52,60,61,63,88,89,91,92,93,94,95,100,101,104,110,111,112,113,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,140,141,144,146,150,151,152,154,155,156,158,161,163,166,167,168,169,171,173,174,175,178,180,181,],[-30,-29,-28,-68,-65,-89,-27,-77,-66,-32,-31,77,77,77,77,-30,77,77,-28,-27,77,-23,-24,-63,-62,-64,-61,77,77,77,-18,-44,-43,-33,-45,77,-3,-58,-78,None,77,-50,None,-46,None,77,-48,77,-59,None,77,77,77,77,-55,77,77,-42,77,77,77,77,-41,-81,77,-79,77,-39,-40,-72,-82,-83,77,77,-73,-80,-69,77,-70,-71,]),'XOR':([3,6,9,11,16,19,25,27,30,31,32,34,36,38,46,49,50,52,60,61,63,88,89,91,92,93,94,95,100,101,104,110,111,112,113,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,140,141,144,146,150,151,152,154,155,156,158,161,163,166,167,168,169,171,173,174,175,178,180,181,],[-30,-29,-28,-68,-65,-89,-27,-77,-66,-32,-31,78,78,78,-67,-30,78,78,-28,-27,78,-23,-24,-63,-62,-64,-61,78,78,78,-18,-44,-43,-33,-45,78,-3,-58,-78,-53,-56,-50,-54,-46,-52,-60,-48,-49,-59,-51,78,-19,-47,78,-55,78,78,-42,78,78,78,78,-41,-81,78,-79,78,-39,-40,-72,-82,-83,78,78,-73,-80,-69,78,-70,-71,]),'STRING':([0,1,2,7,12,14,23,26,29,33,39,40,41,42,43,47,48,56,65,66,67,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,97,102,103,105,114,115,132,139,142,157,165,177,],[11,11,11,11,11,11,11,-4,11,11,11,11,11,11,11,11,11,11,11,-5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'EQUALS':([3,6,9,11,16,19,25,27,30,31,32,34,36,38,46,49,50,52,60,61,63,88,89,91,92,93,94,95,100,101,104,110,111,112,113,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,140,141,144,146,150,151,152,154,155,156,158,161,163,166,167,168,169,171,173,174,175,178,180,181,],[-30,-29,-28,-68,-65,-89,-27,-77,-66,-32,-31,80,80,80,80,-30,80,80,-28,-27,80,-23,-24,-63,-62,-64,-61,80,80,80,-18,-44,-43,-33,-45,80,-3,-58,-78,-53,-56,-50,-54,-46,-52,80,-48,-49,-59,-51,80,-19,80,80,-55,80,80,-42,80,80,80,80,-41,-81,80,-79,80,-39,-40,-72,-82,-83,80,80,-73,-80,-69,80,-70,-71,]),'TIMES':([3,6,9,11,16,19,25,27,30,31,32,34,36,38,46,49,50,52,60,61,63,88,89,91,92,93,94,95,100,101,104,110,111,112,113,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,140,141,144,146,150,151,152,154,155,156,158,161,163,166,167,168,169,171,173,174,175,178,180,181,],[-30,-29,-28,-68,-65,-89,-27,-77,-66,-32,-31,81,81,81,81,-30,81,81,-28,-27,81,-23,-24,81,81,81,81,81,81,81,-18,-44,-43,-33,-45,81,-3,81,-78,81,81,-50,81,81,81,81,-48,81,-59,81,81,81,81,81,81,81,81,-42,81,81,81,81,-41,-81,81,-79,81,-39,-40,-72,-82,-83,81,81,-73,-80,-69,81,-70,-71,]),'OBJ_BEGIN':([0,1,2,7,12,14,23,26,29,33,39,40,41,42,43,47,48,56,65,66,67,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,97,102,103,105,114,115,132,139,142,157,165,177,],[17,17,17,17,17,17,17,-4,17,17,17,17,17,17,17,17,17,17,17,-5,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'GE':([3,6,9,11,16,19,25,27,30,31,32,34,36,38,46,49,50,52,60,61,63,88,89,91,92,93,94,95,100,101,104,110,111,112,113,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,140,141,144,146,150,151,152,154,155,156,158,161,163,166,167,168,169,171,173,174,175,178,180,181,],[-30,-29,-28,-68,-65,-89,-27,-77,-66,-32,-31,82,82,82,82,-30,82,82,-28,-27,82,-23,-24,-63,-62,-64,-61,82,82,82,-18,-44,-43,-33,-45,82,-3,-58,-78,None,82,-50,None,-46,None,82,-48,82,-59,None,82,82,82,82,-55,82,82,-42,82,82,82,82,-41,-81,82,-79,82,-39,-40,-72,-82,-83,82,82,-73,-80,-69,82,-70,-71,]),'LPAREN':([0,1,2,3,6,7,9,10,11,12,14,16,19,22,23,25,26,27,28,29,30,31,32,33,39,40,41,42,43,46,47,48,49,51,56,60,61,65,66,67,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,102,103,104,105,110,111,112,113,114,115,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,139,141,142,152,154,156,157,161,163,165,166,167,168,173,174,175,176,177,180,181,],[23,23,23,-30,-29,23,47,48,-68,23,23,-65,-89,57,23,65,-4,-77,67,23,-66,-32,-31,23,23,23,23,23,23,-67,23,23,-30,103,23,47,65,23,-5,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-23,-24,23,-63,-62,-64,-61,-84,23,23,23,-18,23,-44,-43,-33,-45,23,23,-3,-58,-78,-53,-56,-50,-54,-46,-52,-60,-48,-49,-59,-51,23,-19,-47,-57,-55,23,-42,23,-41,-81,-79,23,-39,-40,23,-72,-82,-83,-73,-80,-69,177,23,-70,-71,]),'IN':([3,6,9,11,16,19,25,27,30,31,32,34,36,38,46,49,50,52,60,61,63,88,89,91,92,93,94,95,100,101,104,110,111,112,113,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,140,141,144,146,150,151,152,154,155,156,158,161,163,166,167,168,169,171,173,174,175,178,180,181,],[-30,-29,-28,-68,-65,-89,-27,-77,-66,-32,-31,84,84,84,84,-30,84,84,-28,-27,84,-23,-24,-63,-62,-64,-61,84,84,84,-18,-44,-43,-33,-45,84,-3,-58,-78,-53,84,-50,-54,-46,-52,84,-48,84,-59,-51,84,None,84,84,-55,84,84,-42,84,84,84,84,-41,-81,84,-79,84,-39,-40,-72,-82,-83,84,84,-73,-80,-69,84,-70,-71,]),'VAR':([0,5,26,29,33,56,66,],[24,44,-4,24,24,24,-5,]),'ELSE':([118,166,180,],[-3,172,172,]),'STATEMENT_END':([0,2,3,6,9,11,16,18,19,20,25,26,27,29,30,31,32,34,38,46,49,52,64,88,89,91,92,93,94,95,104,110,111,112,113,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,136,137,140,141,151,152,154,156,158,160,161,163,166,167,168,173,174,175,180,181,],[26,-93,-30,-29,-28,-68,-65,-1,-89,26,-27,26,-77,26,-66,-32,-31,-2,-92,-67,-90,-91,-85,-23,-24,-63,-62,-64,-61,-84,-18,-44,-43,-33,-45,-3,-58,-78,-53,-56,-50,-54,-46,-52,-60,-48,-49,-59,-51,-19,-47,-57,-55,-88,-42,-87,-41,-81,-79,-86,-74,-39,-40,-72,-82,-83,-73,-80,-69,-70,-71,]),'ID':([0,1,2,5,7,12,13,14,17,23,24,26,29,33,39,40,41,42,43,44,47,48,56,57,65,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,97,102,103,105,114,115,132,139,142,148,157,162,165,177,],[27,27,27,45,27,27,51,27,54,27,64,-4,27,27,27,27,27,27,27,96,27,27,27,108,27,-5,27,27,120,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,108,27,54,27,27,]),'IF':([0,1,2,7,12,14,23,26,29,33,39,40,41,42,43,47,48,56,65,66,67,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,97,102,103,105,114,115,132,139,142,157,165,172,177,],[28,28,28,28,28,28,28,-4,28,28,28,28,28,28,28,28,28,28,28,-5,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,176,28,]),'AND':([3,6,9,11,16,19,25,27,30,31,32,34,36,38,46,49,50,52,60,61,63,88,89,91,92,93,94,95,100,101,104,110,111,112,113,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,140,141,144,146,150,151,152,154,155,156,158,161,163,166,167,168,169,171,173,174,175,178,180,181,],[-30,-29,-28,-68,-65,-89,-27,-77,-66,-32,-31,85,85,85,-67,-30,85,85,-28,-27,85,-23,-24,-63,-62,-64,-61,85,85,85,-18,-44,-43,-33,-45,85,-3,-58,-78,-53,-56,-50,-54,-46,-52,85,-48,-49,-59,-51,85,-19,-47,85,-55,85,85,-42,85,85,85,85,-41,-81,85,-79,85,-39,-40,-72,-82,-83,85,85,-73,-80,-69,85,-70,-71,]),'LBRACE':([0,26,29,33,56,66,143,147,153,172,179,],[29,-4,29,29,29,-5,29,29,29,29,29,]),'FALSE':([0,1,2,7,12,14,23,26,29,33,39,40,41,42,43,47,48,56,65,66,67,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,97,102,103,105,114,115,132,139,142,157,165,177,],[30,30,30,30,30,30,30,-4,30,30,30,30,30,30,30,30,30,30,30,-5,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'PLUSEQUALS':([3,4,6,27,49,120,154,156,167,168,174,],[-76,39,-75,-77,-76,-78,-81,-79,-82,-83,-80,]),'INT':([0,1,2,7,12,14,23,26,29,33,39,40,41,42,43,47,48,56,65,66,67,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,97,102,103,105,114,115,132,139,142,157,165,177,],[31,31,31,31,31,31,31,-4,31,31,31,31,31,31,31,31,31,31,31,-5,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'FLOAT':([0,1,2,7,12,14,23,26,29,33,39,40,41,42,43,47,48,56,65,66,67,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,97,102,103,105,114,115,132,139,142,157,165,177,],[32,32,32,32,32,32,32,-4,32,32,32,32,32,32,32,32,32,32,32,-5,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'DIVEQUALS':([3,4,6,27,49,120,154,156,167,168,174,],[-76,42,-75,-77,-76,-78,-81,-79,-82,-83,-80,]),'MINUSEQUALS':([3,4,6,27,49,120,154,156,167,168,174,],[-76,40,-75,-77,-76,-78,-81,-79,-82,-83,-80,]),'NOT':([0,1,2,7,12,14,23,26,29,33,39,40,41,42,43,47,48,56,65,66,67,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,97,102,103,105,114,115,132,139,142,157,165,177,],[7,7,7,7,7,7,7,-4,7,7,7,7,7,7,7,7,7,7,7,-5,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'OR':([3,6,9,11,16,19,25,27,30,31,32,34,36,38,46,49,50,52,60,61,63,88,89,91,92,93,94,95,100,101,104,110,111,112,113,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,140,141,144,146,150,151,152,154,155,156,158,161,163,166,167,168,169,171,173,174,175,178,180,181,],[-30,-29,-28,-68,-65,-89,-27,-77,-66,-32,-31,86,86,86,-67,-30,86,86,-28,-27,86,-23,-24,-63,-62,-64,-61,86,86,86,-18,-44,-43,-33,-45,86,-3,-58,-78,-53,-56,-50,-54,-46,-52,-60,-48,-49,-59,-51,86,-19,-47,-57,-55,86,86,-42,86,86,86,86,-41,-81,86,-79,86,-39,-40,-72,-82,-83,86,86,-73,-80,-69,86,-70,-71,]),'MOD':([3,6,9,11,16,19,25,27,30,31,32,34,36,38,46,49,50,52,60,61,63,88,89,91,92,93,94,95,100,101,104,110,111,112,113,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,140,141,144,146,150,151,152,154,155,156,158,161,163,166,167,168,169,171,173,174,175,178,180,181,],[-30,-29,-28,-68,-65,-89,-27,-77,-66,-32,-31,87,87,87,87,-30,87,87,-28,-27,87,-23,-24,87,87,87,87,87,87,87,-18,-44,-43,-33,-45,87,-3,87,-78,87,87,-50,87,87,87,87,-48,87,-59,87,87,87,87,87,-55,87,87,-42,87,87,87,87,-41,-81,87,-79,87,-39,-40,-72,-82,-83,87,87,-73,-80,-69,87,-70,-71,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'tuple_contents':([23,],[62,]),'tuple_contents2':([23,114,],[58,149,]),'statements':([0,29,],[15,68,]),'reference1':([0,1,2,7,12,14,23,29,33,39,40,41,42,43,47,48,56,65,67,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,97,102,103,105,114,115,132,139,142,157,165,177,],[3,3,3,3,49,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'reference':([0,1,2,7,12,14,23,29,33,39,40,41,42,43,47,48,56,65,67,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,97,102,103,105,114,115,132,139,142,157,165,177,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'property_list':([17,162,],[53,170,]),'list_contents':([1,],[37,]),'expression_list':([47,65,103,142,],[99,116,145,159,]),'block_statement':([0,29,33,56,143,147,153,172,179,],[18,18,18,18,160,163,166,175,180,]),'else_if_chain':([166,180,],[173,181,]),'statements1':([0,29,33,56,],[8,8,69,106,]),'paramlist':([57,148,],[107,164,]),'enders':([0,20,26,29,],[33,56,66,33,]),'statement':([0,29,33,56,],[20,20,20,20,]),'reference0':([0,1,2,7,12,14,23,29,33,39,40,41,42,43,47,48,56,65,67,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,97,102,103,105,114,115,132,139,142,157,165,177,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'expression1':([0,1,2,7,12,14,23,29,33,39,40,41,42,43,47,48,56,65,67,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,97,102,103,105,114,115,132,139,142,157,165,177,],[9,9,9,9,9,9,60,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'expression0':([0,1,2,7,12,14,23,29,33,39,40,41,42,43,47,48,56,65,67,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,97,102,103,105,114,115,132,139,142,157,165,177,],[25,25,25,25,25,25,61,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'expression':([0,1,2,7,12,14,23,29,33,39,40,41,42,43,47,48,56,65,67,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,97,102,103,105,114,115,132,139,142,157,165,177,],[34,36,38,46,50,52,63,34,34,91,92,93,94,95,100,101,34,100,117,119,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,140,144,100,146,150,151,155,158,100,169,171,178,]),'empty':([0,1,17,23,29,33,47,56,57,65,103,142,148,162,],[21,35,55,59,21,21,98,21,109,98,98,98,109,55,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statement -> block_statement','statement',1,'p_statement_block_statement','lang.py',223),
  ('statement -> expression','statement',1,'p_statement_expr','lang.py',227),
  ('block_statement -> LBRACE statements RBRACE','block_statement',3,'p_block_statement','lang.py',231),
  ('enders -> STATEMENT_END','enders',1,'p_enders','lang.py',235),
  ('enders -> STATEMENT_END enders','enders',2,'p_enders','lang.py',236),
  ('statements1 -> empty','statements1',1,'p_statements1_empty','lang.py',240),
  ('statements1 -> statement','statements1',1,'p_statements1_singleton','lang.py',244),
  ('statements1 -> statement enders statements1','statements1',3,'p_statements1_mult','lang.py',248),
  ('statements -> enders statements1','statements',2,'p_statements_start_enders','lang.py',252),
  ('statements -> statements1','statements',1,'p_statements_statements1','lang.py',256),
  ('empty -> <empty>','empty',0,'p_empty','lang.py',260),
  ('paramlist -> ID','paramlist',1,'p_param_list','lang.py',264),
  ('paramlist -> empty','paramlist',1,'p_param_list','lang.py',265),
  ('paramlist -> ID , paramlist','paramlist',3,'p_param_list','lang.py',266),
  ('expression_list -> expression','expression_list',1,'p_expression_list','lang.py',276),
  ('expression_list -> empty','expression_list',1,'p_expression_list','lang.py',277),
  ('expression_list -> expression , expression_list','expression_list',3,'p_expression_list','lang.py',278),
  ('expression0 -> OBJ_BEGIN property_list OBJ_END','expression0',3,'p_object_literal','lang.py',288),
  ('expression0 -> expression IN expression','expression0',3,'p_object_contains_query','lang.py',292),
  ('property_list -> empty','property_list',1,'p_property_list_empty','lang.py',296),
  ('property_list -> ID : expression','property_list',3,'p_property_list_singleton','lang.py',300),
  ('property_list -> ID : expression , property_list','property_list',5,'p_property_list_inductive','lang.py',304),
  ('expression0 -> LSQUARE empty RSQUARE','expression0',3,'p_list_empty','lang.py',309),
  ('expression0 -> LSQUARE list_contents RSQUARE','expression0',3,'p_list_nonempty','lang.py',313),
  ('list_contents -> expression','list_contents',1,'p_list_contents_singleton','lang.py',317),
  ('list_contents -> list_contents , expression','list_contents',3,'p_list_contents_more','lang.py',321),
  ('expression -> expression0','expression',1,'p_expression_expression1','lang.py',326),
  ('expression -> expression1','expression',1,'p_expression_expression1','lang.py',327),
  ('expression0 -> reference0','expression0',1,'p_expression0_reference0','lang.py',332),
  ('expression1 -> reference1','expression1',1,'p_expression1_reference1','lang.py',336),
  ('expression0 -> FLOAT','expression0',1,'p_expression_float','lang.py',340),
  ('expression0 -> INT','expression0',1,'p_expression_int','lang.py',344),
  ('expression0 -> LPAREN tuple_contents RPAREN','expression0',3,'p_expression_empty_tuple','lang.py',349),
  ('tuple_contents -> empty','tuple_contents',1,'p_tuple_empty_contents','lang.py',353),
  ('tuple_contents2 -> expression ,','tuple_contents2',2,'p_tuple_singleton_contents','lang.py',357),
  ('tuple_contents2 -> expression , expression','tuple_contents2',3,'p_tuple_pair_contents','lang.py',361),
  ('tuple_contents -> expression , tuple_contents2','tuple_contents',3,'p_tuple_contents','lang.py',365),
  ('tuple_contents -> tuple_contents2','tuple_contents',1,'p_tuple_contents_tuple_contents2','lang.py',369),
  ('expression0 -> NEW ID LPAREN expression_list RPAREN','expression0',5,'p_expression1_new_invocation','lang.py',375),
  ('expression0 -> FUNCTION LPAREN paramlist RPAREN block_statement','expression0',5,'p_expression_func_def','lang.py',379),
  ('expression0 -> expression0 LPAREN expression_list RPAREN','expression0',4,'p_expression0_func_call','lang.py',383),
  ('expression0 -> expression1 LPAREN expression_list RPAREN','expression0',4,'p_expression1_func_call','lang.py',387),
  ('expression0 -> LPAREN expression0 RPAREN','expression0',3,'p_paren_expression0','lang.py',394),
  ('expression1 -> LPAREN expression1 RPAREN','expression1',3,'p_paren_expression1','lang.py',398),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_paren_expression','lang.py',402),
  ('expression -> expression PLUS expression','expression',3,'p_expression_AddExpr_PLUS','lang.py',409),
  ('expression -> expression AND expression','expression',3,'p_expression_AndExpr_AND','lang.py',409),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_DivExpr_DIVIDE','lang.py',409),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_EqualsExpr_EQUALS','lang.py',409),
  ('expression -> expression EXPT expression','expression',3,'p_expression_ExptExpr_EXPT','lang.py',409),
  ('expression -> expression GE expression','expression',3,'p_expression_GeExpr_GE','lang.py',409),
  ('expression -> expression GT expression','expression',3,'p_expression_GtExpr_GT','lang.py',409),
  ('expression -> expression LE expression','expression',3,'p_expression_LeExpr_LE','lang.py',409),
  ('expression -> expression LT expression','expression',3,'p_expression_LtExpr_LT','lang.py',409),
  ('expression -> expression MOD expression','expression',3,'p_expression_ModExpr_MOD','lang.py',409),
  ('expression -> expression NE expression','expression',3,'p_expression_NeExpr_NE','lang.py',409),
  ('expression -> expression OR expression','expression',3,'p_expression_OrExpr_OR','lang.py',409),
  ('expression -> expression MINUS expression','expression',3,'p_expression_SubtractExpr_MINUS','lang.py',409),
  ('expression -> expression TIMES expression','expression',3,'p_expression_TimesExpr_TIMES','lang.py',409),
  ('expression -> expression XOR expression','expression',3,'p_expression_XorExpr_XOR','lang.py',409),
  ('expression -> reference DIVEQUALS expression','expression',3,'p_expression_DIVEQUALS','lang.py',417),
  ('expression -> reference MINUSEQUALS expression','expression',3,'p_expression_MINUSEQUALS','lang.py',417),
  ('expression -> reference PLUSEQUALS expression','expression',3,'p_expression_PLUSEQUALS','lang.py',417),
  ('expression -> reference TIMESEQUALS expression','expression',3,'p_expression_TIMESEQUALS','lang.py',417),
  ('expression0 -> TRUE','expression0',1,'p_expression_bool','lang.py',458),
  ('expression0 -> FALSE','expression0',1,'p_expression_bool','lang.py',459),
  ('expression0 -> NOT expression','expression0',2,'p_expression_not','lang.py',463),
  ('expression0 -> STRING','expression0',1,'p_expression_string','lang.py',469),
  ('else_if_chain -> ELSE block_statement','else_if_chain',2,'p_else_if_chain_else_end','lang.py',475),
  ('else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement','else_if_chain',6,'p_else_if_chain_else_if_end','lang.py',479),
  ('else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement else_if_chain','else_if_chain',7,'p_else_if_chain','lang.py',483),
  ('expression0 -> IF LPAREN expression RPAREN block_statement','expression0',5,'p_expression_if','lang.py',487),
  ('expression0 -> IF LPAREN expression RPAREN block_statement else_if_chain','expression0',6,'p_expression_if_else','lang.py',491),
  ('statement -> WHILE LPAREN expression RPAREN block_statement','statement',5,'p_statement_while','lang.py',496),
  ('reference -> reference0','reference',1,'p_ref1_or_ref2','lang.py',506),
  ('reference -> reference1','reference',1,'p_ref1_or_ref2','lang.py',507),
  ('reference0 -> ID','reference0',1,'p_ref_id','lang.py',511),
  ('reference1 -> expression DOT ID','reference1',3,'p_ref_attribute','lang.py',515),
  ('reference1 -> expression LSQUARE expression RSQUARE','reference1',4,'p_ref_subscript','lang.py',519),
  ('reference0 -> expression LSQUARE expression : expression RSQUARE','reference0',6,'p_ref_subscript_range','lang.py',523),
  ('reference0 -> expression LSQUARE : RSQUARE','reference0',4,'p_ref_subscript_whole','lang.py',527),
  ('reference0 -> expression LSQUARE : expression RSQUARE','reference0',5,'p_ref_subscript_left','lang.py',531),
  ('reference0 -> expression LSQUARE expression : RSQUARE','reference0',5,'p_ref_subscript_right','lang.py',535),
  ('expression0 -> reference ASSIGN expression','expression0',3,'p_expression_assign','lang.py',542),
  ('statement -> VAR ID','statement',2,'p_local_var_undefined','lang.py',546),
  ('statement -> CONST VAR ID ASSIGN expression','statement',5,'p_const_local_var','lang.py',550),
  ('statement -> VAR ID ASSIGN expression','statement',4,'p_local_var','lang.py',554),
  ('statement -> CONST ID ASSIGN expression','statement',4,'p_const_var','lang.py',558),
  ('expression0 -> UNDEFINED','expression0',1,'p_undefined','lang.py',565),
  ('statement -> DEL reference1','statement',2,'p_delete','lang.py',569),
  ('statement -> PRINT expression','statement',2,'p_print','lang.py',573),
  ('statement -> RETURN expression','statement',2,'p_return','lang.py',577),
  ('statement -> RETURN','statement',1,'p_return_nothing','lang.py',581),
]
