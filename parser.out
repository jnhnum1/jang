Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statements
Rule 1     statement -> block_statement
Rule 2     statement -> expression
Rule 3     block_statement -> LBRACE statements RBRACE
Rule 4     enders -> STATEMENT_END
Rule 5     enders -> STATEMENT_END enders
Rule 6     statements1 -> empty
Rule 7     statements1 -> statement
Rule 8     statements1 -> statement enders statements1
Rule 9     statements -> enders statements1
Rule 10    statements -> statements1
Rule 11    empty -> <empty>
Rule 12    paramlist -> ID
Rule 13    paramlist -> empty
Rule 14    paramlist -> ID , paramlist
Rule 15    expression_list -> expression
Rule 16    expression_list -> empty
Rule 17    expression_list -> expression , expression_list
Rule 18    expression0 -> OBJ_BEGIN property_list OBJ_END
Rule 19    expression0 -> expression IN expression
Rule 20    property_list -> empty
Rule 21    property_list -> ID : expression
Rule 22    property_list -> ID : expression , property_list
Rule 23    expression0 -> LSQUARE empty RSQUARE
Rule 24    expression0 -> LSQUARE list_contents RSQUARE
Rule 25    list_contents -> expression
Rule 26    list_contents -> list_contents , expression
Rule 27    expression -> expression0
Rule 28    expression -> expression1
Rule 29    expression0 -> reference0
Rule 30    expression1 -> reference1
Rule 31    expression0 -> FLOAT
Rule 32    expression0 -> INT
Rule 33    expression0 -> LPAREN tuple_contents RPAREN
Rule 34    tuple_contents -> empty
Rule 35    tuple_contents2 -> expression ,
Rule 36    tuple_contents2 -> expression , expression
Rule 37    tuple_contents -> expression , tuple_contents2
Rule 38    tuple_contents -> tuple_contents2
Rule 39    expression0 -> NEW ID LPAREN expression_list RPAREN
Rule 40    expression0 -> FUNCTION LPAREN paramlist RPAREN block_statement
Rule 41    expression0 -> expression0 LPAREN expression_list RPAREN
Rule 42    expression0 -> expression1 LPAREN expression_list RPAREN
Rule 43    expression0 -> LPAREN expression0 RPAREN
Rule 44    expression1 -> LPAREN expression1 RPAREN
Rule 45    expression -> LPAREN expression RPAREN
Rule 46    expression -> expression PLUS expression
Rule 47    expression -> expression AND expression
Rule 48    expression -> expression DIVIDE expression
Rule 49    expression -> expression EQUALS expression
Rule 50    expression -> expression EXPT expression
Rule 51    expression -> expression GE expression
Rule 52    expression -> expression GT expression
Rule 53    expression -> expression LE expression
Rule 54    expression -> expression LT expression
Rule 55    expression -> expression MOD expression
Rule 56    expression -> expression NE expression
Rule 57    expression -> expression OR expression
Rule 58    expression -> expression MINUS expression
Rule 59    expression -> expression TIMES expression
Rule 60    expression -> expression XOR expression
Rule 61    expression -> reference DIVEQUALS expression
Rule 62    expression -> reference MINUSEQUALS expression
Rule 63    expression -> reference PLUSEQUALS expression
Rule 64    expression -> reference TIMESEQUALS expression
Rule 65    expression0 -> TRUE
Rule 66    expression0 -> FALSE
Rule 67    expression0 -> NOT expression
Rule 68    expression0 -> STRING
Rule 69    else_if_chain -> ELSE block_statement
Rule 70    else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement
Rule 71    else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement else_if_chain
Rule 72    expression0 -> IF LPAREN expression RPAREN block_statement
Rule 73    expression0 -> IF LPAREN expression RPAREN block_statement else_if_chain
Rule 74    statement -> WHILE LPAREN expression RPAREN block_statement
Rule 75    reference -> reference0
Rule 76    reference -> reference1
Rule 77    reference0 -> ID
Rule 78    reference1 -> expression DOT ID
Rule 79    reference1 -> expression LSQUARE expression RSQUARE
Rule 80    reference0 -> expression LSQUARE expression : expression RSQUARE
Rule 81    reference0 -> expression LSQUARE : RSQUARE
Rule 82    reference0 -> expression LSQUARE : expression RSQUARE
Rule 83    reference0 -> expression LSQUARE expression : RSQUARE
Rule 84    expression0 -> reference ASSIGN expression
Rule 85    statement -> VAR ID
Rule 86    statement -> CONST VAR ID ASSIGN expression
Rule 87    statement -> VAR ID ASSIGN expression
Rule 88    statement -> CONST ID ASSIGN expression
Rule 89    expression0 -> UNDEFINED
Rule 90    statement -> DEL reference1
Rule 91    statement -> PRINT expression
Rule 92    statement -> RETURN expression
Rule 93    statement -> RETURN

Terminals, with rules where they appear

,                    : 14 17 22 26 35 36 37
:                    : 21 22 80 81 82 83
AND                  : 47
ASSIGN               : 84 86 87 88
CONST                : 86 88
DEL                  : 90
DIVEQUALS            : 61
DIVIDE               : 48
DOT                  : 78
ELSE                 : 69 70 71
EQUALS               : 49
EXPT                 : 50
FALSE                : 66
FLOAT                : 31
FUNCTION             : 40
GE                   : 51
GT                   : 52
ID                   : 12 14 21 22 39 77 78 85 86 87 88
IF                   : 70 71 72 73
IN                   : 19
INT                  : 32
LBRACE               : 3
LE                   : 53
LPAREN               : 33 39 40 41 42 43 44 45 70 71 72 73 74
LSQUARE              : 23 24 79 80 81 82 83
LT                   : 54
MINUS                : 58
MINUSEQUALS          : 62
MOD                  : 55
NE                   : 56
NEW                  : 39
NOT                  : 67
OBJ_BEGIN            : 18
OBJ_END              : 18
OR                   : 57
PLUS                 : 46
PLUSEQUALS           : 63
PRINT                : 91
RBRACE               : 3
RETURN               : 92 93
RPAREN               : 33 39 40 41 42 43 44 45 70 71 72 73 74
RSQUARE              : 23 24 79 80 81 82 83
STATEMENT_END        : 4 5
STRING               : 68
TIMES                : 59
TIMESEQUALS          : 64
TRUE                 : 65
UNDEFINED            : 89
VAR                  : 85 86 87
WHILE                : 74
XOR                  : 60
error                : 

Nonterminals, with rules where they appear

block_statement      : 1 40 69 70 71 72 73 74
else_if_chain        : 71 73
empty                : 6 13 16 20 23 34
enders               : 5 8 9
expression           : 2 15 17 19 19 21 22 25 26 35 36 36 37 45 46 46 47 47 48 48 49 49 50 50 51 51 52 52 53 53 54 54 55 55 56 56 57 57 58 58 59 59 60 60 61 62 63 64 67 70 71 72 73 74 78 79 79 80 80 80 81 82 82 83 83 84 86 87 88 91 92
expression0          : 27 41 43
expression1          : 28 42 44
expression_list      : 17 39 41 42
list_contents        : 24 26
paramlist            : 14 40
property_list        : 18 22
reference            : 61 62 63 64 84
reference0           : 29 75
reference1           : 30 76 90
statement            : 7 8
statements           : 3 0
statements1          : 8 9 10
tuple_contents       : 33
tuple_contents2      : 37 38

Parsing method: LALR

state 0

    (0) S' -> . statements
    (9) statements -> . enders statements1
    (10) statements -> . statements1
    (4) enders -> . STATEMENT_END
    (5) enders -> . STATEMENT_END enders
    (6) statements1 -> . empty
    (7) statements1 -> . statement
    (8) statements1 -> . statement enders statements1
    (11) empty -> .
    (1) statement -> . block_statement
    (2) statement -> . expression
    (74) statement -> . WHILE LPAREN expression RPAREN block_statement
    (85) statement -> . VAR ID
    (86) statement -> . CONST VAR ID ASSIGN expression
    (87) statement -> . VAR ID ASSIGN expression
    (88) statement -> . CONST ID ASSIGN expression
    (90) statement -> . DEL reference1
    (91) statement -> . PRINT expression
    (92) statement -> . RETURN expression
    (93) statement -> . RETURN
    (3) block_statement -> . LBRACE statements RBRACE
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    STATEMENT_END   shift and go to state 26
    $end            reduce using rule 11 (empty -> .)
    WHILE           shift and go to state 10
    VAR             shift and go to state 24
    CONST           shift and go to state 5
    DEL             shift and go to state 12
    PRINT           shift and go to state 14
    RETURN          shift and go to state 2
    LBRACE          shift and go to state 29
    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    statements                     shift and go to state 15
    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    block_statement                shift and go to state 18
    statements1                    shift and go to state 8
    enders                         shift and go to state 33
    statement                      shift and go to state 20
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 34
    empty                          shift and go to state 21

state 1

    (23) expression0 -> LSQUARE . empty RSQUARE
    (24) expression0 -> LSQUARE . list_contents RSQUARE
    (11) empty -> .
    (25) list_contents -> . expression
    (26) list_contents -> . list_contents , expression
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    RSQUARE         reduce using rule 11 (empty -> .)
    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    list_contents                  shift and go to state 37
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 36
    empty                          shift and go to state 35

state 2

    (92) statement -> RETURN . expression
    (93) statement -> RETURN .
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    STATEMENT_END   reduce using rule 93 (statement -> RETURN .)
    RBRACE          reduce using rule 93 (statement -> RETURN .)
    $end            reduce using rule 93 (statement -> RETURN .)
    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 38

state 3

    (30) expression1 -> reference1 .
    (76) reference -> reference1 .

    LPAREN          reduce using rule 30 (expression1 -> reference1 .)
    PLUS            reduce using rule 30 (expression1 -> reference1 .)
    AND             reduce using rule 30 (expression1 -> reference1 .)
    DIVIDE          reduce using rule 30 (expression1 -> reference1 .)
    EQUALS          reduce using rule 30 (expression1 -> reference1 .)
    EXPT            reduce using rule 30 (expression1 -> reference1 .)
    GE              reduce using rule 30 (expression1 -> reference1 .)
    GT              reduce using rule 30 (expression1 -> reference1 .)
    LE              reduce using rule 30 (expression1 -> reference1 .)
    LT              reduce using rule 30 (expression1 -> reference1 .)
    MOD             reduce using rule 30 (expression1 -> reference1 .)
    NE              reduce using rule 30 (expression1 -> reference1 .)
    OR              reduce using rule 30 (expression1 -> reference1 .)
    MINUS           reduce using rule 30 (expression1 -> reference1 .)
    TIMES           reduce using rule 30 (expression1 -> reference1 .)
    XOR             reduce using rule 30 (expression1 -> reference1 .)
    IN              reduce using rule 30 (expression1 -> reference1 .)
    LSQUARE         reduce using rule 30 (expression1 -> reference1 .)
    DOT             reduce using rule 30 (expression1 -> reference1 .)
    STATEMENT_END   reduce using rule 30 (expression1 -> reference1 .)
    $end            reduce using rule 30 (expression1 -> reference1 .)
    RSQUARE         reduce using rule 30 (expression1 -> reference1 .)
    ,               reduce using rule 30 (expression1 -> reference1 .)
    RBRACE          reduce using rule 30 (expression1 -> reference1 .)
    RPAREN          reduce using rule 30 (expression1 -> reference1 .)
    :               reduce using rule 30 (expression1 -> reference1 .)
    OBJ_END         reduce using rule 30 (expression1 -> reference1 .)
    DIVEQUALS       reduce using rule 76 (reference -> reference1 .)
    MINUSEQUALS     reduce using rule 76 (reference -> reference1 .)
    PLUSEQUALS      reduce using rule 76 (reference -> reference1 .)
    TIMESEQUALS     reduce using rule 76 (reference -> reference1 .)
    ASSIGN          reduce using rule 76 (reference -> reference1 .)


state 4

    (61) expression -> reference . DIVEQUALS expression
    (62) expression -> reference . MINUSEQUALS expression
    (63) expression -> reference . PLUSEQUALS expression
    (64) expression -> reference . TIMESEQUALS expression
    (84) expression0 -> reference . ASSIGN expression

    DIVEQUALS       shift and go to state 42
    MINUSEQUALS     shift and go to state 40
    PLUSEQUALS      shift and go to state 39
    TIMESEQUALS     shift and go to state 41
    ASSIGN          shift and go to state 43


state 5

    (86) statement -> CONST . VAR ID ASSIGN expression
    (88) statement -> CONST . ID ASSIGN expression

    VAR             shift and go to state 44
    ID              shift and go to state 45


state 6

    (29) expression0 -> reference0 .
    (75) reference -> reference0 .

    LPAREN          reduce using rule 29 (expression0 -> reference0 .)
    PLUS            reduce using rule 29 (expression0 -> reference0 .)
    AND             reduce using rule 29 (expression0 -> reference0 .)
    DIVIDE          reduce using rule 29 (expression0 -> reference0 .)
    EQUALS          reduce using rule 29 (expression0 -> reference0 .)
    EXPT            reduce using rule 29 (expression0 -> reference0 .)
    GE              reduce using rule 29 (expression0 -> reference0 .)
    GT              reduce using rule 29 (expression0 -> reference0 .)
    LE              reduce using rule 29 (expression0 -> reference0 .)
    LT              reduce using rule 29 (expression0 -> reference0 .)
    MOD             reduce using rule 29 (expression0 -> reference0 .)
    NE              reduce using rule 29 (expression0 -> reference0 .)
    OR              reduce using rule 29 (expression0 -> reference0 .)
    MINUS           reduce using rule 29 (expression0 -> reference0 .)
    TIMES           reduce using rule 29 (expression0 -> reference0 .)
    XOR             reduce using rule 29 (expression0 -> reference0 .)
    IN              reduce using rule 29 (expression0 -> reference0 .)
    LSQUARE         reduce using rule 29 (expression0 -> reference0 .)
    DOT             reduce using rule 29 (expression0 -> reference0 .)
    RSQUARE         reduce using rule 29 (expression0 -> reference0 .)
    ,               reduce using rule 29 (expression0 -> reference0 .)
    STATEMENT_END   reduce using rule 29 (expression0 -> reference0 .)
    $end            reduce using rule 29 (expression0 -> reference0 .)
    RBRACE          reduce using rule 29 (expression0 -> reference0 .)
    RPAREN          reduce using rule 29 (expression0 -> reference0 .)
    :               reduce using rule 29 (expression0 -> reference0 .)
    OBJ_END         reduce using rule 29 (expression0 -> reference0 .)
    DIVEQUALS       reduce using rule 75 (reference -> reference0 .)
    MINUSEQUALS     reduce using rule 75 (reference -> reference0 .)
    PLUSEQUALS      reduce using rule 75 (reference -> reference0 .)
    TIMESEQUALS     reduce using rule 75 (reference -> reference0 .)
    ASSIGN          reduce using rule 75 (reference -> reference0 .)


state 7

    (67) expression0 -> NOT . expression
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 46

state 8

    (10) statements -> statements1 .

    $end            reduce using rule 10 (statements -> statements1 .)
    RBRACE          reduce using rule 10 (statements -> statements1 .)


state 9

    (28) expression -> expression1 .
    (42) expression0 -> expression1 . LPAREN expression_list RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    PLUS            reduce using rule 28 (expression -> expression1 .)
    AND             reduce using rule 28 (expression -> expression1 .)
    DIVIDE          reduce using rule 28 (expression -> expression1 .)
    EQUALS          reduce using rule 28 (expression -> expression1 .)
    EXPT            reduce using rule 28 (expression -> expression1 .)
    GE              reduce using rule 28 (expression -> expression1 .)
    GT              reduce using rule 28 (expression -> expression1 .)
    LE              reduce using rule 28 (expression -> expression1 .)
    LT              reduce using rule 28 (expression -> expression1 .)
    MOD             reduce using rule 28 (expression -> expression1 .)
    NE              reduce using rule 28 (expression -> expression1 .)
    OR              reduce using rule 28 (expression -> expression1 .)
    MINUS           reduce using rule 28 (expression -> expression1 .)
    TIMES           reduce using rule 28 (expression -> expression1 .)
    XOR             reduce using rule 28 (expression -> expression1 .)
    IN              reduce using rule 28 (expression -> expression1 .)
    LSQUARE         reduce using rule 28 (expression -> expression1 .)
    DOT             reduce using rule 28 (expression -> expression1 .)
    STATEMENT_END   reduce using rule 28 (expression -> expression1 .)
    $end            reduce using rule 28 (expression -> expression1 .)
    RSQUARE         reduce using rule 28 (expression -> expression1 .)
    ,               reduce using rule 28 (expression -> expression1 .)
    RBRACE          reduce using rule 28 (expression -> expression1 .)
    RPAREN          reduce using rule 28 (expression -> expression1 .)
    :               reduce using rule 28 (expression -> expression1 .)
    OBJ_END         reduce using rule 28 (expression -> expression1 .)
    LPAREN          shift and go to state 47

  ! LPAREN          [ reduce using rule 28 (expression -> expression1 .) ]


state 10

    (74) statement -> WHILE . LPAREN expression RPAREN block_statement

    LPAREN          shift and go to state 48


state 11

    (68) expression0 -> STRING .

    LPAREN          reduce using rule 68 (expression0 -> STRING .)
    PLUS            reduce using rule 68 (expression0 -> STRING .)
    AND             reduce using rule 68 (expression0 -> STRING .)
    DIVIDE          reduce using rule 68 (expression0 -> STRING .)
    EQUALS          reduce using rule 68 (expression0 -> STRING .)
    EXPT            reduce using rule 68 (expression0 -> STRING .)
    GE              reduce using rule 68 (expression0 -> STRING .)
    GT              reduce using rule 68 (expression0 -> STRING .)
    LE              reduce using rule 68 (expression0 -> STRING .)
    LT              reduce using rule 68 (expression0 -> STRING .)
    MOD             reduce using rule 68 (expression0 -> STRING .)
    NE              reduce using rule 68 (expression0 -> STRING .)
    OR              reduce using rule 68 (expression0 -> STRING .)
    MINUS           reduce using rule 68 (expression0 -> STRING .)
    TIMES           reduce using rule 68 (expression0 -> STRING .)
    XOR             reduce using rule 68 (expression0 -> STRING .)
    IN              reduce using rule 68 (expression0 -> STRING .)
    LSQUARE         reduce using rule 68 (expression0 -> STRING .)
    DOT             reduce using rule 68 (expression0 -> STRING .)
    RSQUARE         reduce using rule 68 (expression0 -> STRING .)
    ,               reduce using rule 68 (expression0 -> STRING .)
    STATEMENT_END   reduce using rule 68 (expression0 -> STRING .)
    $end            reduce using rule 68 (expression0 -> STRING .)
    RBRACE          reduce using rule 68 (expression0 -> STRING .)
    RPAREN          reduce using rule 68 (expression0 -> STRING .)
    :               reduce using rule 68 (expression0 -> STRING .)
    OBJ_END         reduce using rule 68 (expression0 -> STRING .)


state 12

    (90) statement -> DEL . reference1
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE

    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference                      shift and go to state 4
    reference1                     shift and go to state 49
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 50

state 13

    (39) expression0 -> NEW . ID LPAREN expression_list RPAREN

    ID              shift and go to state 51


state 14

    (91) statement -> PRINT . expression
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 52

state 15

    (0) S' -> statements .



state 16

    (65) expression0 -> TRUE .

    LPAREN          reduce using rule 65 (expression0 -> TRUE .)
    PLUS            reduce using rule 65 (expression0 -> TRUE .)
    AND             reduce using rule 65 (expression0 -> TRUE .)
    DIVIDE          reduce using rule 65 (expression0 -> TRUE .)
    EQUALS          reduce using rule 65 (expression0 -> TRUE .)
    EXPT            reduce using rule 65 (expression0 -> TRUE .)
    GE              reduce using rule 65 (expression0 -> TRUE .)
    GT              reduce using rule 65 (expression0 -> TRUE .)
    LE              reduce using rule 65 (expression0 -> TRUE .)
    LT              reduce using rule 65 (expression0 -> TRUE .)
    MOD             reduce using rule 65 (expression0 -> TRUE .)
    NE              reduce using rule 65 (expression0 -> TRUE .)
    OR              reduce using rule 65 (expression0 -> TRUE .)
    MINUS           reduce using rule 65 (expression0 -> TRUE .)
    TIMES           reduce using rule 65 (expression0 -> TRUE .)
    XOR             reduce using rule 65 (expression0 -> TRUE .)
    IN              reduce using rule 65 (expression0 -> TRUE .)
    LSQUARE         reduce using rule 65 (expression0 -> TRUE .)
    DOT             reduce using rule 65 (expression0 -> TRUE .)
    RSQUARE         reduce using rule 65 (expression0 -> TRUE .)
    ,               reduce using rule 65 (expression0 -> TRUE .)
    STATEMENT_END   reduce using rule 65 (expression0 -> TRUE .)
    $end            reduce using rule 65 (expression0 -> TRUE .)
    RBRACE          reduce using rule 65 (expression0 -> TRUE .)
    RPAREN          reduce using rule 65 (expression0 -> TRUE .)
    :               reduce using rule 65 (expression0 -> TRUE .)
    OBJ_END         reduce using rule 65 (expression0 -> TRUE .)


state 17

    (18) expression0 -> OBJ_BEGIN . property_list OBJ_END
    (20) property_list -> . empty
    (21) property_list -> . ID : expression
    (22) property_list -> . ID : expression , property_list
    (11) empty -> .

    ID              shift and go to state 54
    OBJ_END         reduce using rule 11 (empty -> .)

    empty                          shift and go to state 55
    property_list                  shift and go to state 53

state 18

    (1) statement -> block_statement .

    STATEMENT_END   reduce using rule 1 (statement -> block_statement .)
    RBRACE          reduce using rule 1 (statement -> block_statement .)
    $end            reduce using rule 1 (statement -> block_statement .)


state 19

    (89) expression0 -> UNDEFINED .

    LPAREN          reduce using rule 89 (expression0 -> UNDEFINED .)
    PLUS            reduce using rule 89 (expression0 -> UNDEFINED .)
    AND             reduce using rule 89 (expression0 -> UNDEFINED .)
    DIVIDE          reduce using rule 89 (expression0 -> UNDEFINED .)
    EQUALS          reduce using rule 89 (expression0 -> UNDEFINED .)
    EXPT            reduce using rule 89 (expression0 -> UNDEFINED .)
    GE              reduce using rule 89 (expression0 -> UNDEFINED .)
    GT              reduce using rule 89 (expression0 -> UNDEFINED .)
    LE              reduce using rule 89 (expression0 -> UNDEFINED .)
    LT              reduce using rule 89 (expression0 -> UNDEFINED .)
    MOD             reduce using rule 89 (expression0 -> UNDEFINED .)
    NE              reduce using rule 89 (expression0 -> UNDEFINED .)
    OR              reduce using rule 89 (expression0 -> UNDEFINED .)
    MINUS           reduce using rule 89 (expression0 -> UNDEFINED .)
    TIMES           reduce using rule 89 (expression0 -> UNDEFINED .)
    XOR             reduce using rule 89 (expression0 -> UNDEFINED .)
    IN              reduce using rule 89 (expression0 -> UNDEFINED .)
    LSQUARE         reduce using rule 89 (expression0 -> UNDEFINED .)
    DOT             reduce using rule 89 (expression0 -> UNDEFINED .)
    RSQUARE         reduce using rule 89 (expression0 -> UNDEFINED .)
    ,               reduce using rule 89 (expression0 -> UNDEFINED .)
    STATEMENT_END   reduce using rule 89 (expression0 -> UNDEFINED .)
    $end            reduce using rule 89 (expression0 -> UNDEFINED .)
    RBRACE          reduce using rule 89 (expression0 -> UNDEFINED .)
    RPAREN          reduce using rule 89 (expression0 -> UNDEFINED .)
    :               reduce using rule 89 (expression0 -> UNDEFINED .)
    OBJ_END         reduce using rule 89 (expression0 -> UNDEFINED .)


state 20

    (7) statements1 -> statement .
    (8) statements1 -> statement . enders statements1
    (4) enders -> . STATEMENT_END
    (5) enders -> . STATEMENT_END enders

    $end            reduce using rule 7 (statements1 -> statement .)
    RBRACE          reduce using rule 7 (statements1 -> statement .)
    STATEMENT_END   shift and go to state 26

    enders                         shift and go to state 56

state 21

    (6) statements1 -> empty .

    $end            reduce using rule 6 (statements1 -> empty .)
    RBRACE          reduce using rule 6 (statements1 -> empty .)


state 22

    (40) expression0 -> FUNCTION . LPAREN paramlist RPAREN block_statement

    LPAREN          shift and go to state 57


state 23

    (45) expression -> LPAREN . expression RPAREN
    (33) expression0 -> LPAREN . tuple_contents RPAREN
    (43) expression0 -> LPAREN . expression0 RPAREN
    (44) expression1 -> LPAREN . expression1 RPAREN
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (34) tuple_contents -> . empty
    (37) tuple_contents -> . expression , tuple_contents2
    (38) tuple_contents -> . tuple_contents2
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (11) empty -> .
    (35) tuple_contents2 -> . expression ,
    (36) tuple_contents2 -> . expression , expression
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    RPAREN          reduce using rule 11 (empty -> .)
    ID              shift and go to state 27

    tuple_contents                 shift and go to state 62
    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    tuple_contents2                shift and go to state 58
    reference0                     shift and go to state 6
    expression1                    shift and go to state 60
    expression0                    shift and go to state 61
    expression                     shift and go to state 63
    empty                          shift and go to state 59

state 24

    (85) statement -> VAR . ID
    (87) statement -> VAR . ID ASSIGN expression

    ID              shift and go to state 64


state 25

    (27) expression -> expression0 .
    (41) expression0 -> expression0 . LPAREN expression_list RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    PLUS            reduce using rule 27 (expression -> expression0 .)
    AND             reduce using rule 27 (expression -> expression0 .)
    DIVIDE          reduce using rule 27 (expression -> expression0 .)
    EQUALS          reduce using rule 27 (expression -> expression0 .)
    EXPT            reduce using rule 27 (expression -> expression0 .)
    GE              reduce using rule 27 (expression -> expression0 .)
    GT              reduce using rule 27 (expression -> expression0 .)
    LE              reduce using rule 27 (expression -> expression0 .)
    LT              reduce using rule 27 (expression -> expression0 .)
    MOD             reduce using rule 27 (expression -> expression0 .)
    NE              reduce using rule 27 (expression -> expression0 .)
    OR              reduce using rule 27 (expression -> expression0 .)
    MINUS           reduce using rule 27 (expression -> expression0 .)
    TIMES           reduce using rule 27 (expression -> expression0 .)
    XOR             reduce using rule 27 (expression -> expression0 .)
    IN              reduce using rule 27 (expression -> expression0 .)
    LSQUARE         reduce using rule 27 (expression -> expression0 .)
    DOT             reduce using rule 27 (expression -> expression0 .)
    STATEMENT_END   reduce using rule 27 (expression -> expression0 .)
    $end            reduce using rule 27 (expression -> expression0 .)
    RSQUARE         reduce using rule 27 (expression -> expression0 .)
    ,               reduce using rule 27 (expression -> expression0 .)
    RBRACE          reduce using rule 27 (expression -> expression0 .)
    RPAREN          reduce using rule 27 (expression -> expression0 .)
    :               reduce using rule 27 (expression -> expression0 .)
    OBJ_END         reduce using rule 27 (expression -> expression0 .)
    LPAREN          shift and go to state 65

  ! LPAREN          [ reduce using rule 27 (expression -> expression0 .) ]


state 26

    (4) enders -> STATEMENT_END .
    (5) enders -> STATEMENT_END . enders
    (4) enders -> . STATEMENT_END
    (5) enders -> . STATEMENT_END enders

    WHILE           reduce using rule 4 (enders -> STATEMENT_END .)
    VAR             reduce using rule 4 (enders -> STATEMENT_END .)
    CONST           reduce using rule 4 (enders -> STATEMENT_END .)
    DEL             reduce using rule 4 (enders -> STATEMENT_END .)
    PRINT           reduce using rule 4 (enders -> STATEMENT_END .)
    RETURN          reduce using rule 4 (enders -> STATEMENT_END .)
    LBRACE          reduce using rule 4 (enders -> STATEMENT_END .)
    LPAREN          reduce using rule 4 (enders -> STATEMENT_END .)
    OBJ_BEGIN       reduce using rule 4 (enders -> STATEMENT_END .)
    LSQUARE         reduce using rule 4 (enders -> STATEMENT_END .)
    FLOAT           reduce using rule 4 (enders -> STATEMENT_END .)
    INT             reduce using rule 4 (enders -> STATEMENT_END .)
    NEW             reduce using rule 4 (enders -> STATEMENT_END .)
    FUNCTION        reduce using rule 4 (enders -> STATEMENT_END .)
    TRUE            reduce using rule 4 (enders -> STATEMENT_END .)
    FALSE           reduce using rule 4 (enders -> STATEMENT_END .)
    NOT             reduce using rule 4 (enders -> STATEMENT_END .)
    STRING          reduce using rule 4 (enders -> STATEMENT_END .)
    IF              reduce using rule 4 (enders -> STATEMENT_END .)
    UNDEFINED       reduce using rule 4 (enders -> STATEMENT_END .)
    ID              reduce using rule 4 (enders -> STATEMENT_END .)
    RBRACE          reduce using rule 4 (enders -> STATEMENT_END .)
    $end            reduce using rule 4 (enders -> STATEMENT_END .)
    STATEMENT_END   shift and go to state 26

    enders                         shift and go to state 66

state 27

    (77) reference0 -> ID .

    PLUS            reduce using rule 77 (reference0 -> ID .)
    AND             reduce using rule 77 (reference0 -> ID .)
    DIVIDE          reduce using rule 77 (reference0 -> ID .)
    EQUALS          reduce using rule 77 (reference0 -> ID .)
    EXPT            reduce using rule 77 (reference0 -> ID .)
    GE              reduce using rule 77 (reference0 -> ID .)
    GT              reduce using rule 77 (reference0 -> ID .)
    LE              reduce using rule 77 (reference0 -> ID .)
    LT              reduce using rule 77 (reference0 -> ID .)
    MOD             reduce using rule 77 (reference0 -> ID .)
    NE              reduce using rule 77 (reference0 -> ID .)
    OR              reduce using rule 77 (reference0 -> ID .)
    MINUS           reduce using rule 77 (reference0 -> ID .)
    TIMES           reduce using rule 77 (reference0 -> ID .)
    XOR             reduce using rule 77 (reference0 -> ID .)
    IN              reduce using rule 77 (reference0 -> ID .)
    LSQUARE         reduce using rule 77 (reference0 -> ID .)
    DOT             reduce using rule 77 (reference0 -> ID .)
    LPAREN          reduce using rule 77 (reference0 -> ID .)
    STATEMENT_END   reduce using rule 77 (reference0 -> ID .)
    $end            reduce using rule 77 (reference0 -> ID .)
    RSQUARE         reduce using rule 77 (reference0 -> ID .)
    ,               reduce using rule 77 (reference0 -> ID .)
    RBRACE          reduce using rule 77 (reference0 -> ID .)
    RPAREN          reduce using rule 77 (reference0 -> ID .)
    :               reduce using rule 77 (reference0 -> ID .)
    OBJ_END         reduce using rule 77 (reference0 -> ID .)
    DIVEQUALS       reduce using rule 77 (reference0 -> ID .)
    MINUSEQUALS     reduce using rule 77 (reference0 -> ID .)
    PLUSEQUALS      reduce using rule 77 (reference0 -> ID .)
    TIMESEQUALS     reduce using rule 77 (reference0 -> ID .)
    ASSIGN          reduce using rule 77 (reference0 -> ID .)


state 28

    (72) expression0 -> IF . LPAREN expression RPAREN block_statement
    (73) expression0 -> IF . LPAREN expression RPAREN block_statement else_if_chain

    LPAREN          shift and go to state 67


state 29

    (3) block_statement -> LBRACE . statements RBRACE
    (9) statements -> . enders statements1
    (10) statements -> . statements1
    (4) enders -> . STATEMENT_END
    (5) enders -> . STATEMENT_END enders
    (6) statements1 -> . empty
    (7) statements1 -> . statement
    (8) statements1 -> . statement enders statements1
    (11) empty -> .
    (1) statement -> . block_statement
    (2) statement -> . expression
    (74) statement -> . WHILE LPAREN expression RPAREN block_statement
    (85) statement -> . VAR ID
    (86) statement -> . CONST VAR ID ASSIGN expression
    (87) statement -> . VAR ID ASSIGN expression
    (88) statement -> . CONST ID ASSIGN expression
    (90) statement -> . DEL reference1
    (91) statement -> . PRINT expression
    (92) statement -> . RETURN expression
    (93) statement -> . RETURN
    (3) block_statement -> . LBRACE statements RBRACE
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    STATEMENT_END   shift and go to state 26
    RBRACE          reduce using rule 11 (empty -> .)
    WHILE           shift and go to state 10
    VAR             shift and go to state 24
    CONST           shift and go to state 5
    DEL             shift and go to state 12
    PRINT           shift and go to state 14
    RETURN          shift and go to state 2
    LBRACE          shift and go to state 29
    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    statements                     shift and go to state 68
    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    block_statement                shift and go to state 18
    statements1                    shift and go to state 8
    enders                         shift and go to state 33
    statement                      shift and go to state 20
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 34
    empty                          shift and go to state 21

state 30

    (66) expression0 -> FALSE .

    LPAREN          reduce using rule 66 (expression0 -> FALSE .)
    PLUS            reduce using rule 66 (expression0 -> FALSE .)
    AND             reduce using rule 66 (expression0 -> FALSE .)
    DIVIDE          reduce using rule 66 (expression0 -> FALSE .)
    EQUALS          reduce using rule 66 (expression0 -> FALSE .)
    EXPT            reduce using rule 66 (expression0 -> FALSE .)
    GE              reduce using rule 66 (expression0 -> FALSE .)
    GT              reduce using rule 66 (expression0 -> FALSE .)
    LE              reduce using rule 66 (expression0 -> FALSE .)
    LT              reduce using rule 66 (expression0 -> FALSE .)
    MOD             reduce using rule 66 (expression0 -> FALSE .)
    NE              reduce using rule 66 (expression0 -> FALSE .)
    OR              reduce using rule 66 (expression0 -> FALSE .)
    MINUS           reduce using rule 66 (expression0 -> FALSE .)
    TIMES           reduce using rule 66 (expression0 -> FALSE .)
    XOR             reduce using rule 66 (expression0 -> FALSE .)
    IN              reduce using rule 66 (expression0 -> FALSE .)
    LSQUARE         reduce using rule 66 (expression0 -> FALSE .)
    DOT             reduce using rule 66 (expression0 -> FALSE .)
    RSQUARE         reduce using rule 66 (expression0 -> FALSE .)
    ,               reduce using rule 66 (expression0 -> FALSE .)
    STATEMENT_END   reduce using rule 66 (expression0 -> FALSE .)
    $end            reduce using rule 66 (expression0 -> FALSE .)
    RBRACE          reduce using rule 66 (expression0 -> FALSE .)
    RPAREN          reduce using rule 66 (expression0 -> FALSE .)
    :               reduce using rule 66 (expression0 -> FALSE .)
    OBJ_END         reduce using rule 66 (expression0 -> FALSE .)


state 31

    (32) expression0 -> INT .

    LPAREN          reduce using rule 32 (expression0 -> INT .)
    PLUS            reduce using rule 32 (expression0 -> INT .)
    AND             reduce using rule 32 (expression0 -> INT .)
    DIVIDE          reduce using rule 32 (expression0 -> INT .)
    EQUALS          reduce using rule 32 (expression0 -> INT .)
    EXPT            reduce using rule 32 (expression0 -> INT .)
    GE              reduce using rule 32 (expression0 -> INT .)
    GT              reduce using rule 32 (expression0 -> INT .)
    LE              reduce using rule 32 (expression0 -> INT .)
    LT              reduce using rule 32 (expression0 -> INT .)
    MOD             reduce using rule 32 (expression0 -> INT .)
    NE              reduce using rule 32 (expression0 -> INT .)
    OR              reduce using rule 32 (expression0 -> INT .)
    MINUS           reduce using rule 32 (expression0 -> INT .)
    TIMES           reduce using rule 32 (expression0 -> INT .)
    XOR             reduce using rule 32 (expression0 -> INT .)
    IN              reduce using rule 32 (expression0 -> INT .)
    LSQUARE         reduce using rule 32 (expression0 -> INT .)
    DOT             reduce using rule 32 (expression0 -> INT .)
    RSQUARE         reduce using rule 32 (expression0 -> INT .)
    ,               reduce using rule 32 (expression0 -> INT .)
    STATEMENT_END   reduce using rule 32 (expression0 -> INT .)
    $end            reduce using rule 32 (expression0 -> INT .)
    RBRACE          reduce using rule 32 (expression0 -> INT .)
    RPAREN          reduce using rule 32 (expression0 -> INT .)
    :               reduce using rule 32 (expression0 -> INT .)
    OBJ_END         reduce using rule 32 (expression0 -> INT .)


state 32

    (31) expression0 -> FLOAT .

    LPAREN          reduce using rule 31 (expression0 -> FLOAT .)
    PLUS            reduce using rule 31 (expression0 -> FLOAT .)
    AND             reduce using rule 31 (expression0 -> FLOAT .)
    DIVIDE          reduce using rule 31 (expression0 -> FLOAT .)
    EQUALS          reduce using rule 31 (expression0 -> FLOAT .)
    EXPT            reduce using rule 31 (expression0 -> FLOAT .)
    GE              reduce using rule 31 (expression0 -> FLOAT .)
    GT              reduce using rule 31 (expression0 -> FLOAT .)
    LE              reduce using rule 31 (expression0 -> FLOAT .)
    LT              reduce using rule 31 (expression0 -> FLOAT .)
    MOD             reduce using rule 31 (expression0 -> FLOAT .)
    NE              reduce using rule 31 (expression0 -> FLOAT .)
    OR              reduce using rule 31 (expression0 -> FLOAT .)
    MINUS           reduce using rule 31 (expression0 -> FLOAT .)
    TIMES           reduce using rule 31 (expression0 -> FLOAT .)
    XOR             reduce using rule 31 (expression0 -> FLOAT .)
    IN              reduce using rule 31 (expression0 -> FLOAT .)
    LSQUARE         reduce using rule 31 (expression0 -> FLOAT .)
    DOT             reduce using rule 31 (expression0 -> FLOAT .)
    RSQUARE         reduce using rule 31 (expression0 -> FLOAT .)
    ,               reduce using rule 31 (expression0 -> FLOAT .)
    STATEMENT_END   reduce using rule 31 (expression0 -> FLOAT .)
    $end            reduce using rule 31 (expression0 -> FLOAT .)
    RBRACE          reduce using rule 31 (expression0 -> FLOAT .)
    RPAREN          reduce using rule 31 (expression0 -> FLOAT .)
    :               reduce using rule 31 (expression0 -> FLOAT .)
    OBJ_END         reduce using rule 31 (expression0 -> FLOAT .)


state 33

    (9) statements -> enders . statements1
    (6) statements1 -> . empty
    (7) statements1 -> . statement
    (8) statements1 -> . statement enders statements1
    (11) empty -> .
    (1) statement -> . block_statement
    (2) statement -> . expression
    (74) statement -> . WHILE LPAREN expression RPAREN block_statement
    (85) statement -> . VAR ID
    (86) statement -> . CONST VAR ID ASSIGN expression
    (87) statement -> . VAR ID ASSIGN expression
    (88) statement -> . CONST ID ASSIGN expression
    (90) statement -> . DEL reference1
    (91) statement -> . PRINT expression
    (92) statement -> . RETURN expression
    (93) statement -> . RETURN
    (3) block_statement -> . LBRACE statements RBRACE
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    $end            reduce using rule 11 (empty -> .)
    RBRACE          reduce using rule 11 (empty -> .)
    WHILE           shift and go to state 10
    VAR             shift and go to state 24
    CONST           shift and go to state 5
    DEL             shift and go to state 12
    PRINT           shift and go to state 14
    RETURN          shift and go to state 2
    LBRACE          shift and go to state 29
    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    block_statement                shift and go to state 18
    statements1                    shift and go to state 69
    statement                      shift and go to state 20
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 34
    empty                          shift and go to state 21

state 34

    (2) statement -> expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    STATEMENT_END   reduce using rule 2 (statement -> expression .)
    RBRACE          reduce using rule 2 (statement -> expression .)
    $end            reduce using rule 2 (statement -> expression .)
    PLUS            shift and go to state 76
    AND             shift and go to state 85
    DIVIDE          shift and go to state 79
    EQUALS          shift and go to state 80
    EXPT            shift and go to state 74
    GE              shift and go to state 82
    GT              shift and go to state 77
    LE              shift and go to state 72
    LT              shift and go to state 75
    MOD             shift and go to state 87
    NE              shift and go to state 73
    OR              shift and go to state 86
    MINUS           shift and go to state 70
    TIMES           shift and go to state 81
    XOR             shift and go to state 78
    IN              shift and go to state 84
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71


state 35

    (23) expression0 -> LSQUARE empty . RSQUARE

    RSQUARE         shift and go to state 88


state 36

    (25) list_contents -> expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    RSQUARE         reduce using rule 25 (list_contents -> expression .)
    ,               reduce using rule 25 (list_contents -> expression .)
    PLUS            shift and go to state 76
    AND             shift and go to state 85
    DIVIDE          shift and go to state 79
    EQUALS          shift and go to state 80
    EXPT            shift and go to state 74
    GE              shift and go to state 82
    GT              shift and go to state 77
    LE              shift and go to state 72
    LT              shift and go to state 75
    MOD             shift and go to state 87
    NE              shift and go to state 73
    OR              shift and go to state 86
    MINUS           shift and go to state 70
    TIMES           shift and go to state 81
    XOR             shift and go to state 78
    IN              shift and go to state 84
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71


state 37

    (24) expression0 -> LSQUARE list_contents . RSQUARE
    (26) list_contents -> list_contents . , expression

    RSQUARE         shift and go to state 89
    ,               shift and go to state 90


state 38

    (92) statement -> RETURN expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    STATEMENT_END   reduce using rule 92 (statement -> RETURN expression .)
    RBRACE          reduce using rule 92 (statement -> RETURN expression .)
    $end            reduce using rule 92 (statement -> RETURN expression .)
    PLUS            shift and go to state 76
    AND             shift and go to state 85
    DIVIDE          shift and go to state 79
    EQUALS          shift and go to state 80
    EXPT            shift and go to state 74
    GE              shift and go to state 82
    GT              shift and go to state 77
    LE              shift and go to state 72
    LT              shift and go to state 75
    MOD             shift and go to state 87
    NE              shift and go to state 73
    OR              shift and go to state 86
    MINUS           shift and go to state 70
    TIMES           shift and go to state 81
    XOR             shift and go to state 78
    IN              shift and go to state 84
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71


state 39

    (63) expression -> reference PLUSEQUALS . expression
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 91

state 40

    (62) expression -> reference MINUSEQUALS . expression
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 92

state 41

    (64) expression -> reference TIMESEQUALS . expression
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 93

state 42

    (61) expression -> reference DIVEQUALS . expression
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 94

state 43

    (84) expression0 -> reference ASSIGN . expression
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 95

state 44

    (86) statement -> CONST VAR . ID ASSIGN expression

    ID              shift and go to state 96


state 45

    (88) statement -> CONST ID . ASSIGN expression

    ASSIGN          shift and go to state 97


state 46

    (67) expression0 -> NOT expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    LPAREN          reduce using rule 67 (expression0 -> NOT expression .)
    AND             reduce using rule 67 (expression0 -> NOT expression .)
    OR              reduce using rule 67 (expression0 -> NOT expression .)
    XOR             reduce using rule 67 (expression0 -> NOT expression .)
    RSQUARE         reduce using rule 67 (expression0 -> NOT expression .)
    ,               reduce using rule 67 (expression0 -> NOT expression .)
    STATEMENT_END   reduce using rule 67 (expression0 -> NOT expression .)
    $end            reduce using rule 67 (expression0 -> NOT expression .)
    RBRACE          reduce using rule 67 (expression0 -> NOT expression .)
    RPAREN          reduce using rule 67 (expression0 -> NOT expression .)
    :               reduce using rule 67 (expression0 -> NOT expression .)
    OBJ_END         reduce using rule 67 (expression0 -> NOT expression .)
    PLUS            shift and go to state 76
    DIVIDE          shift and go to state 79
    EQUALS          shift and go to state 80
    EXPT            shift and go to state 74
    GE              shift and go to state 82
    GT              shift and go to state 77
    LE              shift and go to state 72
    LT              shift and go to state 75
    MOD             shift and go to state 87
    NE              shift and go to state 73
    MINUS           shift and go to state 70
    TIMES           shift and go to state 81
    IN              shift and go to state 84
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71

  ! PLUS            [ reduce using rule 67 (expression0 -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 67 (expression0 -> NOT expression .) ]
  ! EQUALS          [ reduce using rule 67 (expression0 -> NOT expression .) ]
  ! EXPT            [ reduce using rule 67 (expression0 -> NOT expression .) ]
  ! GE              [ reduce using rule 67 (expression0 -> NOT expression .) ]
  ! GT              [ reduce using rule 67 (expression0 -> NOT expression .) ]
  ! LE              [ reduce using rule 67 (expression0 -> NOT expression .) ]
  ! LT              [ reduce using rule 67 (expression0 -> NOT expression .) ]
  ! MOD             [ reduce using rule 67 (expression0 -> NOT expression .) ]
  ! NE              [ reduce using rule 67 (expression0 -> NOT expression .) ]
  ! MINUS           [ reduce using rule 67 (expression0 -> NOT expression .) ]
  ! TIMES           [ reduce using rule 67 (expression0 -> NOT expression .) ]
  ! IN              [ reduce using rule 67 (expression0 -> NOT expression .) ]
  ! LSQUARE         [ reduce using rule 67 (expression0 -> NOT expression .) ]
  ! DOT             [ reduce using rule 67 (expression0 -> NOT expression .) ]
  ! AND             [ shift and go to state 85 ]
  ! OR              [ shift and go to state 86 ]
  ! XOR             [ shift and go to state 78 ]


state 47

    (42) expression0 -> expression1 LPAREN . expression_list RPAREN
    (15) expression_list -> . expression
    (16) expression_list -> . empty
    (17) expression_list -> . expression , expression_list
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (11) empty -> .
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    LPAREN          shift and go to state 23
    RPAREN          reduce using rule 11 (empty -> .)
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    expression_list                shift and go to state 99
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 100
    empty                          shift and go to state 98

state 48

    (74) statement -> WHILE LPAREN . expression RPAREN block_statement
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 101

state 49

    (90) statement -> DEL reference1 .
    (30) expression1 -> reference1 .
    (76) reference -> reference1 .

    STATEMENT_END   reduce using rule 90 (statement -> DEL reference1 .)
    RBRACE          reduce using rule 90 (statement -> DEL reference1 .)
    $end            reduce using rule 90 (statement -> DEL reference1 .)
    LPAREN          reduce using rule 30 (expression1 -> reference1 .)
    DOT             reduce using rule 30 (expression1 -> reference1 .)
    LSQUARE         reduce using rule 30 (expression1 -> reference1 .)
    PLUS            reduce using rule 30 (expression1 -> reference1 .)
    AND             reduce using rule 30 (expression1 -> reference1 .)
    DIVIDE          reduce using rule 30 (expression1 -> reference1 .)
    EQUALS          reduce using rule 30 (expression1 -> reference1 .)
    EXPT            reduce using rule 30 (expression1 -> reference1 .)
    GE              reduce using rule 30 (expression1 -> reference1 .)
    GT              reduce using rule 30 (expression1 -> reference1 .)
    LE              reduce using rule 30 (expression1 -> reference1 .)
    LT              reduce using rule 30 (expression1 -> reference1 .)
    MOD             reduce using rule 30 (expression1 -> reference1 .)
    NE              reduce using rule 30 (expression1 -> reference1 .)
    OR              reduce using rule 30 (expression1 -> reference1 .)
    MINUS           reduce using rule 30 (expression1 -> reference1 .)
    TIMES           reduce using rule 30 (expression1 -> reference1 .)
    XOR             reduce using rule 30 (expression1 -> reference1 .)
    IN              reduce using rule 30 (expression1 -> reference1 .)
    DIVEQUALS       reduce using rule 76 (reference -> reference1 .)
    MINUSEQUALS     reduce using rule 76 (reference -> reference1 .)
    PLUSEQUALS      reduce using rule 76 (reference -> reference1 .)
    TIMESEQUALS     reduce using rule 76 (reference -> reference1 .)
    ASSIGN          reduce using rule 76 (reference -> reference1 .)


state 50

    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE

    DOT             shift and go to state 71
    LSQUARE         shift and go to state 102
    PLUS            shift and go to state 76
    AND             shift and go to state 85
    DIVIDE          shift and go to state 79
    EQUALS          shift and go to state 80
    EXPT            shift and go to state 74
    GE              shift and go to state 82
    GT              shift and go to state 77
    LE              shift and go to state 72
    LT              shift and go to state 75
    MOD             shift and go to state 87
    NE              shift and go to state 73
    OR              shift and go to state 86
    MINUS           shift and go to state 70
    TIMES           shift and go to state 81
    XOR             shift and go to state 78
    IN              shift and go to state 84


state 51

    (39) expression0 -> NEW ID . LPAREN expression_list RPAREN

    LPAREN          shift and go to state 103


state 52

    (91) statement -> PRINT expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    STATEMENT_END   reduce using rule 91 (statement -> PRINT expression .)
    RBRACE          reduce using rule 91 (statement -> PRINT expression .)
    $end            reduce using rule 91 (statement -> PRINT expression .)
    PLUS            shift and go to state 76
    AND             shift and go to state 85
    DIVIDE          shift and go to state 79
    EQUALS          shift and go to state 80
    EXPT            shift and go to state 74
    GE              shift and go to state 82
    GT              shift and go to state 77
    LE              shift and go to state 72
    LT              shift and go to state 75
    MOD             shift and go to state 87
    NE              shift and go to state 73
    OR              shift and go to state 86
    MINUS           shift and go to state 70
    TIMES           shift and go to state 81
    XOR             shift and go to state 78
    IN              shift and go to state 84
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71


state 53

    (18) expression0 -> OBJ_BEGIN property_list . OBJ_END

    OBJ_END         shift and go to state 104


state 54

    (21) property_list -> ID . : expression
    (22) property_list -> ID . : expression , property_list

    :               shift and go to state 105


state 55

    (20) property_list -> empty .

    OBJ_END         reduce using rule 20 (property_list -> empty .)


state 56

    (8) statements1 -> statement enders . statements1
    (6) statements1 -> . empty
    (7) statements1 -> . statement
    (8) statements1 -> . statement enders statements1
    (11) empty -> .
    (1) statement -> . block_statement
    (2) statement -> . expression
    (74) statement -> . WHILE LPAREN expression RPAREN block_statement
    (85) statement -> . VAR ID
    (86) statement -> . CONST VAR ID ASSIGN expression
    (87) statement -> . VAR ID ASSIGN expression
    (88) statement -> . CONST ID ASSIGN expression
    (90) statement -> . DEL reference1
    (91) statement -> . PRINT expression
    (92) statement -> . RETURN expression
    (93) statement -> . RETURN
    (3) block_statement -> . LBRACE statements RBRACE
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    $end            reduce using rule 11 (empty -> .)
    RBRACE          reduce using rule 11 (empty -> .)
    WHILE           shift and go to state 10
    VAR             shift and go to state 24
    CONST           shift and go to state 5
    DEL             shift and go to state 12
    PRINT           shift and go to state 14
    RETURN          shift and go to state 2
    LBRACE          shift and go to state 29
    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    block_statement                shift and go to state 18
    statements1                    shift and go to state 106
    statement                      shift and go to state 20
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 34
    empty                          shift and go to state 21

state 57

    (40) expression0 -> FUNCTION LPAREN . paramlist RPAREN block_statement
    (12) paramlist -> . ID
    (13) paramlist -> . empty
    (14) paramlist -> . ID , paramlist
    (11) empty -> .

    ID              shift and go to state 108
    RPAREN          reduce using rule 11 (empty -> .)

    empty                          shift and go to state 109
    paramlist                      shift and go to state 107

state 58

    (38) tuple_contents -> tuple_contents2 .

    RPAREN          reduce using rule 38 (tuple_contents -> tuple_contents2 .)


state 59

    (34) tuple_contents -> empty .

    RPAREN          reduce using rule 34 (tuple_contents -> empty .)


state 60

    (44) expression1 -> LPAREN expression1 . RPAREN
    (28) expression -> expression1 .
    (42) expression0 -> expression1 . LPAREN expression_list RPAREN

    RPAREN          reduce using rule 28 (expression -> expression1 .)
    PLUS            reduce using rule 28 (expression -> expression1 .)
    AND             reduce using rule 28 (expression -> expression1 .)
    DIVIDE          reduce using rule 28 (expression -> expression1 .)
    EQUALS          reduce using rule 28 (expression -> expression1 .)
    EXPT            reduce using rule 28 (expression -> expression1 .)
    GE              reduce using rule 28 (expression -> expression1 .)
    GT              reduce using rule 28 (expression -> expression1 .)
    LE              reduce using rule 28 (expression -> expression1 .)
    LT              reduce using rule 28 (expression -> expression1 .)
    MOD             reduce using rule 28 (expression -> expression1 .)
    NE              reduce using rule 28 (expression -> expression1 .)
    OR              reduce using rule 28 (expression -> expression1 .)
    MINUS           reduce using rule 28 (expression -> expression1 .)
    TIMES           reduce using rule 28 (expression -> expression1 .)
    XOR             reduce using rule 28 (expression -> expression1 .)
    ,               reduce using rule 28 (expression -> expression1 .)
    IN              reduce using rule 28 (expression -> expression1 .)
    LSQUARE         reduce using rule 28 (expression -> expression1 .)
    DOT             reduce using rule 28 (expression -> expression1 .)
    LPAREN          shift and go to state 47

  ! RPAREN          [ shift and go to state 110 ]


state 61

    (43) expression0 -> LPAREN expression0 . RPAREN
    (27) expression -> expression0 .
    (41) expression0 -> expression0 . LPAREN expression_list RPAREN

    RPAREN          reduce using rule 27 (expression -> expression0 .)
    PLUS            reduce using rule 27 (expression -> expression0 .)
    AND             reduce using rule 27 (expression -> expression0 .)
    DIVIDE          reduce using rule 27 (expression -> expression0 .)
    EQUALS          reduce using rule 27 (expression -> expression0 .)
    EXPT            reduce using rule 27 (expression -> expression0 .)
    GE              reduce using rule 27 (expression -> expression0 .)
    GT              reduce using rule 27 (expression -> expression0 .)
    LE              reduce using rule 27 (expression -> expression0 .)
    LT              reduce using rule 27 (expression -> expression0 .)
    MOD             reduce using rule 27 (expression -> expression0 .)
    NE              reduce using rule 27 (expression -> expression0 .)
    OR              reduce using rule 27 (expression -> expression0 .)
    MINUS           reduce using rule 27 (expression -> expression0 .)
    TIMES           reduce using rule 27 (expression -> expression0 .)
    XOR             reduce using rule 27 (expression -> expression0 .)
    ,               reduce using rule 27 (expression -> expression0 .)
    IN              reduce using rule 27 (expression -> expression0 .)
    LSQUARE         reduce using rule 27 (expression -> expression0 .)
    DOT             reduce using rule 27 (expression -> expression0 .)
    LPAREN          shift and go to state 65

  ! RPAREN          [ shift and go to state 111 ]


state 62

    (33) expression0 -> LPAREN tuple_contents . RPAREN

    RPAREN          shift and go to state 112


state 63

    (45) expression -> LPAREN expression . RPAREN
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (37) tuple_contents -> expression . , tuple_contents2
    (19) expression0 -> expression . IN expression
    (35) tuple_contents2 -> expression . ,
    (36) tuple_contents2 -> expression . , expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    RPAREN          shift and go to state 113
    PLUS            shift and go to state 76
    AND             shift and go to state 85
    DIVIDE          shift and go to state 79
    EQUALS          shift and go to state 80
    EXPT            shift and go to state 74
    GE              shift and go to state 82
    GT              shift and go to state 77
    LE              shift and go to state 72
    LT              shift and go to state 75
    MOD             shift and go to state 87
    NE              shift and go to state 73
    OR              shift and go to state 86
    MINUS           shift and go to state 70
    TIMES           shift and go to state 81
    XOR             shift and go to state 78
    ,               shift and go to state 114
    IN              shift and go to state 84
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71


state 64

    (85) statement -> VAR ID .
    (87) statement -> VAR ID . ASSIGN expression

    STATEMENT_END   reduce using rule 85 (statement -> VAR ID .)
    RBRACE          reduce using rule 85 (statement -> VAR ID .)
    $end            reduce using rule 85 (statement -> VAR ID .)
    ASSIGN          shift and go to state 115


state 65

    (41) expression0 -> expression0 LPAREN . expression_list RPAREN
    (15) expression_list -> . expression
    (16) expression_list -> . empty
    (17) expression_list -> . expression , expression_list
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (11) empty -> .
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    LPAREN          shift and go to state 23
    RPAREN          reduce using rule 11 (empty -> .)
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    expression_list                shift and go to state 116
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 100
    empty                          shift and go to state 98

state 66

    (5) enders -> STATEMENT_END enders .

    WHILE           reduce using rule 5 (enders -> STATEMENT_END enders .)
    VAR             reduce using rule 5 (enders -> STATEMENT_END enders .)
    CONST           reduce using rule 5 (enders -> STATEMENT_END enders .)
    DEL             reduce using rule 5 (enders -> STATEMENT_END enders .)
    PRINT           reduce using rule 5 (enders -> STATEMENT_END enders .)
    RETURN          reduce using rule 5 (enders -> STATEMENT_END enders .)
    LBRACE          reduce using rule 5 (enders -> STATEMENT_END enders .)
    LPAREN          reduce using rule 5 (enders -> STATEMENT_END enders .)
    OBJ_BEGIN       reduce using rule 5 (enders -> STATEMENT_END enders .)
    LSQUARE         reduce using rule 5 (enders -> STATEMENT_END enders .)
    FLOAT           reduce using rule 5 (enders -> STATEMENT_END enders .)
    INT             reduce using rule 5 (enders -> STATEMENT_END enders .)
    NEW             reduce using rule 5 (enders -> STATEMENT_END enders .)
    FUNCTION        reduce using rule 5 (enders -> STATEMENT_END enders .)
    TRUE            reduce using rule 5 (enders -> STATEMENT_END enders .)
    FALSE           reduce using rule 5 (enders -> STATEMENT_END enders .)
    NOT             reduce using rule 5 (enders -> STATEMENT_END enders .)
    STRING          reduce using rule 5 (enders -> STATEMENT_END enders .)
    IF              reduce using rule 5 (enders -> STATEMENT_END enders .)
    UNDEFINED       reduce using rule 5 (enders -> STATEMENT_END enders .)
    ID              reduce using rule 5 (enders -> STATEMENT_END enders .)
    RBRACE          reduce using rule 5 (enders -> STATEMENT_END enders .)
    $end            reduce using rule 5 (enders -> STATEMENT_END enders .)


state 67

    (72) expression0 -> IF LPAREN . expression RPAREN block_statement
    (73) expression0 -> IF LPAREN . expression RPAREN block_statement else_if_chain
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    expression                     shift and go to state 117
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25

state 68

    (3) block_statement -> LBRACE statements . RBRACE

    RBRACE          shift and go to state 118


state 69

    (9) statements -> enders statements1 .

    $end            reduce using rule 9 (statements -> enders statements1 .)
    RBRACE          reduce using rule 9 (statements -> enders statements1 .)


state 70

    (58) expression -> expression MINUS . expression
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 119

state 71

    (78) reference1 -> expression DOT . ID

    ID              shift and go to state 120


state 72

    (53) expression -> expression LE . expression
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 121

state 73

    (56) expression -> expression NE . expression
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 122

state 74

    (50) expression -> expression EXPT . expression
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 123

state 75

    (54) expression -> expression LT . expression
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 124

state 76

    (46) expression -> expression PLUS . expression
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 125

state 77

    (52) expression -> expression GT . expression
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 126

state 78

    (60) expression -> expression XOR . expression
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 127

state 79

    (48) expression -> expression DIVIDE . expression
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 128

state 80

    (49) expression -> expression EQUALS . expression
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 129

state 81

    (59) expression -> expression TIMES . expression
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 130

state 82

    (51) expression -> expression GE . expression
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 131

state 83

    (80) reference0 -> expression LSQUARE . expression : expression RSQUARE
    (81) reference0 -> expression LSQUARE . : RSQUARE
    (82) reference0 -> expression LSQUARE . : expression RSQUARE
    (83) reference0 -> expression LSQUARE . expression : RSQUARE
    (79) reference1 -> expression LSQUARE . expression RSQUARE
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    :               shift and go to state 132
    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 133

state 84

    (19) expression0 -> expression IN . expression
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 134

state 85

    (47) expression -> expression AND . expression
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 135

state 86

    (57) expression -> expression OR . expression
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 136

state 87

    (55) expression -> expression MOD . expression
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 137

state 88

    (23) expression0 -> LSQUARE empty RSQUARE .

    LPAREN          reduce using rule 23 (expression0 -> LSQUARE empty RSQUARE .)
    PLUS            reduce using rule 23 (expression0 -> LSQUARE empty RSQUARE .)
    AND             reduce using rule 23 (expression0 -> LSQUARE empty RSQUARE .)
    DIVIDE          reduce using rule 23 (expression0 -> LSQUARE empty RSQUARE .)
    EQUALS          reduce using rule 23 (expression0 -> LSQUARE empty RSQUARE .)
    EXPT            reduce using rule 23 (expression0 -> LSQUARE empty RSQUARE .)
    GE              reduce using rule 23 (expression0 -> LSQUARE empty RSQUARE .)
    GT              reduce using rule 23 (expression0 -> LSQUARE empty RSQUARE .)
    LE              reduce using rule 23 (expression0 -> LSQUARE empty RSQUARE .)
    LT              reduce using rule 23 (expression0 -> LSQUARE empty RSQUARE .)
    MOD             reduce using rule 23 (expression0 -> LSQUARE empty RSQUARE .)
    NE              reduce using rule 23 (expression0 -> LSQUARE empty RSQUARE .)
    OR              reduce using rule 23 (expression0 -> LSQUARE empty RSQUARE .)
    MINUS           reduce using rule 23 (expression0 -> LSQUARE empty RSQUARE .)
    TIMES           reduce using rule 23 (expression0 -> LSQUARE empty RSQUARE .)
    XOR             reduce using rule 23 (expression0 -> LSQUARE empty RSQUARE .)
    IN              reduce using rule 23 (expression0 -> LSQUARE empty RSQUARE .)
    LSQUARE         reduce using rule 23 (expression0 -> LSQUARE empty RSQUARE .)
    DOT             reduce using rule 23 (expression0 -> LSQUARE empty RSQUARE .)
    RSQUARE         reduce using rule 23 (expression0 -> LSQUARE empty RSQUARE .)
    ,               reduce using rule 23 (expression0 -> LSQUARE empty RSQUARE .)
    STATEMENT_END   reduce using rule 23 (expression0 -> LSQUARE empty RSQUARE .)
    $end            reduce using rule 23 (expression0 -> LSQUARE empty RSQUARE .)
    RBRACE          reduce using rule 23 (expression0 -> LSQUARE empty RSQUARE .)
    RPAREN          reduce using rule 23 (expression0 -> LSQUARE empty RSQUARE .)
    :               reduce using rule 23 (expression0 -> LSQUARE empty RSQUARE .)
    OBJ_END         reduce using rule 23 (expression0 -> LSQUARE empty RSQUARE .)


state 89

    (24) expression0 -> LSQUARE list_contents RSQUARE .

    LPAREN          reduce using rule 24 (expression0 -> LSQUARE list_contents RSQUARE .)
    PLUS            reduce using rule 24 (expression0 -> LSQUARE list_contents RSQUARE .)
    AND             reduce using rule 24 (expression0 -> LSQUARE list_contents RSQUARE .)
    DIVIDE          reduce using rule 24 (expression0 -> LSQUARE list_contents RSQUARE .)
    EQUALS          reduce using rule 24 (expression0 -> LSQUARE list_contents RSQUARE .)
    EXPT            reduce using rule 24 (expression0 -> LSQUARE list_contents RSQUARE .)
    GE              reduce using rule 24 (expression0 -> LSQUARE list_contents RSQUARE .)
    GT              reduce using rule 24 (expression0 -> LSQUARE list_contents RSQUARE .)
    LE              reduce using rule 24 (expression0 -> LSQUARE list_contents RSQUARE .)
    LT              reduce using rule 24 (expression0 -> LSQUARE list_contents RSQUARE .)
    MOD             reduce using rule 24 (expression0 -> LSQUARE list_contents RSQUARE .)
    NE              reduce using rule 24 (expression0 -> LSQUARE list_contents RSQUARE .)
    OR              reduce using rule 24 (expression0 -> LSQUARE list_contents RSQUARE .)
    MINUS           reduce using rule 24 (expression0 -> LSQUARE list_contents RSQUARE .)
    TIMES           reduce using rule 24 (expression0 -> LSQUARE list_contents RSQUARE .)
    XOR             reduce using rule 24 (expression0 -> LSQUARE list_contents RSQUARE .)
    IN              reduce using rule 24 (expression0 -> LSQUARE list_contents RSQUARE .)
    LSQUARE         reduce using rule 24 (expression0 -> LSQUARE list_contents RSQUARE .)
    DOT             reduce using rule 24 (expression0 -> LSQUARE list_contents RSQUARE .)
    RSQUARE         reduce using rule 24 (expression0 -> LSQUARE list_contents RSQUARE .)
    ,               reduce using rule 24 (expression0 -> LSQUARE list_contents RSQUARE .)
    STATEMENT_END   reduce using rule 24 (expression0 -> LSQUARE list_contents RSQUARE .)
    $end            reduce using rule 24 (expression0 -> LSQUARE list_contents RSQUARE .)
    RBRACE          reduce using rule 24 (expression0 -> LSQUARE list_contents RSQUARE .)
    RPAREN          reduce using rule 24 (expression0 -> LSQUARE list_contents RSQUARE .)
    :               reduce using rule 24 (expression0 -> LSQUARE list_contents RSQUARE .)
    OBJ_END         reduce using rule 24 (expression0 -> LSQUARE list_contents RSQUARE .)


state 90

    (26) list_contents -> list_contents , . expression
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 138

state 91

    (63) expression -> reference PLUSEQUALS expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    AND             reduce using rule 63 (expression -> reference PLUSEQUALS expression .)
    EQUALS          reduce using rule 63 (expression -> reference PLUSEQUALS expression .)
    GE              reduce using rule 63 (expression -> reference PLUSEQUALS expression .)
    GT              reduce using rule 63 (expression -> reference PLUSEQUALS expression .)
    LE              reduce using rule 63 (expression -> reference PLUSEQUALS expression .)
    LT              reduce using rule 63 (expression -> reference PLUSEQUALS expression .)
    NE              reduce using rule 63 (expression -> reference PLUSEQUALS expression .)
    OR              reduce using rule 63 (expression -> reference PLUSEQUALS expression .)
    XOR             reduce using rule 63 (expression -> reference PLUSEQUALS expression .)
    IN              reduce using rule 63 (expression -> reference PLUSEQUALS expression .)
    LPAREN          reduce using rule 63 (expression -> reference PLUSEQUALS expression .)
    STATEMENT_END   reduce using rule 63 (expression -> reference PLUSEQUALS expression .)
    $end            reduce using rule 63 (expression -> reference PLUSEQUALS expression .)
    RSQUARE         reduce using rule 63 (expression -> reference PLUSEQUALS expression .)
    ,               reduce using rule 63 (expression -> reference PLUSEQUALS expression .)
    RBRACE          reduce using rule 63 (expression -> reference PLUSEQUALS expression .)
    RPAREN          reduce using rule 63 (expression -> reference PLUSEQUALS expression .)
    :               reduce using rule 63 (expression -> reference PLUSEQUALS expression .)
    OBJ_END         reduce using rule 63 (expression -> reference PLUSEQUALS expression .)
    PLUS            shift and go to state 76
    DIVIDE          shift and go to state 79
    EXPT            shift and go to state 74
    MOD             shift and go to state 87
    MINUS           shift and go to state 70
    TIMES           shift and go to state 81
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71

  ! PLUS            [ reduce using rule 63 (expression -> reference PLUSEQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 63 (expression -> reference PLUSEQUALS expression .) ]
  ! EXPT            [ reduce using rule 63 (expression -> reference PLUSEQUALS expression .) ]
  ! MOD             [ reduce using rule 63 (expression -> reference PLUSEQUALS expression .) ]
  ! MINUS           [ reduce using rule 63 (expression -> reference PLUSEQUALS expression .) ]
  ! TIMES           [ reduce using rule 63 (expression -> reference PLUSEQUALS expression .) ]
  ! LSQUARE         [ reduce using rule 63 (expression -> reference PLUSEQUALS expression .) ]
  ! DOT             [ reduce using rule 63 (expression -> reference PLUSEQUALS expression .) ]
  ! AND             [ shift and go to state 85 ]
  ! EQUALS          [ shift and go to state 80 ]
  ! GE              [ shift and go to state 82 ]
  ! GT              [ shift and go to state 77 ]
  ! LE              [ shift and go to state 72 ]
  ! LT              [ shift and go to state 75 ]
  ! NE              [ shift and go to state 73 ]
  ! OR              [ shift and go to state 86 ]
  ! XOR             [ shift and go to state 78 ]
  ! IN              [ shift and go to state 84 ]


state 92

    (62) expression -> reference MINUSEQUALS expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    AND             reduce using rule 62 (expression -> reference MINUSEQUALS expression .)
    EQUALS          reduce using rule 62 (expression -> reference MINUSEQUALS expression .)
    GE              reduce using rule 62 (expression -> reference MINUSEQUALS expression .)
    GT              reduce using rule 62 (expression -> reference MINUSEQUALS expression .)
    LE              reduce using rule 62 (expression -> reference MINUSEQUALS expression .)
    LT              reduce using rule 62 (expression -> reference MINUSEQUALS expression .)
    NE              reduce using rule 62 (expression -> reference MINUSEQUALS expression .)
    OR              reduce using rule 62 (expression -> reference MINUSEQUALS expression .)
    XOR             reduce using rule 62 (expression -> reference MINUSEQUALS expression .)
    IN              reduce using rule 62 (expression -> reference MINUSEQUALS expression .)
    LPAREN          reduce using rule 62 (expression -> reference MINUSEQUALS expression .)
    STATEMENT_END   reduce using rule 62 (expression -> reference MINUSEQUALS expression .)
    $end            reduce using rule 62 (expression -> reference MINUSEQUALS expression .)
    RSQUARE         reduce using rule 62 (expression -> reference MINUSEQUALS expression .)
    ,               reduce using rule 62 (expression -> reference MINUSEQUALS expression .)
    RBRACE          reduce using rule 62 (expression -> reference MINUSEQUALS expression .)
    RPAREN          reduce using rule 62 (expression -> reference MINUSEQUALS expression .)
    :               reduce using rule 62 (expression -> reference MINUSEQUALS expression .)
    OBJ_END         reduce using rule 62 (expression -> reference MINUSEQUALS expression .)
    PLUS            shift and go to state 76
    DIVIDE          shift and go to state 79
    EXPT            shift and go to state 74
    MOD             shift and go to state 87
    MINUS           shift and go to state 70
    TIMES           shift and go to state 81
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71

  ! PLUS            [ reduce using rule 62 (expression -> reference MINUSEQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 62 (expression -> reference MINUSEQUALS expression .) ]
  ! EXPT            [ reduce using rule 62 (expression -> reference MINUSEQUALS expression .) ]
  ! MOD             [ reduce using rule 62 (expression -> reference MINUSEQUALS expression .) ]
  ! MINUS           [ reduce using rule 62 (expression -> reference MINUSEQUALS expression .) ]
  ! TIMES           [ reduce using rule 62 (expression -> reference MINUSEQUALS expression .) ]
  ! LSQUARE         [ reduce using rule 62 (expression -> reference MINUSEQUALS expression .) ]
  ! DOT             [ reduce using rule 62 (expression -> reference MINUSEQUALS expression .) ]
  ! AND             [ shift and go to state 85 ]
  ! EQUALS          [ shift and go to state 80 ]
  ! GE              [ shift and go to state 82 ]
  ! GT              [ shift and go to state 77 ]
  ! LE              [ shift and go to state 72 ]
  ! LT              [ shift and go to state 75 ]
  ! NE              [ shift and go to state 73 ]
  ! OR              [ shift and go to state 86 ]
  ! XOR             [ shift and go to state 78 ]
  ! IN              [ shift and go to state 84 ]


state 93

    (64) expression -> reference TIMESEQUALS expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    AND             reduce using rule 64 (expression -> reference TIMESEQUALS expression .)
    EQUALS          reduce using rule 64 (expression -> reference TIMESEQUALS expression .)
    GE              reduce using rule 64 (expression -> reference TIMESEQUALS expression .)
    GT              reduce using rule 64 (expression -> reference TIMESEQUALS expression .)
    LE              reduce using rule 64 (expression -> reference TIMESEQUALS expression .)
    LT              reduce using rule 64 (expression -> reference TIMESEQUALS expression .)
    NE              reduce using rule 64 (expression -> reference TIMESEQUALS expression .)
    OR              reduce using rule 64 (expression -> reference TIMESEQUALS expression .)
    XOR             reduce using rule 64 (expression -> reference TIMESEQUALS expression .)
    IN              reduce using rule 64 (expression -> reference TIMESEQUALS expression .)
    LPAREN          reduce using rule 64 (expression -> reference TIMESEQUALS expression .)
    STATEMENT_END   reduce using rule 64 (expression -> reference TIMESEQUALS expression .)
    $end            reduce using rule 64 (expression -> reference TIMESEQUALS expression .)
    RSQUARE         reduce using rule 64 (expression -> reference TIMESEQUALS expression .)
    ,               reduce using rule 64 (expression -> reference TIMESEQUALS expression .)
    RBRACE          reduce using rule 64 (expression -> reference TIMESEQUALS expression .)
    RPAREN          reduce using rule 64 (expression -> reference TIMESEQUALS expression .)
    :               reduce using rule 64 (expression -> reference TIMESEQUALS expression .)
    OBJ_END         reduce using rule 64 (expression -> reference TIMESEQUALS expression .)
    PLUS            shift and go to state 76
    DIVIDE          shift and go to state 79
    EXPT            shift and go to state 74
    MOD             shift and go to state 87
    MINUS           shift and go to state 70
    TIMES           shift and go to state 81
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71

  ! PLUS            [ reduce using rule 64 (expression -> reference TIMESEQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 64 (expression -> reference TIMESEQUALS expression .) ]
  ! EXPT            [ reduce using rule 64 (expression -> reference TIMESEQUALS expression .) ]
  ! MOD             [ reduce using rule 64 (expression -> reference TIMESEQUALS expression .) ]
  ! MINUS           [ reduce using rule 64 (expression -> reference TIMESEQUALS expression .) ]
  ! TIMES           [ reduce using rule 64 (expression -> reference TIMESEQUALS expression .) ]
  ! LSQUARE         [ reduce using rule 64 (expression -> reference TIMESEQUALS expression .) ]
  ! DOT             [ reduce using rule 64 (expression -> reference TIMESEQUALS expression .) ]
  ! AND             [ shift and go to state 85 ]
  ! EQUALS          [ shift and go to state 80 ]
  ! GE              [ shift and go to state 82 ]
  ! GT              [ shift and go to state 77 ]
  ! LE              [ shift and go to state 72 ]
  ! LT              [ shift and go to state 75 ]
  ! NE              [ shift and go to state 73 ]
  ! OR              [ shift and go to state 86 ]
  ! XOR             [ shift and go to state 78 ]
  ! IN              [ shift and go to state 84 ]


state 94

    (61) expression -> reference DIVEQUALS expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    AND             reduce using rule 61 (expression -> reference DIVEQUALS expression .)
    EQUALS          reduce using rule 61 (expression -> reference DIVEQUALS expression .)
    GE              reduce using rule 61 (expression -> reference DIVEQUALS expression .)
    GT              reduce using rule 61 (expression -> reference DIVEQUALS expression .)
    LE              reduce using rule 61 (expression -> reference DIVEQUALS expression .)
    LT              reduce using rule 61 (expression -> reference DIVEQUALS expression .)
    NE              reduce using rule 61 (expression -> reference DIVEQUALS expression .)
    OR              reduce using rule 61 (expression -> reference DIVEQUALS expression .)
    XOR             reduce using rule 61 (expression -> reference DIVEQUALS expression .)
    IN              reduce using rule 61 (expression -> reference DIVEQUALS expression .)
    LPAREN          reduce using rule 61 (expression -> reference DIVEQUALS expression .)
    STATEMENT_END   reduce using rule 61 (expression -> reference DIVEQUALS expression .)
    $end            reduce using rule 61 (expression -> reference DIVEQUALS expression .)
    RSQUARE         reduce using rule 61 (expression -> reference DIVEQUALS expression .)
    ,               reduce using rule 61 (expression -> reference DIVEQUALS expression .)
    RBRACE          reduce using rule 61 (expression -> reference DIVEQUALS expression .)
    RPAREN          reduce using rule 61 (expression -> reference DIVEQUALS expression .)
    :               reduce using rule 61 (expression -> reference DIVEQUALS expression .)
    OBJ_END         reduce using rule 61 (expression -> reference DIVEQUALS expression .)
    PLUS            shift and go to state 76
    DIVIDE          shift and go to state 79
    EXPT            shift and go to state 74
    MOD             shift and go to state 87
    MINUS           shift and go to state 70
    TIMES           shift and go to state 81
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71

  ! PLUS            [ reduce using rule 61 (expression -> reference DIVEQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 61 (expression -> reference DIVEQUALS expression .) ]
  ! EXPT            [ reduce using rule 61 (expression -> reference DIVEQUALS expression .) ]
  ! MOD             [ reduce using rule 61 (expression -> reference DIVEQUALS expression .) ]
  ! MINUS           [ reduce using rule 61 (expression -> reference DIVEQUALS expression .) ]
  ! TIMES           [ reduce using rule 61 (expression -> reference DIVEQUALS expression .) ]
  ! LSQUARE         [ reduce using rule 61 (expression -> reference DIVEQUALS expression .) ]
  ! DOT             [ reduce using rule 61 (expression -> reference DIVEQUALS expression .) ]
  ! AND             [ shift and go to state 85 ]
  ! EQUALS          [ shift and go to state 80 ]
  ! GE              [ shift and go to state 82 ]
  ! GT              [ shift and go to state 77 ]
  ! LE              [ shift and go to state 72 ]
  ! LT              [ shift and go to state 75 ]
  ! NE              [ shift and go to state 73 ]
  ! OR              [ shift and go to state 86 ]
  ! XOR             [ shift and go to state 78 ]
  ! IN              [ shift and go to state 84 ]


state 95

    (84) expression0 -> reference ASSIGN expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    LPAREN          reduce using rule 84 (expression0 -> reference ASSIGN expression .)
    RSQUARE         reduce using rule 84 (expression0 -> reference ASSIGN expression .)
    ,               reduce using rule 84 (expression0 -> reference ASSIGN expression .)
    STATEMENT_END   reduce using rule 84 (expression0 -> reference ASSIGN expression .)
    $end            reduce using rule 84 (expression0 -> reference ASSIGN expression .)
    RBRACE          reduce using rule 84 (expression0 -> reference ASSIGN expression .)
    RPAREN          reduce using rule 84 (expression0 -> reference ASSIGN expression .)
    :               reduce using rule 84 (expression0 -> reference ASSIGN expression .)
    OBJ_END         reduce using rule 84 (expression0 -> reference ASSIGN expression .)
    PLUS            shift and go to state 76
    AND             shift and go to state 85
    DIVIDE          shift and go to state 79
    EQUALS          shift and go to state 80
    EXPT            shift and go to state 74
    GE              shift and go to state 82
    GT              shift and go to state 77
    LE              shift and go to state 72
    LT              shift and go to state 75
    MOD             shift and go to state 87
    NE              shift and go to state 73
    OR              shift and go to state 86
    MINUS           shift and go to state 70
    TIMES           shift and go to state 81
    XOR             shift and go to state 78
    IN              shift and go to state 84
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71

  ! PLUS            [ reduce using rule 84 (expression0 -> reference ASSIGN expression .) ]
  ! AND             [ reduce using rule 84 (expression0 -> reference ASSIGN expression .) ]
  ! DIVIDE          [ reduce using rule 84 (expression0 -> reference ASSIGN expression .) ]
  ! EQUALS          [ reduce using rule 84 (expression0 -> reference ASSIGN expression .) ]
  ! EXPT            [ reduce using rule 84 (expression0 -> reference ASSIGN expression .) ]
  ! GE              [ reduce using rule 84 (expression0 -> reference ASSIGN expression .) ]
  ! GT              [ reduce using rule 84 (expression0 -> reference ASSIGN expression .) ]
  ! LE              [ reduce using rule 84 (expression0 -> reference ASSIGN expression .) ]
  ! LT              [ reduce using rule 84 (expression0 -> reference ASSIGN expression .) ]
  ! MOD             [ reduce using rule 84 (expression0 -> reference ASSIGN expression .) ]
  ! NE              [ reduce using rule 84 (expression0 -> reference ASSIGN expression .) ]
  ! OR              [ reduce using rule 84 (expression0 -> reference ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 84 (expression0 -> reference ASSIGN expression .) ]
  ! TIMES           [ reduce using rule 84 (expression0 -> reference ASSIGN expression .) ]
  ! XOR             [ reduce using rule 84 (expression0 -> reference ASSIGN expression .) ]
  ! IN              [ reduce using rule 84 (expression0 -> reference ASSIGN expression .) ]
  ! LSQUARE         [ reduce using rule 84 (expression0 -> reference ASSIGN expression .) ]
  ! DOT             [ reduce using rule 84 (expression0 -> reference ASSIGN expression .) ]


state 96

    (86) statement -> CONST VAR ID . ASSIGN expression

    ASSIGN          shift and go to state 139


state 97

    (88) statement -> CONST ID ASSIGN . expression
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 140

state 98

    (16) expression_list -> empty .

    RPAREN          reduce using rule 16 (expression_list -> empty .)


state 99

    (42) expression0 -> expression1 LPAREN expression_list . RPAREN

    RPAREN          shift and go to state 141


state 100

    (15) expression_list -> expression .
    (17) expression_list -> expression . , expression_list
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    RPAREN          reduce using rule 15 (expression_list -> expression .)
    ,               shift and go to state 142
    PLUS            shift and go to state 76
    AND             shift and go to state 85
    DIVIDE          shift and go to state 79
    EQUALS          shift and go to state 80
    EXPT            shift and go to state 74
    GE              shift and go to state 82
    GT              shift and go to state 77
    LE              shift and go to state 72
    LT              shift and go to state 75
    MOD             shift and go to state 87
    NE              shift and go to state 73
    OR              shift and go to state 86
    MINUS           shift and go to state 70
    TIMES           shift and go to state 81
    XOR             shift and go to state 78
    IN              shift and go to state 84
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71


state 101

    (74) statement -> WHILE LPAREN expression . RPAREN block_statement
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    RPAREN          shift and go to state 143
    PLUS            shift and go to state 76
    AND             shift and go to state 85
    DIVIDE          shift and go to state 79
    EQUALS          shift and go to state 80
    EXPT            shift and go to state 74
    GE              shift and go to state 82
    GT              shift and go to state 77
    LE              shift and go to state 72
    LT              shift and go to state 75
    MOD             shift and go to state 87
    NE              shift and go to state 73
    OR              shift and go to state 86
    MINUS           shift and go to state 70
    TIMES           shift and go to state 81
    XOR             shift and go to state 78
    IN              shift and go to state 84
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71


state 102

    (79) reference1 -> expression LSQUARE . expression RSQUARE
    (80) reference0 -> expression LSQUARE . expression : expression RSQUARE
    (81) reference0 -> expression LSQUARE . : RSQUARE
    (82) reference0 -> expression LSQUARE . : expression RSQUARE
    (83) reference0 -> expression LSQUARE . expression : RSQUARE
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    :               shift and go to state 132
    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 144

state 103

    (39) expression0 -> NEW ID LPAREN . expression_list RPAREN
    (15) expression_list -> . expression
    (16) expression_list -> . empty
    (17) expression_list -> . expression , expression_list
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (11) empty -> .
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    LPAREN          shift and go to state 23
    RPAREN          reduce using rule 11 (empty -> .)
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    expression_list                shift and go to state 145
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 100
    empty                          shift and go to state 98

state 104

    (18) expression0 -> OBJ_BEGIN property_list OBJ_END .

    LPAREN          reduce using rule 18 (expression0 -> OBJ_BEGIN property_list OBJ_END .)
    PLUS            reduce using rule 18 (expression0 -> OBJ_BEGIN property_list OBJ_END .)
    AND             reduce using rule 18 (expression0 -> OBJ_BEGIN property_list OBJ_END .)
    DIVIDE          reduce using rule 18 (expression0 -> OBJ_BEGIN property_list OBJ_END .)
    EQUALS          reduce using rule 18 (expression0 -> OBJ_BEGIN property_list OBJ_END .)
    EXPT            reduce using rule 18 (expression0 -> OBJ_BEGIN property_list OBJ_END .)
    GE              reduce using rule 18 (expression0 -> OBJ_BEGIN property_list OBJ_END .)
    GT              reduce using rule 18 (expression0 -> OBJ_BEGIN property_list OBJ_END .)
    LE              reduce using rule 18 (expression0 -> OBJ_BEGIN property_list OBJ_END .)
    LT              reduce using rule 18 (expression0 -> OBJ_BEGIN property_list OBJ_END .)
    MOD             reduce using rule 18 (expression0 -> OBJ_BEGIN property_list OBJ_END .)
    NE              reduce using rule 18 (expression0 -> OBJ_BEGIN property_list OBJ_END .)
    OR              reduce using rule 18 (expression0 -> OBJ_BEGIN property_list OBJ_END .)
    MINUS           reduce using rule 18 (expression0 -> OBJ_BEGIN property_list OBJ_END .)
    TIMES           reduce using rule 18 (expression0 -> OBJ_BEGIN property_list OBJ_END .)
    XOR             reduce using rule 18 (expression0 -> OBJ_BEGIN property_list OBJ_END .)
    IN              reduce using rule 18 (expression0 -> OBJ_BEGIN property_list OBJ_END .)
    LSQUARE         reduce using rule 18 (expression0 -> OBJ_BEGIN property_list OBJ_END .)
    DOT             reduce using rule 18 (expression0 -> OBJ_BEGIN property_list OBJ_END .)
    RSQUARE         reduce using rule 18 (expression0 -> OBJ_BEGIN property_list OBJ_END .)
    ,               reduce using rule 18 (expression0 -> OBJ_BEGIN property_list OBJ_END .)
    STATEMENT_END   reduce using rule 18 (expression0 -> OBJ_BEGIN property_list OBJ_END .)
    $end            reduce using rule 18 (expression0 -> OBJ_BEGIN property_list OBJ_END .)
    RBRACE          reduce using rule 18 (expression0 -> OBJ_BEGIN property_list OBJ_END .)
    RPAREN          reduce using rule 18 (expression0 -> OBJ_BEGIN property_list OBJ_END .)
    :               reduce using rule 18 (expression0 -> OBJ_BEGIN property_list OBJ_END .)
    OBJ_END         reduce using rule 18 (expression0 -> OBJ_BEGIN property_list OBJ_END .)


state 105

    (21) property_list -> ID : . expression
    (22) property_list -> ID : . expression , property_list
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 146

state 106

    (8) statements1 -> statement enders statements1 .

    $end            reduce using rule 8 (statements1 -> statement enders statements1 .)
    RBRACE          reduce using rule 8 (statements1 -> statement enders statements1 .)


state 107

    (40) expression0 -> FUNCTION LPAREN paramlist . RPAREN block_statement

    RPAREN          shift and go to state 147


state 108

    (12) paramlist -> ID .
    (14) paramlist -> ID . , paramlist

    RPAREN          reduce using rule 12 (paramlist -> ID .)
    ,               shift and go to state 148


state 109

    (13) paramlist -> empty .

    RPAREN          reduce using rule 13 (paramlist -> empty .)


state 110

    (44) expression1 -> LPAREN expression1 RPAREN .

    LPAREN          reduce using rule 44 (expression1 -> LPAREN expression1 RPAREN .)
    PLUS            reduce using rule 44 (expression1 -> LPAREN expression1 RPAREN .)
    AND             reduce using rule 44 (expression1 -> LPAREN expression1 RPAREN .)
    DIVIDE          reduce using rule 44 (expression1 -> LPAREN expression1 RPAREN .)
    EQUALS          reduce using rule 44 (expression1 -> LPAREN expression1 RPAREN .)
    EXPT            reduce using rule 44 (expression1 -> LPAREN expression1 RPAREN .)
    GE              reduce using rule 44 (expression1 -> LPAREN expression1 RPAREN .)
    GT              reduce using rule 44 (expression1 -> LPAREN expression1 RPAREN .)
    LE              reduce using rule 44 (expression1 -> LPAREN expression1 RPAREN .)
    LT              reduce using rule 44 (expression1 -> LPAREN expression1 RPAREN .)
    MOD             reduce using rule 44 (expression1 -> LPAREN expression1 RPAREN .)
    NE              reduce using rule 44 (expression1 -> LPAREN expression1 RPAREN .)
    OR              reduce using rule 44 (expression1 -> LPAREN expression1 RPAREN .)
    MINUS           reduce using rule 44 (expression1 -> LPAREN expression1 RPAREN .)
    TIMES           reduce using rule 44 (expression1 -> LPAREN expression1 RPAREN .)
    XOR             reduce using rule 44 (expression1 -> LPAREN expression1 RPAREN .)
    IN              reduce using rule 44 (expression1 -> LPAREN expression1 RPAREN .)
    LSQUARE         reduce using rule 44 (expression1 -> LPAREN expression1 RPAREN .)
    DOT             reduce using rule 44 (expression1 -> LPAREN expression1 RPAREN .)
    STATEMENT_END   reduce using rule 44 (expression1 -> LPAREN expression1 RPAREN .)
    $end            reduce using rule 44 (expression1 -> LPAREN expression1 RPAREN .)
    RSQUARE         reduce using rule 44 (expression1 -> LPAREN expression1 RPAREN .)
    ,               reduce using rule 44 (expression1 -> LPAREN expression1 RPAREN .)
    RBRACE          reduce using rule 44 (expression1 -> LPAREN expression1 RPAREN .)
    RPAREN          reduce using rule 44 (expression1 -> LPAREN expression1 RPAREN .)
    :               reduce using rule 44 (expression1 -> LPAREN expression1 RPAREN .)
    OBJ_END         reduce using rule 44 (expression1 -> LPAREN expression1 RPAREN .)


state 111

    (43) expression0 -> LPAREN expression0 RPAREN .

    LPAREN          reduce using rule 43 (expression0 -> LPAREN expression0 RPAREN .)
    PLUS            reduce using rule 43 (expression0 -> LPAREN expression0 RPAREN .)
    AND             reduce using rule 43 (expression0 -> LPAREN expression0 RPAREN .)
    DIVIDE          reduce using rule 43 (expression0 -> LPAREN expression0 RPAREN .)
    EQUALS          reduce using rule 43 (expression0 -> LPAREN expression0 RPAREN .)
    EXPT            reduce using rule 43 (expression0 -> LPAREN expression0 RPAREN .)
    GE              reduce using rule 43 (expression0 -> LPAREN expression0 RPAREN .)
    GT              reduce using rule 43 (expression0 -> LPAREN expression0 RPAREN .)
    LE              reduce using rule 43 (expression0 -> LPAREN expression0 RPAREN .)
    LT              reduce using rule 43 (expression0 -> LPAREN expression0 RPAREN .)
    MOD             reduce using rule 43 (expression0 -> LPAREN expression0 RPAREN .)
    NE              reduce using rule 43 (expression0 -> LPAREN expression0 RPAREN .)
    OR              reduce using rule 43 (expression0 -> LPAREN expression0 RPAREN .)
    MINUS           reduce using rule 43 (expression0 -> LPAREN expression0 RPAREN .)
    TIMES           reduce using rule 43 (expression0 -> LPAREN expression0 RPAREN .)
    XOR             reduce using rule 43 (expression0 -> LPAREN expression0 RPAREN .)
    IN              reduce using rule 43 (expression0 -> LPAREN expression0 RPAREN .)
    LSQUARE         reduce using rule 43 (expression0 -> LPAREN expression0 RPAREN .)
    DOT             reduce using rule 43 (expression0 -> LPAREN expression0 RPAREN .)
    RSQUARE         reduce using rule 43 (expression0 -> LPAREN expression0 RPAREN .)
    ,               reduce using rule 43 (expression0 -> LPAREN expression0 RPAREN .)
    STATEMENT_END   reduce using rule 43 (expression0 -> LPAREN expression0 RPAREN .)
    $end            reduce using rule 43 (expression0 -> LPAREN expression0 RPAREN .)
    RBRACE          reduce using rule 43 (expression0 -> LPAREN expression0 RPAREN .)
    RPAREN          reduce using rule 43 (expression0 -> LPAREN expression0 RPAREN .)
    :               reduce using rule 43 (expression0 -> LPAREN expression0 RPAREN .)
    OBJ_END         reduce using rule 43 (expression0 -> LPAREN expression0 RPAREN .)


state 112

    (33) expression0 -> LPAREN tuple_contents RPAREN .

    LPAREN          reduce using rule 33 (expression0 -> LPAREN tuple_contents RPAREN .)
    PLUS            reduce using rule 33 (expression0 -> LPAREN tuple_contents RPAREN .)
    AND             reduce using rule 33 (expression0 -> LPAREN tuple_contents RPAREN .)
    DIVIDE          reduce using rule 33 (expression0 -> LPAREN tuple_contents RPAREN .)
    EQUALS          reduce using rule 33 (expression0 -> LPAREN tuple_contents RPAREN .)
    EXPT            reduce using rule 33 (expression0 -> LPAREN tuple_contents RPAREN .)
    GE              reduce using rule 33 (expression0 -> LPAREN tuple_contents RPAREN .)
    GT              reduce using rule 33 (expression0 -> LPAREN tuple_contents RPAREN .)
    LE              reduce using rule 33 (expression0 -> LPAREN tuple_contents RPAREN .)
    LT              reduce using rule 33 (expression0 -> LPAREN tuple_contents RPAREN .)
    MOD             reduce using rule 33 (expression0 -> LPAREN tuple_contents RPAREN .)
    NE              reduce using rule 33 (expression0 -> LPAREN tuple_contents RPAREN .)
    OR              reduce using rule 33 (expression0 -> LPAREN tuple_contents RPAREN .)
    MINUS           reduce using rule 33 (expression0 -> LPAREN tuple_contents RPAREN .)
    TIMES           reduce using rule 33 (expression0 -> LPAREN tuple_contents RPAREN .)
    XOR             reduce using rule 33 (expression0 -> LPAREN tuple_contents RPAREN .)
    IN              reduce using rule 33 (expression0 -> LPAREN tuple_contents RPAREN .)
    LSQUARE         reduce using rule 33 (expression0 -> LPAREN tuple_contents RPAREN .)
    DOT             reduce using rule 33 (expression0 -> LPAREN tuple_contents RPAREN .)
    RSQUARE         reduce using rule 33 (expression0 -> LPAREN tuple_contents RPAREN .)
    ,               reduce using rule 33 (expression0 -> LPAREN tuple_contents RPAREN .)
    STATEMENT_END   reduce using rule 33 (expression0 -> LPAREN tuple_contents RPAREN .)
    $end            reduce using rule 33 (expression0 -> LPAREN tuple_contents RPAREN .)
    RBRACE          reduce using rule 33 (expression0 -> LPAREN tuple_contents RPAREN .)
    RPAREN          reduce using rule 33 (expression0 -> LPAREN tuple_contents RPAREN .)
    :               reduce using rule 33 (expression0 -> LPAREN tuple_contents RPAREN .)
    OBJ_END         reduce using rule 33 (expression0 -> LPAREN tuple_contents RPAREN .)


state 113

    (45) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    EXPT            reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    NE              reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    XOR             reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    IN              reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    LSQUARE         reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    DOT             reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    STATEMENT_END   reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    RSQUARE         reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    ,               reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    :               reduce using rule 45 (expression -> LPAREN expression RPAREN .)
    OBJ_END         reduce using rule 45 (expression -> LPAREN expression RPAREN .)


state 114

    (37) tuple_contents -> expression , . tuple_contents2
    (35) tuple_contents2 -> expression , .
    (36) tuple_contents2 -> expression , . expression
    (35) tuple_contents2 -> . expression ,
    (36) tuple_contents2 -> . expression , expression
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    RPAREN          reduce using rule 35 (tuple_contents2 -> expression , .)
    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    tuple_contents2                shift and go to state 149
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 150

state 115

    (87) statement -> VAR ID ASSIGN . expression
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 151

state 116

    (41) expression0 -> expression0 LPAREN expression_list . RPAREN

    RPAREN          shift and go to state 152


state 117

    (72) expression0 -> IF LPAREN expression . RPAREN block_statement
    (73) expression0 -> IF LPAREN expression . RPAREN block_statement else_if_chain
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    RPAREN          shift and go to state 153
    PLUS            shift and go to state 76
    AND             shift and go to state 85
    DIVIDE          shift and go to state 79
    EQUALS          shift and go to state 80
    EXPT            shift and go to state 74
    GE              shift and go to state 82
    GT              shift and go to state 77
    LE              shift and go to state 72
    LT              shift and go to state 75
    MOD             shift and go to state 87
    NE              shift and go to state 73
    OR              shift and go to state 86
    MINUS           shift and go to state 70
    TIMES           shift and go to state 81
    XOR             shift and go to state 78
    IN              shift and go to state 84
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71


state 118

    (3) block_statement -> LBRACE statements RBRACE .

    ELSE            reduce using rule 3 (block_statement -> LBRACE statements RBRACE .)
    LPAREN          reduce using rule 3 (block_statement -> LBRACE statements RBRACE .)
    PLUS            reduce using rule 3 (block_statement -> LBRACE statements RBRACE .)
    AND             reduce using rule 3 (block_statement -> LBRACE statements RBRACE .)
    DIVIDE          reduce using rule 3 (block_statement -> LBRACE statements RBRACE .)
    EQUALS          reduce using rule 3 (block_statement -> LBRACE statements RBRACE .)
    EXPT            reduce using rule 3 (block_statement -> LBRACE statements RBRACE .)
    GE              reduce using rule 3 (block_statement -> LBRACE statements RBRACE .)
    GT              reduce using rule 3 (block_statement -> LBRACE statements RBRACE .)
    LE              reduce using rule 3 (block_statement -> LBRACE statements RBRACE .)
    LT              reduce using rule 3 (block_statement -> LBRACE statements RBRACE .)
    MOD             reduce using rule 3 (block_statement -> LBRACE statements RBRACE .)
    NE              reduce using rule 3 (block_statement -> LBRACE statements RBRACE .)
    OR              reduce using rule 3 (block_statement -> LBRACE statements RBRACE .)
    MINUS           reduce using rule 3 (block_statement -> LBRACE statements RBRACE .)
    TIMES           reduce using rule 3 (block_statement -> LBRACE statements RBRACE .)
    XOR             reduce using rule 3 (block_statement -> LBRACE statements RBRACE .)
    IN              reduce using rule 3 (block_statement -> LBRACE statements RBRACE .)
    LSQUARE         reduce using rule 3 (block_statement -> LBRACE statements RBRACE .)
    DOT             reduce using rule 3 (block_statement -> LBRACE statements RBRACE .)
    STATEMENT_END   reduce using rule 3 (block_statement -> LBRACE statements RBRACE .)
    $end            reduce using rule 3 (block_statement -> LBRACE statements RBRACE .)
    RSQUARE         reduce using rule 3 (block_statement -> LBRACE statements RBRACE .)
    ,               reduce using rule 3 (block_statement -> LBRACE statements RBRACE .)
    RBRACE          reduce using rule 3 (block_statement -> LBRACE statements RBRACE .)
    RPAREN          reduce using rule 3 (block_statement -> LBRACE statements RBRACE .)
    :               reduce using rule 3 (block_statement -> LBRACE statements RBRACE .)
    OBJ_END         reduce using rule 3 (block_statement -> LBRACE statements RBRACE .)


state 119

    (58) expression -> expression MINUS expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    PLUS            reduce using rule 58 (expression -> expression MINUS expression .)
    AND             reduce using rule 58 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 58 (expression -> expression MINUS expression .)
    GE              reduce using rule 58 (expression -> expression MINUS expression .)
    GT              reduce using rule 58 (expression -> expression MINUS expression .)
    LE              reduce using rule 58 (expression -> expression MINUS expression .)
    LT              reduce using rule 58 (expression -> expression MINUS expression .)
    NE              reduce using rule 58 (expression -> expression MINUS expression .)
    OR              reduce using rule 58 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 58 (expression -> expression MINUS expression .)
    XOR             reduce using rule 58 (expression -> expression MINUS expression .)
    IN              reduce using rule 58 (expression -> expression MINUS expression .)
    LPAREN          reduce using rule 58 (expression -> expression MINUS expression .)
    STATEMENT_END   reduce using rule 58 (expression -> expression MINUS expression .)
    $end            reduce using rule 58 (expression -> expression MINUS expression .)
    RSQUARE         reduce using rule 58 (expression -> expression MINUS expression .)
    ,               reduce using rule 58 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 58 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 58 (expression -> expression MINUS expression .)
    :               reduce using rule 58 (expression -> expression MINUS expression .)
    OBJ_END         reduce using rule 58 (expression -> expression MINUS expression .)
    DIVIDE          shift and go to state 79
    EXPT            shift and go to state 74
    MOD             shift and go to state 87
    TIMES           shift and go to state 81
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71

  ! DIVIDE          [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! EXPT            [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! LSQUARE         [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! DOT             [ reduce using rule 58 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 76 ]
  ! AND             [ shift and go to state 85 ]
  ! EQUALS          [ shift and go to state 80 ]
  ! GE              [ shift and go to state 82 ]
  ! GT              [ shift and go to state 77 ]
  ! LE              [ shift and go to state 72 ]
  ! LT              [ shift and go to state 75 ]
  ! NE              [ shift and go to state 73 ]
  ! OR              [ shift and go to state 86 ]
  ! MINUS           [ shift and go to state 70 ]
  ! XOR             [ shift and go to state 78 ]
  ! IN              [ shift and go to state 84 ]


state 120

    (78) reference1 -> expression DOT ID .

    LPAREN          reduce using rule 78 (reference1 -> expression DOT ID .)
    ,               reduce using rule 78 (reference1 -> expression DOT ID .)
    PLUS            reduce using rule 78 (reference1 -> expression DOT ID .)
    AND             reduce using rule 78 (reference1 -> expression DOT ID .)
    DIVIDE          reduce using rule 78 (reference1 -> expression DOT ID .)
    EQUALS          reduce using rule 78 (reference1 -> expression DOT ID .)
    EXPT            reduce using rule 78 (reference1 -> expression DOT ID .)
    GE              reduce using rule 78 (reference1 -> expression DOT ID .)
    GT              reduce using rule 78 (reference1 -> expression DOT ID .)
    LE              reduce using rule 78 (reference1 -> expression DOT ID .)
    LT              reduce using rule 78 (reference1 -> expression DOT ID .)
    MOD             reduce using rule 78 (reference1 -> expression DOT ID .)
    NE              reduce using rule 78 (reference1 -> expression DOT ID .)
    OR              reduce using rule 78 (reference1 -> expression DOT ID .)
    MINUS           reduce using rule 78 (reference1 -> expression DOT ID .)
    TIMES           reduce using rule 78 (reference1 -> expression DOT ID .)
    XOR             reduce using rule 78 (reference1 -> expression DOT ID .)
    IN              reduce using rule 78 (reference1 -> expression DOT ID .)
    LSQUARE         reduce using rule 78 (reference1 -> expression DOT ID .)
    DOT             reduce using rule 78 (reference1 -> expression DOT ID .)
    RPAREN          reduce using rule 78 (reference1 -> expression DOT ID .)
    DIVEQUALS       reduce using rule 78 (reference1 -> expression DOT ID .)
    MINUSEQUALS     reduce using rule 78 (reference1 -> expression DOT ID .)
    PLUSEQUALS      reduce using rule 78 (reference1 -> expression DOT ID .)
    TIMESEQUALS     reduce using rule 78 (reference1 -> expression DOT ID .)
    ASSIGN          reduce using rule 78 (reference1 -> expression DOT ID .)
    RSQUARE         reduce using rule 78 (reference1 -> expression DOT ID .)
    STATEMENT_END   reduce using rule 78 (reference1 -> expression DOT ID .)
    $end            reduce using rule 78 (reference1 -> expression DOT ID .)
    RBRACE          reduce using rule 78 (reference1 -> expression DOT ID .)
    :               reduce using rule 78 (reference1 -> expression DOT ID .)
    OBJ_END         reduce using rule 78 (reference1 -> expression DOT ID .)


state 121

    (53) expression -> expression LE expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    AND             reduce using rule 53 (expression -> expression LE expression .)
    EQUALS          reduce using rule 53 (expression -> expression LE expression .)
    GE              reduce using rule 53 (expression -> expression LE expression .)
    GT              reduce using rule 53 (expression -> expression LE expression .)
    LE              reduce using rule 53 (expression -> expression LE expression .)
    LT              reduce using rule 53 (expression -> expression LE expression .)
    NE              reduce using rule 53 (expression -> expression LE expression .)
    OR              reduce using rule 53 (expression -> expression LE expression .)
    XOR             reduce using rule 53 (expression -> expression LE expression .)
    IN              reduce using rule 53 (expression -> expression LE expression .)
    LPAREN          reduce using rule 53 (expression -> expression LE expression .)
    STATEMENT_END   reduce using rule 53 (expression -> expression LE expression .)
    $end            reduce using rule 53 (expression -> expression LE expression .)
    RSQUARE         reduce using rule 53 (expression -> expression LE expression .)
    ,               reduce using rule 53 (expression -> expression LE expression .)
    RBRACE          reduce using rule 53 (expression -> expression LE expression .)
    RPAREN          reduce using rule 53 (expression -> expression LE expression .)
    :               reduce using rule 53 (expression -> expression LE expression .)
    OBJ_END         reduce using rule 53 (expression -> expression LE expression .)
    PLUS            shift and go to state 76
    DIVIDE          shift and go to state 79
    EXPT            shift and go to state 74
    MOD             shift and go to state 87
    MINUS           shift and go to state 70
    TIMES           shift and go to state 81
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71

  ! PLUS            [ reduce using rule 53 (expression -> expression LE expression .) ]
  ! DIVIDE          [ reduce using rule 53 (expression -> expression LE expression .) ]
  ! EXPT            [ reduce using rule 53 (expression -> expression LE expression .) ]
  ! MOD             [ reduce using rule 53 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 53 (expression -> expression LE expression .) ]
  ! TIMES           [ reduce using rule 53 (expression -> expression LE expression .) ]
  ! LSQUARE         [ reduce using rule 53 (expression -> expression LE expression .) ]
  ! DOT             [ reduce using rule 53 (expression -> expression LE expression .) ]
  ! AND             [ shift and go to state 85 ]
  ! EQUALS          [ shift and go to state 80 ]
  ! GE              [ shift and go to state 82 ]
  ! GT              [ shift and go to state 77 ]
  ! LE              [ shift and go to state 72 ]
  ! LT              [ shift and go to state 75 ]
  ! NE              [ shift and go to state 73 ]
  ! OR              [ shift and go to state 86 ]
  ! XOR             [ shift and go to state 78 ]
  ! IN              [ shift and go to state 84 ]


state 122

    (56) expression -> expression NE expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    AND             reduce using rule 56 (expression -> expression NE expression .)
    EQUALS          reduce using rule 56 (expression -> expression NE expression .)
    NE              reduce using rule 56 (expression -> expression NE expression .)
    OR              reduce using rule 56 (expression -> expression NE expression .)
    XOR             reduce using rule 56 (expression -> expression NE expression .)
    LPAREN          reduce using rule 56 (expression -> expression NE expression .)
    STATEMENT_END   reduce using rule 56 (expression -> expression NE expression .)
    $end            reduce using rule 56 (expression -> expression NE expression .)
    RSQUARE         reduce using rule 56 (expression -> expression NE expression .)
    ,               reduce using rule 56 (expression -> expression NE expression .)
    RBRACE          reduce using rule 56 (expression -> expression NE expression .)
    RPAREN          reduce using rule 56 (expression -> expression NE expression .)
    :               reduce using rule 56 (expression -> expression NE expression .)
    OBJ_END         reduce using rule 56 (expression -> expression NE expression .)
    PLUS            shift and go to state 76
    DIVIDE          shift and go to state 79
    EXPT            shift and go to state 74
    GE              shift and go to state 82
    GT              shift and go to state 77
    LE              shift and go to state 72
    LT              shift and go to state 75
    MOD             shift and go to state 87
    MINUS           shift and go to state 70
    TIMES           shift and go to state 81
    IN              shift and go to state 84
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71

  ! PLUS            [ reduce using rule 56 (expression -> expression NE expression .) ]
  ! DIVIDE          [ reduce using rule 56 (expression -> expression NE expression .) ]
  ! EXPT            [ reduce using rule 56 (expression -> expression NE expression .) ]
  ! GE              [ reduce using rule 56 (expression -> expression NE expression .) ]
  ! GT              [ reduce using rule 56 (expression -> expression NE expression .) ]
  ! LE              [ reduce using rule 56 (expression -> expression NE expression .) ]
  ! LT              [ reduce using rule 56 (expression -> expression NE expression .) ]
  ! MOD             [ reduce using rule 56 (expression -> expression NE expression .) ]
  ! MINUS           [ reduce using rule 56 (expression -> expression NE expression .) ]
  ! TIMES           [ reduce using rule 56 (expression -> expression NE expression .) ]
  ! IN              [ reduce using rule 56 (expression -> expression NE expression .) ]
  ! LSQUARE         [ reduce using rule 56 (expression -> expression NE expression .) ]
  ! DOT             [ reduce using rule 56 (expression -> expression NE expression .) ]
  ! AND             [ shift and go to state 85 ]
  ! EQUALS          [ shift and go to state 80 ]
  ! NE              [ shift and go to state 73 ]
  ! OR              [ shift and go to state 86 ]
  ! XOR             [ shift and go to state 78 ]


state 123

    (50) expression -> expression EXPT expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    PLUS            reduce using rule 50 (expression -> expression EXPT expression .)
    AND             reduce using rule 50 (expression -> expression EXPT expression .)
    DIVIDE          reduce using rule 50 (expression -> expression EXPT expression .)
    EQUALS          reduce using rule 50 (expression -> expression EXPT expression .)
    GE              reduce using rule 50 (expression -> expression EXPT expression .)
    GT              reduce using rule 50 (expression -> expression EXPT expression .)
    LE              reduce using rule 50 (expression -> expression EXPT expression .)
    LT              reduce using rule 50 (expression -> expression EXPT expression .)
    MOD             reduce using rule 50 (expression -> expression EXPT expression .)
    NE              reduce using rule 50 (expression -> expression EXPT expression .)
    OR              reduce using rule 50 (expression -> expression EXPT expression .)
    MINUS           reduce using rule 50 (expression -> expression EXPT expression .)
    TIMES           reduce using rule 50 (expression -> expression EXPT expression .)
    XOR             reduce using rule 50 (expression -> expression EXPT expression .)
    IN              reduce using rule 50 (expression -> expression EXPT expression .)
    LPAREN          reduce using rule 50 (expression -> expression EXPT expression .)
    STATEMENT_END   reduce using rule 50 (expression -> expression EXPT expression .)
    $end            reduce using rule 50 (expression -> expression EXPT expression .)
    RSQUARE         reduce using rule 50 (expression -> expression EXPT expression .)
    ,               reduce using rule 50 (expression -> expression EXPT expression .)
    RBRACE          reduce using rule 50 (expression -> expression EXPT expression .)
    RPAREN          reduce using rule 50 (expression -> expression EXPT expression .)
    :               reduce using rule 50 (expression -> expression EXPT expression .)
    OBJ_END         reduce using rule 50 (expression -> expression EXPT expression .)
    EXPT            shift and go to state 74
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71

  ! EXPT            [ reduce using rule 50 (expression -> expression EXPT expression .) ]
  ! LSQUARE         [ reduce using rule 50 (expression -> expression EXPT expression .) ]
  ! DOT             [ reduce using rule 50 (expression -> expression EXPT expression .) ]
  ! PLUS            [ shift and go to state 76 ]
  ! AND             [ shift and go to state 85 ]
  ! DIVIDE          [ shift and go to state 79 ]
  ! EQUALS          [ shift and go to state 80 ]
  ! GE              [ shift and go to state 82 ]
  ! GT              [ shift and go to state 77 ]
  ! LE              [ shift and go to state 72 ]
  ! LT              [ shift and go to state 75 ]
  ! MOD             [ shift and go to state 87 ]
  ! NE              [ shift and go to state 73 ]
  ! OR              [ shift and go to state 86 ]
  ! MINUS           [ shift and go to state 70 ]
  ! TIMES           [ shift and go to state 81 ]
  ! XOR             [ shift and go to state 78 ]
  ! IN              [ shift and go to state 84 ]


state 124

    (54) expression -> expression LT expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    AND             reduce using rule 54 (expression -> expression LT expression .)
    EQUALS          reduce using rule 54 (expression -> expression LT expression .)
    GE              reduce using rule 54 (expression -> expression LT expression .)
    GT              reduce using rule 54 (expression -> expression LT expression .)
    LE              reduce using rule 54 (expression -> expression LT expression .)
    LT              reduce using rule 54 (expression -> expression LT expression .)
    NE              reduce using rule 54 (expression -> expression LT expression .)
    OR              reduce using rule 54 (expression -> expression LT expression .)
    XOR             reduce using rule 54 (expression -> expression LT expression .)
    IN              reduce using rule 54 (expression -> expression LT expression .)
    LPAREN          reduce using rule 54 (expression -> expression LT expression .)
    STATEMENT_END   reduce using rule 54 (expression -> expression LT expression .)
    $end            reduce using rule 54 (expression -> expression LT expression .)
    RSQUARE         reduce using rule 54 (expression -> expression LT expression .)
    ,               reduce using rule 54 (expression -> expression LT expression .)
    RBRACE          reduce using rule 54 (expression -> expression LT expression .)
    RPAREN          reduce using rule 54 (expression -> expression LT expression .)
    :               reduce using rule 54 (expression -> expression LT expression .)
    OBJ_END         reduce using rule 54 (expression -> expression LT expression .)
    PLUS            shift and go to state 76
    DIVIDE          shift and go to state 79
    EXPT            shift and go to state 74
    MOD             shift and go to state 87
    MINUS           shift and go to state 70
    TIMES           shift and go to state 81
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71

  ! PLUS            [ reduce using rule 54 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 54 (expression -> expression LT expression .) ]
  ! EXPT            [ reduce using rule 54 (expression -> expression LT expression .) ]
  ! MOD             [ reduce using rule 54 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 54 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 54 (expression -> expression LT expression .) ]
  ! LSQUARE         [ reduce using rule 54 (expression -> expression LT expression .) ]
  ! DOT             [ reduce using rule 54 (expression -> expression LT expression .) ]
  ! AND             [ shift and go to state 85 ]
  ! EQUALS          [ shift and go to state 80 ]
  ! GE              [ shift and go to state 82 ]
  ! GT              [ shift and go to state 77 ]
  ! LE              [ shift and go to state 72 ]
  ! LT              [ shift and go to state 75 ]
  ! NE              [ shift and go to state 73 ]
  ! OR              [ shift and go to state 86 ]
  ! XOR             [ shift and go to state 78 ]
  ! IN              [ shift and go to state 84 ]


state 125

    (46) expression -> expression PLUS expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    PLUS            reduce using rule 46 (expression -> expression PLUS expression .)
    AND             reduce using rule 46 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 46 (expression -> expression PLUS expression .)
    GE              reduce using rule 46 (expression -> expression PLUS expression .)
    GT              reduce using rule 46 (expression -> expression PLUS expression .)
    LE              reduce using rule 46 (expression -> expression PLUS expression .)
    LT              reduce using rule 46 (expression -> expression PLUS expression .)
    NE              reduce using rule 46 (expression -> expression PLUS expression .)
    OR              reduce using rule 46 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 46 (expression -> expression PLUS expression .)
    XOR             reduce using rule 46 (expression -> expression PLUS expression .)
    IN              reduce using rule 46 (expression -> expression PLUS expression .)
    LPAREN          reduce using rule 46 (expression -> expression PLUS expression .)
    STATEMENT_END   reduce using rule 46 (expression -> expression PLUS expression .)
    $end            reduce using rule 46 (expression -> expression PLUS expression .)
    RSQUARE         reduce using rule 46 (expression -> expression PLUS expression .)
    ,               reduce using rule 46 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 46 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 46 (expression -> expression PLUS expression .)
    :               reduce using rule 46 (expression -> expression PLUS expression .)
    OBJ_END         reduce using rule 46 (expression -> expression PLUS expression .)
    DIVIDE          shift and go to state 79
    EXPT            shift and go to state 74
    MOD             shift and go to state 87
    TIMES           shift and go to state 81
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71

  ! DIVIDE          [ reduce using rule 46 (expression -> expression PLUS expression .) ]
  ! EXPT            [ reduce using rule 46 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 46 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 46 (expression -> expression PLUS expression .) ]
  ! LSQUARE         [ reduce using rule 46 (expression -> expression PLUS expression .) ]
  ! DOT             [ reduce using rule 46 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 76 ]
  ! AND             [ shift and go to state 85 ]
  ! EQUALS          [ shift and go to state 80 ]
  ! GE              [ shift and go to state 82 ]
  ! GT              [ shift and go to state 77 ]
  ! LE              [ shift and go to state 72 ]
  ! LT              [ shift and go to state 75 ]
  ! NE              [ shift and go to state 73 ]
  ! OR              [ shift and go to state 86 ]
  ! MINUS           [ shift and go to state 70 ]
  ! XOR             [ shift and go to state 78 ]
  ! IN              [ shift and go to state 84 ]


state 126

    (52) expression -> expression GT expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    AND             reduce using rule 52 (expression -> expression GT expression .)
    EQUALS          reduce using rule 52 (expression -> expression GT expression .)
    GE              reduce using rule 52 (expression -> expression GT expression .)
    GT              reduce using rule 52 (expression -> expression GT expression .)
    LE              reduce using rule 52 (expression -> expression GT expression .)
    LT              reduce using rule 52 (expression -> expression GT expression .)
    NE              reduce using rule 52 (expression -> expression GT expression .)
    OR              reduce using rule 52 (expression -> expression GT expression .)
    XOR             reduce using rule 52 (expression -> expression GT expression .)
    IN              reduce using rule 52 (expression -> expression GT expression .)
    LPAREN          reduce using rule 52 (expression -> expression GT expression .)
    STATEMENT_END   reduce using rule 52 (expression -> expression GT expression .)
    $end            reduce using rule 52 (expression -> expression GT expression .)
    RSQUARE         reduce using rule 52 (expression -> expression GT expression .)
    ,               reduce using rule 52 (expression -> expression GT expression .)
    RBRACE          reduce using rule 52 (expression -> expression GT expression .)
    RPAREN          reduce using rule 52 (expression -> expression GT expression .)
    :               reduce using rule 52 (expression -> expression GT expression .)
    OBJ_END         reduce using rule 52 (expression -> expression GT expression .)
    PLUS            shift and go to state 76
    DIVIDE          shift and go to state 79
    EXPT            shift and go to state 74
    MOD             shift and go to state 87
    MINUS           shift and go to state 70
    TIMES           shift and go to state 81
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71

  ! PLUS            [ reduce using rule 52 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 52 (expression -> expression GT expression .) ]
  ! EXPT            [ reduce using rule 52 (expression -> expression GT expression .) ]
  ! MOD             [ reduce using rule 52 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 52 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 52 (expression -> expression GT expression .) ]
  ! LSQUARE         [ reduce using rule 52 (expression -> expression GT expression .) ]
  ! DOT             [ reduce using rule 52 (expression -> expression GT expression .) ]
  ! AND             [ shift and go to state 85 ]
  ! EQUALS          [ shift and go to state 80 ]
  ! GE              [ shift and go to state 82 ]
  ! GT              [ shift and go to state 77 ]
  ! LE              [ shift and go to state 72 ]
  ! LT              [ shift and go to state 75 ]
  ! NE              [ shift and go to state 73 ]
  ! OR              [ shift and go to state 86 ]
  ! XOR             [ shift and go to state 78 ]
  ! IN              [ shift and go to state 84 ]


state 127

    (60) expression -> expression XOR expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    OR              reduce using rule 60 (expression -> expression XOR expression .)
    XOR             reduce using rule 60 (expression -> expression XOR expression .)
    LPAREN          reduce using rule 60 (expression -> expression XOR expression .)
    STATEMENT_END   reduce using rule 60 (expression -> expression XOR expression .)
    $end            reduce using rule 60 (expression -> expression XOR expression .)
    RSQUARE         reduce using rule 60 (expression -> expression XOR expression .)
    ,               reduce using rule 60 (expression -> expression XOR expression .)
    RBRACE          reduce using rule 60 (expression -> expression XOR expression .)
    RPAREN          reduce using rule 60 (expression -> expression XOR expression .)
    :               reduce using rule 60 (expression -> expression XOR expression .)
    OBJ_END         reduce using rule 60 (expression -> expression XOR expression .)
    PLUS            shift and go to state 76
    AND             shift and go to state 85
    DIVIDE          shift and go to state 79
    EQUALS          shift and go to state 80
    EXPT            shift and go to state 74
    GE              shift and go to state 82
    GT              shift and go to state 77
    LE              shift and go to state 72
    LT              shift and go to state 75
    MOD             shift and go to state 87
    NE              shift and go to state 73
    MINUS           shift and go to state 70
    TIMES           shift and go to state 81
    IN              shift and go to state 84
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71

  ! PLUS            [ reduce using rule 60 (expression -> expression XOR expression .) ]
  ! AND             [ reduce using rule 60 (expression -> expression XOR expression .) ]
  ! DIVIDE          [ reduce using rule 60 (expression -> expression XOR expression .) ]
  ! EQUALS          [ reduce using rule 60 (expression -> expression XOR expression .) ]
  ! EXPT            [ reduce using rule 60 (expression -> expression XOR expression .) ]
  ! GE              [ reduce using rule 60 (expression -> expression XOR expression .) ]
  ! GT              [ reduce using rule 60 (expression -> expression XOR expression .) ]
  ! LE              [ reduce using rule 60 (expression -> expression XOR expression .) ]
  ! LT              [ reduce using rule 60 (expression -> expression XOR expression .) ]
  ! MOD             [ reduce using rule 60 (expression -> expression XOR expression .) ]
  ! NE              [ reduce using rule 60 (expression -> expression XOR expression .) ]
  ! MINUS           [ reduce using rule 60 (expression -> expression XOR expression .) ]
  ! TIMES           [ reduce using rule 60 (expression -> expression XOR expression .) ]
  ! IN              [ reduce using rule 60 (expression -> expression XOR expression .) ]
  ! LSQUARE         [ reduce using rule 60 (expression -> expression XOR expression .) ]
  ! DOT             [ reduce using rule 60 (expression -> expression XOR expression .) ]
  ! OR              [ shift and go to state 86 ]
  ! XOR             [ shift and go to state 78 ]


state 128

    (48) expression -> expression DIVIDE expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    PLUS            reduce using rule 48 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 48 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 48 (expression -> expression DIVIDE expression .)
    EQUALS          reduce using rule 48 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 48 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 48 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 48 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 48 (expression -> expression DIVIDE expression .)
    MOD             reduce using rule 48 (expression -> expression DIVIDE expression .)
    NE              reduce using rule 48 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 48 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 48 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 48 (expression -> expression DIVIDE expression .)
    XOR             reduce using rule 48 (expression -> expression DIVIDE expression .)
    IN              reduce using rule 48 (expression -> expression DIVIDE expression .)
    LPAREN          reduce using rule 48 (expression -> expression DIVIDE expression .)
    STATEMENT_END   reduce using rule 48 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 48 (expression -> expression DIVIDE expression .)
    RSQUARE         reduce using rule 48 (expression -> expression DIVIDE expression .)
    ,               reduce using rule 48 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 48 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 48 (expression -> expression DIVIDE expression .)
    :               reduce using rule 48 (expression -> expression DIVIDE expression .)
    OBJ_END         reduce using rule 48 (expression -> expression DIVIDE expression .)
    EXPT            shift and go to state 74
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71

  ! EXPT            [ reduce using rule 48 (expression -> expression DIVIDE expression .) ]
  ! LSQUARE         [ reduce using rule 48 (expression -> expression DIVIDE expression .) ]
  ! DOT             [ reduce using rule 48 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 76 ]
  ! AND             [ shift and go to state 85 ]
  ! DIVIDE          [ shift and go to state 79 ]
  ! EQUALS          [ shift and go to state 80 ]
  ! GE              [ shift and go to state 82 ]
  ! GT              [ shift and go to state 77 ]
  ! LE              [ shift and go to state 72 ]
  ! LT              [ shift and go to state 75 ]
  ! MOD             [ shift and go to state 87 ]
  ! NE              [ shift and go to state 73 ]
  ! OR              [ shift and go to state 86 ]
  ! MINUS           [ shift and go to state 70 ]
  ! TIMES           [ shift and go to state 81 ]
  ! XOR             [ shift and go to state 78 ]
  ! IN              [ shift and go to state 84 ]


state 129

    (49) expression -> expression EQUALS expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    AND             reduce using rule 49 (expression -> expression EQUALS expression .)
    EQUALS          reduce using rule 49 (expression -> expression EQUALS expression .)
    NE              reduce using rule 49 (expression -> expression EQUALS expression .)
    OR              reduce using rule 49 (expression -> expression EQUALS expression .)
    XOR             reduce using rule 49 (expression -> expression EQUALS expression .)
    LPAREN          reduce using rule 49 (expression -> expression EQUALS expression .)
    STATEMENT_END   reduce using rule 49 (expression -> expression EQUALS expression .)
    $end            reduce using rule 49 (expression -> expression EQUALS expression .)
    RSQUARE         reduce using rule 49 (expression -> expression EQUALS expression .)
    ,               reduce using rule 49 (expression -> expression EQUALS expression .)
    RBRACE          reduce using rule 49 (expression -> expression EQUALS expression .)
    RPAREN          reduce using rule 49 (expression -> expression EQUALS expression .)
    :               reduce using rule 49 (expression -> expression EQUALS expression .)
    OBJ_END         reduce using rule 49 (expression -> expression EQUALS expression .)
    PLUS            shift and go to state 76
    DIVIDE          shift and go to state 79
    EXPT            shift and go to state 74
    GE              shift and go to state 82
    GT              shift and go to state 77
    LE              shift and go to state 72
    LT              shift and go to state 75
    MOD             shift and go to state 87
    MINUS           shift and go to state 70
    TIMES           shift and go to state 81
    IN              shift and go to state 84
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71

  ! PLUS            [ reduce using rule 49 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 49 (expression -> expression EQUALS expression .) ]
  ! EXPT            [ reduce using rule 49 (expression -> expression EQUALS expression .) ]
  ! GE              [ reduce using rule 49 (expression -> expression EQUALS expression .) ]
  ! GT              [ reduce using rule 49 (expression -> expression EQUALS expression .) ]
  ! LE              [ reduce using rule 49 (expression -> expression EQUALS expression .) ]
  ! LT              [ reduce using rule 49 (expression -> expression EQUALS expression .) ]
  ! MOD             [ reduce using rule 49 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 49 (expression -> expression EQUALS expression .) ]
  ! TIMES           [ reduce using rule 49 (expression -> expression EQUALS expression .) ]
  ! IN              [ reduce using rule 49 (expression -> expression EQUALS expression .) ]
  ! LSQUARE         [ reduce using rule 49 (expression -> expression EQUALS expression .) ]
  ! DOT             [ reduce using rule 49 (expression -> expression EQUALS expression .) ]
  ! AND             [ shift and go to state 85 ]
  ! EQUALS          [ shift and go to state 80 ]
  ! NE              [ shift and go to state 73 ]
  ! OR              [ shift and go to state 86 ]
  ! XOR             [ shift and go to state 78 ]


state 130

    (59) expression -> expression TIMES expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    PLUS            reduce using rule 59 (expression -> expression TIMES expression .)
    AND             reduce using rule 59 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 59 (expression -> expression TIMES expression .)
    EQUALS          reduce using rule 59 (expression -> expression TIMES expression .)
    GE              reduce using rule 59 (expression -> expression TIMES expression .)
    GT              reduce using rule 59 (expression -> expression TIMES expression .)
    LE              reduce using rule 59 (expression -> expression TIMES expression .)
    LT              reduce using rule 59 (expression -> expression TIMES expression .)
    MOD             reduce using rule 59 (expression -> expression TIMES expression .)
    NE              reduce using rule 59 (expression -> expression TIMES expression .)
    OR              reduce using rule 59 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 59 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 59 (expression -> expression TIMES expression .)
    XOR             reduce using rule 59 (expression -> expression TIMES expression .)
    IN              reduce using rule 59 (expression -> expression TIMES expression .)
    LPAREN          reduce using rule 59 (expression -> expression TIMES expression .)
    STATEMENT_END   reduce using rule 59 (expression -> expression TIMES expression .)
    $end            reduce using rule 59 (expression -> expression TIMES expression .)
    RSQUARE         reduce using rule 59 (expression -> expression TIMES expression .)
    ,               reduce using rule 59 (expression -> expression TIMES expression .)
    RBRACE          reduce using rule 59 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 59 (expression -> expression TIMES expression .)
    :               reduce using rule 59 (expression -> expression TIMES expression .)
    OBJ_END         reduce using rule 59 (expression -> expression TIMES expression .)
    EXPT            shift and go to state 74
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71

  ! EXPT            [ reduce using rule 59 (expression -> expression TIMES expression .) ]
  ! LSQUARE         [ reduce using rule 59 (expression -> expression TIMES expression .) ]
  ! DOT             [ reduce using rule 59 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 76 ]
  ! AND             [ shift and go to state 85 ]
  ! DIVIDE          [ shift and go to state 79 ]
  ! EQUALS          [ shift and go to state 80 ]
  ! GE              [ shift and go to state 82 ]
  ! GT              [ shift and go to state 77 ]
  ! LE              [ shift and go to state 72 ]
  ! LT              [ shift and go to state 75 ]
  ! MOD             [ shift and go to state 87 ]
  ! NE              [ shift and go to state 73 ]
  ! OR              [ shift and go to state 86 ]
  ! MINUS           [ shift and go to state 70 ]
  ! TIMES           [ shift and go to state 81 ]
  ! XOR             [ shift and go to state 78 ]
  ! IN              [ shift and go to state 84 ]


state 131

    (51) expression -> expression GE expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    AND             reduce using rule 51 (expression -> expression GE expression .)
    EQUALS          reduce using rule 51 (expression -> expression GE expression .)
    GE              reduce using rule 51 (expression -> expression GE expression .)
    GT              reduce using rule 51 (expression -> expression GE expression .)
    LE              reduce using rule 51 (expression -> expression GE expression .)
    LT              reduce using rule 51 (expression -> expression GE expression .)
    NE              reduce using rule 51 (expression -> expression GE expression .)
    OR              reduce using rule 51 (expression -> expression GE expression .)
    XOR             reduce using rule 51 (expression -> expression GE expression .)
    IN              reduce using rule 51 (expression -> expression GE expression .)
    LPAREN          reduce using rule 51 (expression -> expression GE expression .)
    STATEMENT_END   reduce using rule 51 (expression -> expression GE expression .)
    $end            reduce using rule 51 (expression -> expression GE expression .)
    RSQUARE         reduce using rule 51 (expression -> expression GE expression .)
    ,               reduce using rule 51 (expression -> expression GE expression .)
    RBRACE          reduce using rule 51 (expression -> expression GE expression .)
    RPAREN          reduce using rule 51 (expression -> expression GE expression .)
    :               reduce using rule 51 (expression -> expression GE expression .)
    OBJ_END         reduce using rule 51 (expression -> expression GE expression .)
    PLUS            shift and go to state 76
    DIVIDE          shift and go to state 79
    EXPT            shift and go to state 74
    MOD             shift and go to state 87
    MINUS           shift and go to state 70
    TIMES           shift and go to state 81
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71

  ! PLUS            [ reduce using rule 51 (expression -> expression GE expression .) ]
  ! DIVIDE          [ reduce using rule 51 (expression -> expression GE expression .) ]
  ! EXPT            [ reduce using rule 51 (expression -> expression GE expression .) ]
  ! MOD             [ reduce using rule 51 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 51 (expression -> expression GE expression .) ]
  ! TIMES           [ reduce using rule 51 (expression -> expression GE expression .) ]
  ! LSQUARE         [ reduce using rule 51 (expression -> expression GE expression .) ]
  ! DOT             [ reduce using rule 51 (expression -> expression GE expression .) ]
  ! AND             [ shift and go to state 85 ]
  ! EQUALS          [ shift and go to state 80 ]
  ! GE              [ shift and go to state 82 ]
  ! GT              [ shift and go to state 77 ]
  ! LE              [ shift and go to state 72 ]
  ! LT              [ shift and go to state 75 ]
  ! NE              [ shift and go to state 73 ]
  ! OR              [ shift and go to state 86 ]
  ! XOR             [ shift and go to state 78 ]
  ! IN              [ shift and go to state 84 ]


state 132

    (81) reference0 -> expression LSQUARE : . RSQUARE
    (82) reference0 -> expression LSQUARE : . expression RSQUARE
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    RSQUARE         shift and go to state 154
    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 155

state 133

    (80) reference0 -> expression LSQUARE expression . : expression RSQUARE
    (83) reference0 -> expression LSQUARE expression . : RSQUARE
    (79) reference1 -> expression LSQUARE expression . RSQUARE
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    :               shift and go to state 157
    RSQUARE         shift and go to state 156
    PLUS            shift and go to state 76
    AND             shift and go to state 85
    DIVIDE          shift and go to state 79
    EQUALS          shift and go to state 80
    EXPT            shift and go to state 74
    GE              shift and go to state 82
    GT              shift and go to state 77
    LE              shift and go to state 72
    LT              shift and go to state 75
    MOD             shift and go to state 87
    NE              shift and go to state 73
    OR              shift and go to state 86
    MINUS           shift and go to state 70
    TIMES           shift and go to state 81
    XOR             shift and go to state 78
    IN              shift and go to state 84
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71


state 134

    (19) expression0 -> expression IN expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    LPAREN          reduce using rule 19 (expression0 -> expression IN expression .)
    AND             reduce using rule 19 (expression0 -> expression IN expression .)
    EQUALS          reduce using rule 19 (expression0 -> expression IN expression .)
    NE              reduce using rule 19 (expression0 -> expression IN expression .)
    OR              reduce using rule 19 (expression0 -> expression IN expression .)
    XOR             reduce using rule 19 (expression0 -> expression IN expression .)
    IN              reduce using rule 19 (expression0 -> expression IN expression .)
    RSQUARE         reduce using rule 19 (expression0 -> expression IN expression .)
    ,               reduce using rule 19 (expression0 -> expression IN expression .)
    STATEMENT_END   reduce using rule 19 (expression0 -> expression IN expression .)
    $end            reduce using rule 19 (expression0 -> expression IN expression .)
    RBRACE          reduce using rule 19 (expression0 -> expression IN expression .)
    RPAREN          reduce using rule 19 (expression0 -> expression IN expression .)
    :               reduce using rule 19 (expression0 -> expression IN expression .)
    OBJ_END         reduce using rule 19 (expression0 -> expression IN expression .)
    PLUS            shift and go to state 76
    DIVIDE          shift and go to state 79
    EXPT            shift and go to state 74
    GE              shift and go to state 82
    GT              shift and go to state 77
    LE              shift and go to state 72
    LT              shift and go to state 75
    MOD             shift and go to state 87
    MINUS           shift and go to state 70
    TIMES           shift and go to state 81
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71

  ! PLUS            [ reduce using rule 19 (expression0 -> expression IN expression .) ]
  ! DIVIDE          [ reduce using rule 19 (expression0 -> expression IN expression .) ]
  ! EXPT            [ reduce using rule 19 (expression0 -> expression IN expression .) ]
  ! GE              [ reduce using rule 19 (expression0 -> expression IN expression .) ]
  ! GT              [ reduce using rule 19 (expression0 -> expression IN expression .) ]
  ! LE              [ reduce using rule 19 (expression0 -> expression IN expression .) ]
  ! LT              [ reduce using rule 19 (expression0 -> expression IN expression .) ]
  ! MOD             [ reduce using rule 19 (expression0 -> expression IN expression .) ]
  ! MINUS           [ reduce using rule 19 (expression0 -> expression IN expression .) ]
  ! TIMES           [ reduce using rule 19 (expression0 -> expression IN expression .) ]
  ! LSQUARE         [ reduce using rule 19 (expression0 -> expression IN expression .) ]
  ! DOT             [ reduce using rule 19 (expression0 -> expression IN expression .) ]
  ! AND             [ shift and go to state 85 ]
  ! EQUALS          [ shift and go to state 80 ]
  ! NE              [ shift and go to state 73 ]
  ! OR              [ shift and go to state 86 ]
  ! XOR             [ shift and go to state 78 ]
  ! IN              [ shift and go to state 84 ]


state 135

    (47) expression -> expression AND expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    AND             reduce using rule 47 (expression -> expression AND expression .)
    OR              reduce using rule 47 (expression -> expression AND expression .)
    XOR             reduce using rule 47 (expression -> expression AND expression .)
    LPAREN          reduce using rule 47 (expression -> expression AND expression .)
    STATEMENT_END   reduce using rule 47 (expression -> expression AND expression .)
    $end            reduce using rule 47 (expression -> expression AND expression .)
    RSQUARE         reduce using rule 47 (expression -> expression AND expression .)
    ,               reduce using rule 47 (expression -> expression AND expression .)
    RBRACE          reduce using rule 47 (expression -> expression AND expression .)
    RPAREN          reduce using rule 47 (expression -> expression AND expression .)
    :               reduce using rule 47 (expression -> expression AND expression .)
    OBJ_END         reduce using rule 47 (expression -> expression AND expression .)
    PLUS            shift and go to state 76
    DIVIDE          shift and go to state 79
    EQUALS          shift and go to state 80
    EXPT            shift and go to state 74
    GE              shift and go to state 82
    GT              shift and go to state 77
    LE              shift and go to state 72
    LT              shift and go to state 75
    MOD             shift and go to state 87
    NE              shift and go to state 73
    MINUS           shift and go to state 70
    TIMES           shift and go to state 81
    IN              shift and go to state 84
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71

  ! PLUS            [ reduce using rule 47 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 47 (expression -> expression AND expression .) ]
  ! EQUALS          [ reduce using rule 47 (expression -> expression AND expression .) ]
  ! EXPT            [ reduce using rule 47 (expression -> expression AND expression .) ]
  ! GE              [ reduce using rule 47 (expression -> expression AND expression .) ]
  ! GT              [ reduce using rule 47 (expression -> expression AND expression .) ]
  ! LE              [ reduce using rule 47 (expression -> expression AND expression .) ]
  ! LT              [ reduce using rule 47 (expression -> expression AND expression .) ]
  ! MOD             [ reduce using rule 47 (expression -> expression AND expression .) ]
  ! NE              [ reduce using rule 47 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 47 (expression -> expression AND expression .) ]
  ! IN              [ reduce using rule 47 (expression -> expression AND expression .) ]
  ! LSQUARE         [ reduce using rule 47 (expression -> expression AND expression .) ]
  ! DOT             [ reduce using rule 47 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 85 ]
  ! OR              [ shift and go to state 86 ]
  ! XOR             [ shift and go to state 78 ]


state 136

    (57) expression -> expression OR expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    OR              reduce using rule 57 (expression -> expression OR expression .)
    LPAREN          reduce using rule 57 (expression -> expression OR expression .)
    STATEMENT_END   reduce using rule 57 (expression -> expression OR expression .)
    $end            reduce using rule 57 (expression -> expression OR expression .)
    RSQUARE         reduce using rule 57 (expression -> expression OR expression .)
    ,               reduce using rule 57 (expression -> expression OR expression .)
    RBRACE          reduce using rule 57 (expression -> expression OR expression .)
    RPAREN          reduce using rule 57 (expression -> expression OR expression .)
    :               reduce using rule 57 (expression -> expression OR expression .)
    OBJ_END         reduce using rule 57 (expression -> expression OR expression .)
    PLUS            shift and go to state 76
    AND             shift and go to state 85
    DIVIDE          shift and go to state 79
    EQUALS          shift and go to state 80
    EXPT            shift and go to state 74
    GE              shift and go to state 82
    GT              shift and go to state 77
    LE              shift and go to state 72
    LT              shift and go to state 75
    MOD             shift and go to state 87
    NE              shift and go to state 73
    MINUS           shift and go to state 70
    TIMES           shift and go to state 81
    XOR             shift and go to state 78
    IN              shift and go to state 84
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71

  ! PLUS            [ reduce using rule 57 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 57 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 57 (expression -> expression OR expression .) ]
  ! EQUALS          [ reduce using rule 57 (expression -> expression OR expression .) ]
  ! EXPT            [ reduce using rule 57 (expression -> expression OR expression .) ]
  ! GE              [ reduce using rule 57 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 57 (expression -> expression OR expression .) ]
  ! LE              [ reduce using rule 57 (expression -> expression OR expression .) ]
  ! LT              [ reduce using rule 57 (expression -> expression OR expression .) ]
  ! MOD             [ reduce using rule 57 (expression -> expression OR expression .) ]
  ! NE              [ reduce using rule 57 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 57 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 57 (expression -> expression OR expression .) ]
  ! XOR             [ reduce using rule 57 (expression -> expression OR expression .) ]
  ! IN              [ reduce using rule 57 (expression -> expression OR expression .) ]
  ! LSQUARE         [ reduce using rule 57 (expression -> expression OR expression .) ]
  ! DOT             [ reduce using rule 57 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 86 ]


state 137

    (55) expression -> expression MOD expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    PLUS            reduce using rule 55 (expression -> expression MOD expression .)
    AND             reduce using rule 55 (expression -> expression MOD expression .)
    EQUALS          reduce using rule 55 (expression -> expression MOD expression .)
    GE              reduce using rule 55 (expression -> expression MOD expression .)
    GT              reduce using rule 55 (expression -> expression MOD expression .)
    LE              reduce using rule 55 (expression -> expression MOD expression .)
    LT              reduce using rule 55 (expression -> expression MOD expression .)
    MOD             reduce using rule 55 (expression -> expression MOD expression .)
    NE              reduce using rule 55 (expression -> expression MOD expression .)
    OR              reduce using rule 55 (expression -> expression MOD expression .)
    MINUS           reduce using rule 55 (expression -> expression MOD expression .)
    XOR             reduce using rule 55 (expression -> expression MOD expression .)
    IN              reduce using rule 55 (expression -> expression MOD expression .)
    LPAREN          reduce using rule 55 (expression -> expression MOD expression .)
    STATEMENT_END   reduce using rule 55 (expression -> expression MOD expression .)
    $end            reduce using rule 55 (expression -> expression MOD expression .)
    RSQUARE         reduce using rule 55 (expression -> expression MOD expression .)
    ,               reduce using rule 55 (expression -> expression MOD expression .)
    RBRACE          reduce using rule 55 (expression -> expression MOD expression .)
    RPAREN          reduce using rule 55 (expression -> expression MOD expression .)
    :               reduce using rule 55 (expression -> expression MOD expression .)
    OBJ_END         reduce using rule 55 (expression -> expression MOD expression .)
    DIVIDE          shift and go to state 79
    EXPT            shift and go to state 74
    TIMES           shift and go to state 81
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71

  ! DIVIDE          [ reduce using rule 55 (expression -> expression MOD expression .) ]
  ! EXPT            [ reduce using rule 55 (expression -> expression MOD expression .) ]
  ! TIMES           [ reduce using rule 55 (expression -> expression MOD expression .) ]
  ! LSQUARE         [ reduce using rule 55 (expression -> expression MOD expression .) ]
  ! DOT             [ reduce using rule 55 (expression -> expression MOD expression .) ]
  ! PLUS            [ shift and go to state 76 ]
  ! AND             [ shift and go to state 85 ]
  ! EQUALS          [ shift and go to state 80 ]
  ! GE              [ shift and go to state 82 ]
  ! GT              [ shift and go to state 77 ]
  ! LE              [ shift and go to state 72 ]
  ! LT              [ shift and go to state 75 ]
  ! MOD             [ shift and go to state 87 ]
  ! NE              [ shift and go to state 73 ]
  ! OR              [ shift and go to state 86 ]
  ! MINUS           [ shift and go to state 70 ]
  ! XOR             [ shift and go to state 78 ]
  ! IN              [ shift and go to state 84 ]


state 138

    (26) list_contents -> list_contents , expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    RSQUARE         reduce using rule 26 (list_contents -> list_contents , expression .)
    ,               reduce using rule 26 (list_contents -> list_contents , expression .)
    PLUS            shift and go to state 76
    AND             shift and go to state 85
    DIVIDE          shift and go to state 79
    EQUALS          shift and go to state 80
    EXPT            shift and go to state 74
    GE              shift and go to state 82
    GT              shift and go to state 77
    LE              shift and go to state 72
    LT              shift and go to state 75
    MOD             shift and go to state 87
    NE              shift and go to state 73
    OR              shift and go to state 86
    MINUS           shift and go to state 70
    TIMES           shift and go to state 81
    XOR             shift and go to state 78
    IN              shift and go to state 84
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71


state 139

    (86) statement -> CONST VAR ID ASSIGN . expression
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 158

state 140

    (88) statement -> CONST ID ASSIGN expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    STATEMENT_END   reduce using rule 88 (statement -> CONST ID ASSIGN expression .)
    RBRACE          reduce using rule 88 (statement -> CONST ID ASSIGN expression .)
    $end            reduce using rule 88 (statement -> CONST ID ASSIGN expression .)
    PLUS            shift and go to state 76
    AND             shift and go to state 85
    DIVIDE          shift and go to state 79
    EQUALS          shift and go to state 80
    EXPT            shift and go to state 74
    GE              shift and go to state 82
    GT              shift and go to state 77
    LE              shift and go to state 72
    LT              shift and go to state 75
    MOD             shift and go to state 87
    NE              shift and go to state 73
    OR              shift and go to state 86
    MINUS           shift and go to state 70
    TIMES           shift and go to state 81
    XOR             shift and go to state 78
    IN              shift and go to state 84
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71


state 141

    (42) expression0 -> expression1 LPAREN expression_list RPAREN .

    LPAREN          reduce using rule 42 (expression0 -> expression1 LPAREN expression_list RPAREN .)
    PLUS            reduce using rule 42 (expression0 -> expression1 LPAREN expression_list RPAREN .)
    AND             reduce using rule 42 (expression0 -> expression1 LPAREN expression_list RPAREN .)
    DIVIDE          reduce using rule 42 (expression0 -> expression1 LPAREN expression_list RPAREN .)
    EQUALS          reduce using rule 42 (expression0 -> expression1 LPAREN expression_list RPAREN .)
    EXPT            reduce using rule 42 (expression0 -> expression1 LPAREN expression_list RPAREN .)
    GE              reduce using rule 42 (expression0 -> expression1 LPAREN expression_list RPAREN .)
    GT              reduce using rule 42 (expression0 -> expression1 LPAREN expression_list RPAREN .)
    LE              reduce using rule 42 (expression0 -> expression1 LPAREN expression_list RPAREN .)
    LT              reduce using rule 42 (expression0 -> expression1 LPAREN expression_list RPAREN .)
    MOD             reduce using rule 42 (expression0 -> expression1 LPAREN expression_list RPAREN .)
    NE              reduce using rule 42 (expression0 -> expression1 LPAREN expression_list RPAREN .)
    OR              reduce using rule 42 (expression0 -> expression1 LPAREN expression_list RPAREN .)
    MINUS           reduce using rule 42 (expression0 -> expression1 LPAREN expression_list RPAREN .)
    TIMES           reduce using rule 42 (expression0 -> expression1 LPAREN expression_list RPAREN .)
    XOR             reduce using rule 42 (expression0 -> expression1 LPAREN expression_list RPAREN .)
    IN              reduce using rule 42 (expression0 -> expression1 LPAREN expression_list RPAREN .)
    LSQUARE         reduce using rule 42 (expression0 -> expression1 LPAREN expression_list RPAREN .)
    DOT             reduce using rule 42 (expression0 -> expression1 LPAREN expression_list RPAREN .)
    RSQUARE         reduce using rule 42 (expression0 -> expression1 LPAREN expression_list RPAREN .)
    ,               reduce using rule 42 (expression0 -> expression1 LPAREN expression_list RPAREN .)
    STATEMENT_END   reduce using rule 42 (expression0 -> expression1 LPAREN expression_list RPAREN .)
    $end            reduce using rule 42 (expression0 -> expression1 LPAREN expression_list RPAREN .)
    RBRACE          reduce using rule 42 (expression0 -> expression1 LPAREN expression_list RPAREN .)
    RPAREN          reduce using rule 42 (expression0 -> expression1 LPAREN expression_list RPAREN .)
    :               reduce using rule 42 (expression0 -> expression1 LPAREN expression_list RPAREN .)
    OBJ_END         reduce using rule 42 (expression0 -> expression1 LPAREN expression_list RPAREN .)


state 142

    (17) expression_list -> expression , . expression_list
    (15) expression_list -> . expression
    (16) expression_list -> . empty
    (17) expression_list -> . expression , expression_list
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (11) empty -> .
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    LPAREN          shift and go to state 23
    RPAREN          reduce using rule 11 (empty -> .)
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    expression_list                shift and go to state 159
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 100
    empty                          shift and go to state 98

state 143

    (74) statement -> WHILE LPAREN expression RPAREN . block_statement
    (3) block_statement -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 29

    block_statement                shift and go to state 160

state 144

    (79) reference1 -> expression LSQUARE expression . RSQUARE
    (80) reference0 -> expression LSQUARE expression . : expression RSQUARE
    (83) reference0 -> expression LSQUARE expression . : RSQUARE
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    RSQUARE         shift and go to state 156
    :               shift and go to state 157
    PLUS            shift and go to state 76
    AND             shift and go to state 85
    DIVIDE          shift and go to state 79
    EQUALS          shift and go to state 80
    EXPT            shift and go to state 74
    GE              shift and go to state 82
    GT              shift and go to state 77
    LE              shift and go to state 72
    LT              shift and go to state 75
    MOD             shift and go to state 87
    NE              shift and go to state 73
    OR              shift and go to state 86
    MINUS           shift and go to state 70
    TIMES           shift and go to state 81
    XOR             shift and go to state 78
    IN              shift and go to state 84
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71


state 145

    (39) expression0 -> NEW ID LPAREN expression_list . RPAREN

    RPAREN          shift and go to state 161


state 146

    (21) property_list -> ID : expression .
    (22) property_list -> ID : expression . , property_list
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    OBJ_END         reduce using rule 21 (property_list -> ID : expression .)
    ,               shift and go to state 162
    PLUS            shift and go to state 76
    AND             shift and go to state 85
    DIVIDE          shift and go to state 79
    EQUALS          shift and go to state 80
    EXPT            shift and go to state 74
    GE              shift and go to state 82
    GT              shift and go to state 77
    LE              shift and go to state 72
    LT              shift and go to state 75
    MOD             shift and go to state 87
    NE              shift and go to state 73
    OR              shift and go to state 86
    MINUS           shift and go to state 70
    TIMES           shift and go to state 81
    XOR             shift and go to state 78
    IN              shift and go to state 84
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71


state 147

    (40) expression0 -> FUNCTION LPAREN paramlist RPAREN . block_statement
    (3) block_statement -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 29

    block_statement                shift and go to state 163

state 148

    (14) paramlist -> ID , . paramlist
    (12) paramlist -> . ID
    (13) paramlist -> . empty
    (14) paramlist -> . ID , paramlist
    (11) empty -> .

    ID              shift and go to state 108
    RPAREN          reduce using rule 11 (empty -> .)

    empty                          shift and go to state 109
    paramlist                      shift and go to state 164

state 149

    (37) tuple_contents -> expression , tuple_contents2 .

    RPAREN          reduce using rule 37 (tuple_contents -> expression , tuple_contents2 .)


state 150

    (36) tuple_contents2 -> expression , expression .
    (35) tuple_contents2 -> expression . ,
    (36) tuple_contents2 -> expression . , expression
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    RPAREN          reduce using rule 36 (tuple_contents2 -> expression , expression .)
    ,               shift and go to state 165
    PLUS            shift and go to state 76
    AND             shift and go to state 85
    DIVIDE          shift and go to state 79
    EQUALS          shift and go to state 80
    EXPT            shift and go to state 74
    GE              shift and go to state 82
    GT              shift and go to state 77
    LE              shift and go to state 72
    LT              shift and go to state 75
    MOD             shift and go to state 87
    NE              shift and go to state 73
    OR              shift and go to state 86
    MINUS           shift and go to state 70
    TIMES           shift and go to state 81
    XOR             shift and go to state 78
    IN              shift and go to state 84
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71


state 151

    (87) statement -> VAR ID ASSIGN expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    STATEMENT_END   reduce using rule 87 (statement -> VAR ID ASSIGN expression .)
    RBRACE          reduce using rule 87 (statement -> VAR ID ASSIGN expression .)
    $end            reduce using rule 87 (statement -> VAR ID ASSIGN expression .)
    PLUS            shift and go to state 76
    AND             shift and go to state 85
    DIVIDE          shift and go to state 79
    EQUALS          shift and go to state 80
    EXPT            shift and go to state 74
    GE              shift and go to state 82
    GT              shift and go to state 77
    LE              shift and go to state 72
    LT              shift and go to state 75
    MOD             shift and go to state 87
    NE              shift and go to state 73
    OR              shift and go to state 86
    MINUS           shift and go to state 70
    TIMES           shift and go to state 81
    XOR             shift and go to state 78
    IN              shift and go to state 84
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71


state 152

    (41) expression0 -> expression0 LPAREN expression_list RPAREN .

    LPAREN          reduce using rule 41 (expression0 -> expression0 LPAREN expression_list RPAREN .)
    PLUS            reduce using rule 41 (expression0 -> expression0 LPAREN expression_list RPAREN .)
    AND             reduce using rule 41 (expression0 -> expression0 LPAREN expression_list RPAREN .)
    DIVIDE          reduce using rule 41 (expression0 -> expression0 LPAREN expression_list RPAREN .)
    EQUALS          reduce using rule 41 (expression0 -> expression0 LPAREN expression_list RPAREN .)
    EXPT            reduce using rule 41 (expression0 -> expression0 LPAREN expression_list RPAREN .)
    GE              reduce using rule 41 (expression0 -> expression0 LPAREN expression_list RPAREN .)
    GT              reduce using rule 41 (expression0 -> expression0 LPAREN expression_list RPAREN .)
    LE              reduce using rule 41 (expression0 -> expression0 LPAREN expression_list RPAREN .)
    LT              reduce using rule 41 (expression0 -> expression0 LPAREN expression_list RPAREN .)
    MOD             reduce using rule 41 (expression0 -> expression0 LPAREN expression_list RPAREN .)
    NE              reduce using rule 41 (expression0 -> expression0 LPAREN expression_list RPAREN .)
    OR              reduce using rule 41 (expression0 -> expression0 LPAREN expression_list RPAREN .)
    MINUS           reduce using rule 41 (expression0 -> expression0 LPAREN expression_list RPAREN .)
    TIMES           reduce using rule 41 (expression0 -> expression0 LPAREN expression_list RPAREN .)
    XOR             reduce using rule 41 (expression0 -> expression0 LPAREN expression_list RPAREN .)
    IN              reduce using rule 41 (expression0 -> expression0 LPAREN expression_list RPAREN .)
    LSQUARE         reduce using rule 41 (expression0 -> expression0 LPAREN expression_list RPAREN .)
    DOT             reduce using rule 41 (expression0 -> expression0 LPAREN expression_list RPAREN .)
    RSQUARE         reduce using rule 41 (expression0 -> expression0 LPAREN expression_list RPAREN .)
    ,               reduce using rule 41 (expression0 -> expression0 LPAREN expression_list RPAREN .)
    STATEMENT_END   reduce using rule 41 (expression0 -> expression0 LPAREN expression_list RPAREN .)
    $end            reduce using rule 41 (expression0 -> expression0 LPAREN expression_list RPAREN .)
    RBRACE          reduce using rule 41 (expression0 -> expression0 LPAREN expression_list RPAREN .)
    RPAREN          reduce using rule 41 (expression0 -> expression0 LPAREN expression_list RPAREN .)
    :               reduce using rule 41 (expression0 -> expression0 LPAREN expression_list RPAREN .)
    OBJ_END         reduce using rule 41 (expression0 -> expression0 LPAREN expression_list RPAREN .)


state 153

    (72) expression0 -> IF LPAREN expression RPAREN . block_statement
    (73) expression0 -> IF LPAREN expression RPAREN . block_statement else_if_chain
    (3) block_statement -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 29

    block_statement                shift and go to state 166

state 154

    (81) reference0 -> expression LSQUARE : RSQUARE .

    PLUS            reduce using rule 81 (reference0 -> expression LSQUARE : RSQUARE .)
    AND             reduce using rule 81 (reference0 -> expression LSQUARE : RSQUARE .)
    DIVIDE          reduce using rule 81 (reference0 -> expression LSQUARE : RSQUARE .)
    EQUALS          reduce using rule 81 (reference0 -> expression LSQUARE : RSQUARE .)
    EXPT            reduce using rule 81 (reference0 -> expression LSQUARE : RSQUARE .)
    GE              reduce using rule 81 (reference0 -> expression LSQUARE : RSQUARE .)
    GT              reduce using rule 81 (reference0 -> expression LSQUARE : RSQUARE .)
    LE              reduce using rule 81 (reference0 -> expression LSQUARE : RSQUARE .)
    LT              reduce using rule 81 (reference0 -> expression LSQUARE : RSQUARE .)
    MOD             reduce using rule 81 (reference0 -> expression LSQUARE : RSQUARE .)
    NE              reduce using rule 81 (reference0 -> expression LSQUARE : RSQUARE .)
    OR              reduce using rule 81 (reference0 -> expression LSQUARE : RSQUARE .)
    MINUS           reduce using rule 81 (reference0 -> expression LSQUARE : RSQUARE .)
    TIMES           reduce using rule 81 (reference0 -> expression LSQUARE : RSQUARE .)
    XOR             reduce using rule 81 (reference0 -> expression LSQUARE : RSQUARE .)
    IN              reduce using rule 81 (reference0 -> expression LSQUARE : RSQUARE .)
    LSQUARE         reduce using rule 81 (reference0 -> expression LSQUARE : RSQUARE .)
    DOT             reduce using rule 81 (reference0 -> expression LSQUARE : RSQUARE .)
    LPAREN          reduce using rule 81 (reference0 -> expression LSQUARE : RSQUARE .)
    STATEMENT_END   reduce using rule 81 (reference0 -> expression LSQUARE : RSQUARE .)
    $end            reduce using rule 81 (reference0 -> expression LSQUARE : RSQUARE .)
    RSQUARE         reduce using rule 81 (reference0 -> expression LSQUARE : RSQUARE .)
    ,               reduce using rule 81 (reference0 -> expression LSQUARE : RSQUARE .)
    RBRACE          reduce using rule 81 (reference0 -> expression LSQUARE : RSQUARE .)
    RPAREN          reduce using rule 81 (reference0 -> expression LSQUARE : RSQUARE .)
    :               reduce using rule 81 (reference0 -> expression LSQUARE : RSQUARE .)
    OBJ_END         reduce using rule 81 (reference0 -> expression LSQUARE : RSQUARE .)
    DIVEQUALS       reduce using rule 81 (reference0 -> expression LSQUARE : RSQUARE .)
    MINUSEQUALS     reduce using rule 81 (reference0 -> expression LSQUARE : RSQUARE .)
    PLUSEQUALS      reduce using rule 81 (reference0 -> expression LSQUARE : RSQUARE .)
    TIMESEQUALS     reduce using rule 81 (reference0 -> expression LSQUARE : RSQUARE .)
    ASSIGN          reduce using rule 81 (reference0 -> expression LSQUARE : RSQUARE .)


state 155

    (82) reference0 -> expression LSQUARE : expression . RSQUARE
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    RSQUARE         shift and go to state 167
    PLUS            shift and go to state 76
    AND             shift and go to state 85
    DIVIDE          shift and go to state 79
    EQUALS          shift and go to state 80
    EXPT            shift and go to state 74
    GE              shift and go to state 82
    GT              shift and go to state 77
    LE              shift and go to state 72
    LT              shift and go to state 75
    MOD             shift and go to state 87
    NE              shift and go to state 73
    OR              shift and go to state 86
    MINUS           shift and go to state 70
    TIMES           shift and go to state 81
    XOR             shift and go to state 78
    IN              shift and go to state 84
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71


state 156

    (79) reference1 -> expression LSQUARE expression RSQUARE .

    LPAREN          reduce using rule 79 (reference1 -> expression LSQUARE expression RSQUARE .)
    ,               reduce using rule 79 (reference1 -> expression LSQUARE expression RSQUARE .)
    PLUS            reduce using rule 79 (reference1 -> expression LSQUARE expression RSQUARE .)
    AND             reduce using rule 79 (reference1 -> expression LSQUARE expression RSQUARE .)
    DIVIDE          reduce using rule 79 (reference1 -> expression LSQUARE expression RSQUARE .)
    EQUALS          reduce using rule 79 (reference1 -> expression LSQUARE expression RSQUARE .)
    EXPT            reduce using rule 79 (reference1 -> expression LSQUARE expression RSQUARE .)
    GE              reduce using rule 79 (reference1 -> expression LSQUARE expression RSQUARE .)
    GT              reduce using rule 79 (reference1 -> expression LSQUARE expression RSQUARE .)
    LE              reduce using rule 79 (reference1 -> expression LSQUARE expression RSQUARE .)
    LT              reduce using rule 79 (reference1 -> expression LSQUARE expression RSQUARE .)
    MOD             reduce using rule 79 (reference1 -> expression LSQUARE expression RSQUARE .)
    NE              reduce using rule 79 (reference1 -> expression LSQUARE expression RSQUARE .)
    OR              reduce using rule 79 (reference1 -> expression LSQUARE expression RSQUARE .)
    MINUS           reduce using rule 79 (reference1 -> expression LSQUARE expression RSQUARE .)
    TIMES           reduce using rule 79 (reference1 -> expression LSQUARE expression RSQUARE .)
    XOR             reduce using rule 79 (reference1 -> expression LSQUARE expression RSQUARE .)
    IN              reduce using rule 79 (reference1 -> expression LSQUARE expression RSQUARE .)
    LSQUARE         reduce using rule 79 (reference1 -> expression LSQUARE expression RSQUARE .)
    DOT             reduce using rule 79 (reference1 -> expression LSQUARE expression RSQUARE .)
    RPAREN          reduce using rule 79 (reference1 -> expression LSQUARE expression RSQUARE .)
    DIVEQUALS       reduce using rule 79 (reference1 -> expression LSQUARE expression RSQUARE .)
    MINUSEQUALS     reduce using rule 79 (reference1 -> expression LSQUARE expression RSQUARE .)
    PLUSEQUALS      reduce using rule 79 (reference1 -> expression LSQUARE expression RSQUARE .)
    TIMESEQUALS     reduce using rule 79 (reference1 -> expression LSQUARE expression RSQUARE .)
    ASSIGN          reduce using rule 79 (reference1 -> expression LSQUARE expression RSQUARE .)
    RSQUARE         reduce using rule 79 (reference1 -> expression LSQUARE expression RSQUARE .)
    STATEMENT_END   reduce using rule 79 (reference1 -> expression LSQUARE expression RSQUARE .)
    $end            reduce using rule 79 (reference1 -> expression LSQUARE expression RSQUARE .)
    RBRACE          reduce using rule 79 (reference1 -> expression LSQUARE expression RSQUARE .)
    :               reduce using rule 79 (reference1 -> expression LSQUARE expression RSQUARE .)
    OBJ_END         reduce using rule 79 (reference1 -> expression LSQUARE expression RSQUARE .)


state 157

    (80) reference0 -> expression LSQUARE expression : . expression RSQUARE
    (83) reference0 -> expression LSQUARE expression : . RSQUARE
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    RSQUARE         shift and go to state 168
    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 169

state 158

    (86) statement -> CONST VAR ID ASSIGN expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    STATEMENT_END   reduce using rule 86 (statement -> CONST VAR ID ASSIGN expression .)
    RBRACE          reduce using rule 86 (statement -> CONST VAR ID ASSIGN expression .)
    $end            reduce using rule 86 (statement -> CONST VAR ID ASSIGN expression .)
    PLUS            shift and go to state 76
    AND             shift and go to state 85
    DIVIDE          shift and go to state 79
    EQUALS          shift and go to state 80
    EXPT            shift and go to state 74
    GE              shift and go to state 82
    GT              shift and go to state 77
    LE              shift and go to state 72
    LT              shift and go to state 75
    MOD             shift and go to state 87
    NE              shift and go to state 73
    OR              shift and go to state 86
    MINUS           shift and go to state 70
    TIMES           shift and go to state 81
    XOR             shift and go to state 78
    IN              shift and go to state 84
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71


state 159

    (17) expression_list -> expression , expression_list .

    RPAREN          reduce using rule 17 (expression_list -> expression , expression_list .)


state 160

    (74) statement -> WHILE LPAREN expression RPAREN block_statement .

    STATEMENT_END   reduce using rule 74 (statement -> WHILE LPAREN expression RPAREN block_statement .)
    RBRACE          reduce using rule 74 (statement -> WHILE LPAREN expression RPAREN block_statement .)
    $end            reduce using rule 74 (statement -> WHILE LPAREN expression RPAREN block_statement .)


state 161

    (39) expression0 -> NEW ID LPAREN expression_list RPAREN .

    LPAREN          reduce using rule 39 (expression0 -> NEW ID LPAREN expression_list RPAREN .)
    PLUS            reduce using rule 39 (expression0 -> NEW ID LPAREN expression_list RPAREN .)
    AND             reduce using rule 39 (expression0 -> NEW ID LPAREN expression_list RPAREN .)
    DIVIDE          reduce using rule 39 (expression0 -> NEW ID LPAREN expression_list RPAREN .)
    EQUALS          reduce using rule 39 (expression0 -> NEW ID LPAREN expression_list RPAREN .)
    EXPT            reduce using rule 39 (expression0 -> NEW ID LPAREN expression_list RPAREN .)
    GE              reduce using rule 39 (expression0 -> NEW ID LPAREN expression_list RPAREN .)
    GT              reduce using rule 39 (expression0 -> NEW ID LPAREN expression_list RPAREN .)
    LE              reduce using rule 39 (expression0 -> NEW ID LPAREN expression_list RPAREN .)
    LT              reduce using rule 39 (expression0 -> NEW ID LPAREN expression_list RPAREN .)
    MOD             reduce using rule 39 (expression0 -> NEW ID LPAREN expression_list RPAREN .)
    NE              reduce using rule 39 (expression0 -> NEW ID LPAREN expression_list RPAREN .)
    OR              reduce using rule 39 (expression0 -> NEW ID LPAREN expression_list RPAREN .)
    MINUS           reduce using rule 39 (expression0 -> NEW ID LPAREN expression_list RPAREN .)
    TIMES           reduce using rule 39 (expression0 -> NEW ID LPAREN expression_list RPAREN .)
    XOR             reduce using rule 39 (expression0 -> NEW ID LPAREN expression_list RPAREN .)
    IN              reduce using rule 39 (expression0 -> NEW ID LPAREN expression_list RPAREN .)
    LSQUARE         reduce using rule 39 (expression0 -> NEW ID LPAREN expression_list RPAREN .)
    DOT             reduce using rule 39 (expression0 -> NEW ID LPAREN expression_list RPAREN .)
    RSQUARE         reduce using rule 39 (expression0 -> NEW ID LPAREN expression_list RPAREN .)
    ,               reduce using rule 39 (expression0 -> NEW ID LPAREN expression_list RPAREN .)
    STATEMENT_END   reduce using rule 39 (expression0 -> NEW ID LPAREN expression_list RPAREN .)
    $end            reduce using rule 39 (expression0 -> NEW ID LPAREN expression_list RPAREN .)
    RBRACE          reduce using rule 39 (expression0 -> NEW ID LPAREN expression_list RPAREN .)
    RPAREN          reduce using rule 39 (expression0 -> NEW ID LPAREN expression_list RPAREN .)
    :               reduce using rule 39 (expression0 -> NEW ID LPAREN expression_list RPAREN .)
    OBJ_END         reduce using rule 39 (expression0 -> NEW ID LPAREN expression_list RPAREN .)


state 162

    (22) property_list -> ID : expression , . property_list
    (20) property_list -> . empty
    (21) property_list -> . ID : expression
    (22) property_list -> . ID : expression , property_list
    (11) empty -> .

    ID              shift and go to state 54
    OBJ_END         reduce using rule 11 (empty -> .)

    empty                          shift and go to state 55
    property_list                  shift and go to state 170

state 163

    (40) expression0 -> FUNCTION LPAREN paramlist RPAREN block_statement .

    LPAREN          reduce using rule 40 (expression0 -> FUNCTION LPAREN paramlist RPAREN block_statement .)
    PLUS            reduce using rule 40 (expression0 -> FUNCTION LPAREN paramlist RPAREN block_statement .)
    AND             reduce using rule 40 (expression0 -> FUNCTION LPAREN paramlist RPAREN block_statement .)
    DIVIDE          reduce using rule 40 (expression0 -> FUNCTION LPAREN paramlist RPAREN block_statement .)
    EQUALS          reduce using rule 40 (expression0 -> FUNCTION LPAREN paramlist RPAREN block_statement .)
    EXPT            reduce using rule 40 (expression0 -> FUNCTION LPAREN paramlist RPAREN block_statement .)
    GE              reduce using rule 40 (expression0 -> FUNCTION LPAREN paramlist RPAREN block_statement .)
    GT              reduce using rule 40 (expression0 -> FUNCTION LPAREN paramlist RPAREN block_statement .)
    LE              reduce using rule 40 (expression0 -> FUNCTION LPAREN paramlist RPAREN block_statement .)
    LT              reduce using rule 40 (expression0 -> FUNCTION LPAREN paramlist RPAREN block_statement .)
    MOD             reduce using rule 40 (expression0 -> FUNCTION LPAREN paramlist RPAREN block_statement .)
    NE              reduce using rule 40 (expression0 -> FUNCTION LPAREN paramlist RPAREN block_statement .)
    OR              reduce using rule 40 (expression0 -> FUNCTION LPAREN paramlist RPAREN block_statement .)
    MINUS           reduce using rule 40 (expression0 -> FUNCTION LPAREN paramlist RPAREN block_statement .)
    TIMES           reduce using rule 40 (expression0 -> FUNCTION LPAREN paramlist RPAREN block_statement .)
    XOR             reduce using rule 40 (expression0 -> FUNCTION LPAREN paramlist RPAREN block_statement .)
    IN              reduce using rule 40 (expression0 -> FUNCTION LPAREN paramlist RPAREN block_statement .)
    LSQUARE         reduce using rule 40 (expression0 -> FUNCTION LPAREN paramlist RPAREN block_statement .)
    DOT             reduce using rule 40 (expression0 -> FUNCTION LPAREN paramlist RPAREN block_statement .)
    RSQUARE         reduce using rule 40 (expression0 -> FUNCTION LPAREN paramlist RPAREN block_statement .)
    ,               reduce using rule 40 (expression0 -> FUNCTION LPAREN paramlist RPAREN block_statement .)
    STATEMENT_END   reduce using rule 40 (expression0 -> FUNCTION LPAREN paramlist RPAREN block_statement .)
    $end            reduce using rule 40 (expression0 -> FUNCTION LPAREN paramlist RPAREN block_statement .)
    RBRACE          reduce using rule 40 (expression0 -> FUNCTION LPAREN paramlist RPAREN block_statement .)
    RPAREN          reduce using rule 40 (expression0 -> FUNCTION LPAREN paramlist RPAREN block_statement .)
    :               reduce using rule 40 (expression0 -> FUNCTION LPAREN paramlist RPAREN block_statement .)
    OBJ_END         reduce using rule 40 (expression0 -> FUNCTION LPAREN paramlist RPAREN block_statement .)


state 164

    (14) paramlist -> ID , paramlist .

    RPAREN          reduce using rule 14 (paramlist -> ID , paramlist .)


state 165

    (35) tuple_contents2 -> expression , .
    (36) tuple_contents2 -> expression , . expression
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    RPAREN          reduce using rule 35 (tuple_contents2 -> expression , .)
    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25
    expression                     shift and go to state 171

state 166

    (72) expression0 -> IF LPAREN expression RPAREN block_statement .
    (73) expression0 -> IF LPAREN expression RPAREN block_statement . else_if_chain
    (69) else_if_chain -> . ELSE block_statement
    (70) else_if_chain -> . ELSE IF LPAREN expression RPAREN block_statement
    (71) else_if_chain -> . ELSE IF LPAREN expression RPAREN block_statement else_if_chain

    LPAREN          reduce using rule 72 (expression0 -> IF LPAREN expression RPAREN block_statement .)
    PLUS            reduce using rule 72 (expression0 -> IF LPAREN expression RPAREN block_statement .)
    AND             reduce using rule 72 (expression0 -> IF LPAREN expression RPAREN block_statement .)
    DIVIDE          reduce using rule 72 (expression0 -> IF LPAREN expression RPAREN block_statement .)
    EQUALS          reduce using rule 72 (expression0 -> IF LPAREN expression RPAREN block_statement .)
    EXPT            reduce using rule 72 (expression0 -> IF LPAREN expression RPAREN block_statement .)
    GE              reduce using rule 72 (expression0 -> IF LPAREN expression RPAREN block_statement .)
    GT              reduce using rule 72 (expression0 -> IF LPAREN expression RPAREN block_statement .)
    LE              reduce using rule 72 (expression0 -> IF LPAREN expression RPAREN block_statement .)
    LT              reduce using rule 72 (expression0 -> IF LPAREN expression RPAREN block_statement .)
    MOD             reduce using rule 72 (expression0 -> IF LPAREN expression RPAREN block_statement .)
    NE              reduce using rule 72 (expression0 -> IF LPAREN expression RPAREN block_statement .)
    OR              reduce using rule 72 (expression0 -> IF LPAREN expression RPAREN block_statement .)
    MINUS           reduce using rule 72 (expression0 -> IF LPAREN expression RPAREN block_statement .)
    TIMES           reduce using rule 72 (expression0 -> IF LPAREN expression RPAREN block_statement .)
    XOR             reduce using rule 72 (expression0 -> IF LPAREN expression RPAREN block_statement .)
    IN              reduce using rule 72 (expression0 -> IF LPAREN expression RPAREN block_statement .)
    LSQUARE         reduce using rule 72 (expression0 -> IF LPAREN expression RPAREN block_statement .)
    DOT             reduce using rule 72 (expression0 -> IF LPAREN expression RPAREN block_statement .)
    RSQUARE         reduce using rule 72 (expression0 -> IF LPAREN expression RPAREN block_statement .)
    ,               reduce using rule 72 (expression0 -> IF LPAREN expression RPAREN block_statement .)
    STATEMENT_END   reduce using rule 72 (expression0 -> IF LPAREN expression RPAREN block_statement .)
    $end            reduce using rule 72 (expression0 -> IF LPAREN expression RPAREN block_statement .)
    RBRACE          reduce using rule 72 (expression0 -> IF LPAREN expression RPAREN block_statement .)
    RPAREN          reduce using rule 72 (expression0 -> IF LPAREN expression RPAREN block_statement .)
    :               reduce using rule 72 (expression0 -> IF LPAREN expression RPAREN block_statement .)
    OBJ_END         reduce using rule 72 (expression0 -> IF LPAREN expression RPAREN block_statement .)
    ELSE            shift and go to state 172

    else_if_chain                  shift and go to state 173

state 167

    (82) reference0 -> expression LSQUARE : expression RSQUARE .

    PLUS            reduce using rule 82 (reference0 -> expression LSQUARE : expression RSQUARE .)
    AND             reduce using rule 82 (reference0 -> expression LSQUARE : expression RSQUARE .)
    DIVIDE          reduce using rule 82 (reference0 -> expression LSQUARE : expression RSQUARE .)
    EQUALS          reduce using rule 82 (reference0 -> expression LSQUARE : expression RSQUARE .)
    EXPT            reduce using rule 82 (reference0 -> expression LSQUARE : expression RSQUARE .)
    GE              reduce using rule 82 (reference0 -> expression LSQUARE : expression RSQUARE .)
    GT              reduce using rule 82 (reference0 -> expression LSQUARE : expression RSQUARE .)
    LE              reduce using rule 82 (reference0 -> expression LSQUARE : expression RSQUARE .)
    LT              reduce using rule 82 (reference0 -> expression LSQUARE : expression RSQUARE .)
    MOD             reduce using rule 82 (reference0 -> expression LSQUARE : expression RSQUARE .)
    NE              reduce using rule 82 (reference0 -> expression LSQUARE : expression RSQUARE .)
    OR              reduce using rule 82 (reference0 -> expression LSQUARE : expression RSQUARE .)
    MINUS           reduce using rule 82 (reference0 -> expression LSQUARE : expression RSQUARE .)
    TIMES           reduce using rule 82 (reference0 -> expression LSQUARE : expression RSQUARE .)
    XOR             reduce using rule 82 (reference0 -> expression LSQUARE : expression RSQUARE .)
    IN              reduce using rule 82 (reference0 -> expression LSQUARE : expression RSQUARE .)
    LSQUARE         reduce using rule 82 (reference0 -> expression LSQUARE : expression RSQUARE .)
    DOT             reduce using rule 82 (reference0 -> expression LSQUARE : expression RSQUARE .)
    LPAREN          reduce using rule 82 (reference0 -> expression LSQUARE : expression RSQUARE .)
    STATEMENT_END   reduce using rule 82 (reference0 -> expression LSQUARE : expression RSQUARE .)
    $end            reduce using rule 82 (reference0 -> expression LSQUARE : expression RSQUARE .)
    RSQUARE         reduce using rule 82 (reference0 -> expression LSQUARE : expression RSQUARE .)
    ,               reduce using rule 82 (reference0 -> expression LSQUARE : expression RSQUARE .)
    RBRACE          reduce using rule 82 (reference0 -> expression LSQUARE : expression RSQUARE .)
    RPAREN          reduce using rule 82 (reference0 -> expression LSQUARE : expression RSQUARE .)
    :               reduce using rule 82 (reference0 -> expression LSQUARE : expression RSQUARE .)
    OBJ_END         reduce using rule 82 (reference0 -> expression LSQUARE : expression RSQUARE .)
    DIVEQUALS       reduce using rule 82 (reference0 -> expression LSQUARE : expression RSQUARE .)
    MINUSEQUALS     reduce using rule 82 (reference0 -> expression LSQUARE : expression RSQUARE .)
    PLUSEQUALS      reduce using rule 82 (reference0 -> expression LSQUARE : expression RSQUARE .)
    TIMESEQUALS     reduce using rule 82 (reference0 -> expression LSQUARE : expression RSQUARE .)
    ASSIGN          reduce using rule 82 (reference0 -> expression LSQUARE : expression RSQUARE .)


state 168

    (83) reference0 -> expression LSQUARE expression : RSQUARE .

    PLUS            reduce using rule 83 (reference0 -> expression LSQUARE expression : RSQUARE .)
    AND             reduce using rule 83 (reference0 -> expression LSQUARE expression : RSQUARE .)
    DIVIDE          reduce using rule 83 (reference0 -> expression LSQUARE expression : RSQUARE .)
    EQUALS          reduce using rule 83 (reference0 -> expression LSQUARE expression : RSQUARE .)
    EXPT            reduce using rule 83 (reference0 -> expression LSQUARE expression : RSQUARE .)
    GE              reduce using rule 83 (reference0 -> expression LSQUARE expression : RSQUARE .)
    GT              reduce using rule 83 (reference0 -> expression LSQUARE expression : RSQUARE .)
    LE              reduce using rule 83 (reference0 -> expression LSQUARE expression : RSQUARE .)
    LT              reduce using rule 83 (reference0 -> expression LSQUARE expression : RSQUARE .)
    MOD             reduce using rule 83 (reference0 -> expression LSQUARE expression : RSQUARE .)
    NE              reduce using rule 83 (reference0 -> expression LSQUARE expression : RSQUARE .)
    OR              reduce using rule 83 (reference0 -> expression LSQUARE expression : RSQUARE .)
    MINUS           reduce using rule 83 (reference0 -> expression LSQUARE expression : RSQUARE .)
    TIMES           reduce using rule 83 (reference0 -> expression LSQUARE expression : RSQUARE .)
    XOR             reduce using rule 83 (reference0 -> expression LSQUARE expression : RSQUARE .)
    IN              reduce using rule 83 (reference0 -> expression LSQUARE expression : RSQUARE .)
    LSQUARE         reduce using rule 83 (reference0 -> expression LSQUARE expression : RSQUARE .)
    DOT             reduce using rule 83 (reference0 -> expression LSQUARE expression : RSQUARE .)
    LPAREN          reduce using rule 83 (reference0 -> expression LSQUARE expression : RSQUARE .)
    STATEMENT_END   reduce using rule 83 (reference0 -> expression LSQUARE expression : RSQUARE .)
    $end            reduce using rule 83 (reference0 -> expression LSQUARE expression : RSQUARE .)
    RSQUARE         reduce using rule 83 (reference0 -> expression LSQUARE expression : RSQUARE .)
    ,               reduce using rule 83 (reference0 -> expression LSQUARE expression : RSQUARE .)
    RBRACE          reduce using rule 83 (reference0 -> expression LSQUARE expression : RSQUARE .)
    RPAREN          reduce using rule 83 (reference0 -> expression LSQUARE expression : RSQUARE .)
    :               reduce using rule 83 (reference0 -> expression LSQUARE expression : RSQUARE .)
    OBJ_END         reduce using rule 83 (reference0 -> expression LSQUARE expression : RSQUARE .)
    DIVEQUALS       reduce using rule 83 (reference0 -> expression LSQUARE expression : RSQUARE .)
    MINUSEQUALS     reduce using rule 83 (reference0 -> expression LSQUARE expression : RSQUARE .)
    PLUSEQUALS      reduce using rule 83 (reference0 -> expression LSQUARE expression : RSQUARE .)
    TIMESEQUALS     reduce using rule 83 (reference0 -> expression LSQUARE expression : RSQUARE .)
    ASSIGN          reduce using rule 83 (reference0 -> expression LSQUARE expression : RSQUARE .)


state 169

    (80) reference0 -> expression LSQUARE expression : expression . RSQUARE
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    RSQUARE         shift and go to state 174
    PLUS            shift and go to state 76
    AND             shift and go to state 85
    DIVIDE          shift and go to state 79
    EQUALS          shift and go to state 80
    EXPT            shift and go to state 74
    GE              shift and go to state 82
    GT              shift and go to state 77
    LE              shift and go to state 72
    LT              shift and go to state 75
    MOD             shift and go to state 87
    NE              shift and go to state 73
    OR              shift and go to state 86
    MINUS           shift and go to state 70
    TIMES           shift and go to state 81
    XOR             shift and go to state 78
    IN              shift and go to state 84
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71


state 170

    (22) property_list -> ID : expression , property_list .

    OBJ_END         reduce using rule 22 (property_list -> ID : expression , property_list .)


state 171

    (36) tuple_contents2 -> expression , expression .
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    RPAREN          reduce using rule 36 (tuple_contents2 -> expression , expression .)
    PLUS            shift and go to state 76
    AND             shift and go to state 85
    DIVIDE          shift and go to state 79
    EQUALS          shift and go to state 80
    EXPT            shift and go to state 74
    GE              shift and go to state 82
    GT              shift and go to state 77
    LE              shift and go to state 72
    LT              shift and go to state 75
    MOD             shift and go to state 87
    NE              shift and go to state 73
    OR              shift and go to state 86
    MINUS           shift and go to state 70
    TIMES           shift and go to state 81
    XOR             shift and go to state 78
    IN              shift and go to state 84
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71


state 172

    (69) else_if_chain -> ELSE . block_statement
    (70) else_if_chain -> ELSE . IF LPAREN expression RPAREN block_statement
    (71) else_if_chain -> ELSE . IF LPAREN expression RPAREN block_statement else_if_chain
    (3) block_statement -> . LBRACE statements RBRACE

    IF              shift and go to state 176
    LBRACE          shift and go to state 29

    block_statement                shift and go to state 175

state 173

    (73) expression0 -> IF LPAREN expression RPAREN block_statement else_if_chain .

    LPAREN          reduce using rule 73 (expression0 -> IF LPAREN expression RPAREN block_statement else_if_chain .)
    PLUS            reduce using rule 73 (expression0 -> IF LPAREN expression RPAREN block_statement else_if_chain .)
    AND             reduce using rule 73 (expression0 -> IF LPAREN expression RPAREN block_statement else_if_chain .)
    DIVIDE          reduce using rule 73 (expression0 -> IF LPAREN expression RPAREN block_statement else_if_chain .)
    EQUALS          reduce using rule 73 (expression0 -> IF LPAREN expression RPAREN block_statement else_if_chain .)
    EXPT            reduce using rule 73 (expression0 -> IF LPAREN expression RPAREN block_statement else_if_chain .)
    GE              reduce using rule 73 (expression0 -> IF LPAREN expression RPAREN block_statement else_if_chain .)
    GT              reduce using rule 73 (expression0 -> IF LPAREN expression RPAREN block_statement else_if_chain .)
    LE              reduce using rule 73 (expression0 -> IF LPAREN expression RPAREN block_statement else_if_chain .)
    LT              reduce using rule 73 (expression0 -> IF LPAREN expression RPAREN block_statement else_if_chain .)
    MOD             reduce using rule 73 (expression0 -> IF LPAREN expression RPAREN block_statement else_if_chain .)
    NE              reduce using rule 73 (expression0 -> IF LPAREN expression RPAREN block_statement else_if_chain .)
    OR              reduce using rule 73 (expression0 -> IF LPAREN expression RPAREN block_statement else_if_chain .)
    MINUS           reduce using rule 73 (expression0 -> IF LPAREN expression RPAREN block_statement else_if_chain .)
    TIMES           reduce using rule 73 (expression0 -> IF LPAREN expression RPAREN block_statement else_if_chain .)
    XOR             reduce using rule 73 (expression0 -> IF LPAREN expression RPAREN block_statement else_if_chain .)
    IN              reduce using rule 73 (expression0 -> IF LPAREN expression RPAREN block_statement else_if_chain .)
    LSQUARE         reduce using rule 73 (expression0 -> IF LPAREN expression RPAREN block_statement else_if_chain .)
    DOT             reduce using rule 73 (expression0 -> IF LPAREN expression RPAREN block_statement else_if_chain .)
    RSQUARE         reduce using rule 73 (expression0 -> IF LPAREN expression RPAREN block_statement else_if_chain .)
    ,               reduce using rule 73 (expression0 -> IF LPAREN expression RPAREN block_statement else_if_chain .)
    STATEMENT_END   reduce using rule 73 (expression0 -> IF LPAREN expression RPAREN block_statement else_if_chain .)
    $end            reduce using rule 73 (expression0 -> IF LPAREN expression RPAREN block_statement else_if_chain .)
    RBRACE          reduce using rule 73 (expression0 -> IF LPAREN expression RPAREN block_statement else_if_chain .)
    RPAREN          reduce using rule 73 (expression0 -> IF LPAREN expression RPAREN block_statement else_if_chain .)
    :               reduce using rule 73 (expression0 -> IF LPAREN expression RPAREN block_statement else_if_chain .)
    OBJ_END         reduce using rule 73 (expression0 -> IF LPAREN expression RPAREN block_statement else_if_chain .)


state 174

    (80) reference0 -> expression LSQUARE expression : expression RSQUARE .

    PLUS            reduce using rule 80 (reference0 -> expression LSQUARE expression : expression RSQUARE .)
    AND             reduce using rule 80 (reference0 -> expression LSQUARE expression : expression RSQUARE .)
    DIVIDE          reduce using rule 80 (reference0 -> expression LSQUARE expression : expression RSQUARE .)
    EQUALS          reduce using rule 80 (reference0 -> expression LSQUARE expression : expression RSQUARE .)
    EXPT            reduce using rule 80 (reference0 -> expression LSQUARE expression : expression RSQUARE .)
    GE              reduce using rule 80 (reference0 -> expression LSQUARE expression : expression RSQUARE .)
    GT              reduce using rule 80 (reference0 -> expression LSQUARE expression : expression RSQUARE .)
    LE              reduce using rule 80 (reference0 -> expression LSQUARE expression : expression RSQUARE .)
    LT              reduce using rule 80 (reference0 -> expression LSQUARE expression : expression RSQUARE .)
    MOD             reduce using rule 80 (reference0 -> expression LSQUARE expression : expression RSQUARE .)
    NE              reduce using rule 80 (reference0 -> expression LSQUARE expression : expression RSQUARE .)
    OR              reduce using rule 80 (reference0 -> expression LSQUARE expression : expression RSQUARE .)
    MINUS           reduce using rule 80 (reference0 -> expression LSQUARE expression : expression RSQUARE .)
    TIMES           reduce using rule 80 (reference0 -> expression LSQUARE expression : expression RSQUARE .)
    XOR             reduce using rule 80 (reference0 -> expression LSQUARE expression : expression RSQUARE .)
    IN              reduce using rule 80 (reference0 -> expression LSQUARE expression : expression RSQUARE .)
    LSQUARE         reduce using rule 80 (reference0 -> expression LSQUARE expression : expression RSQUARE .)
    DOT             reduce using rule 80 (reference0 -> expression LSQUARE expression : expression RSQUARE .)
    LPAREN          reduce using rule 80 (reference0 -> expression LSQUARE expression : expression RSQUARE .)
    STATEMENT_END   reduce using rule 80 (reference0 -> expression LSQUARE expression : expression RSQUARE .)
    $end            reduce using rule 80 (reference0 -> expression LSQUARE expression : expression RSQUARE .)
    RSQUARE         reduce using rule 80 (reference0 -> expression LSQUARE expression : expression RSQUARE .)
    ,               reduce using rule 80 (reference0 -> expression LSQUARE expression : expression RSQUARE .)
    RBRACE          reduce using rule 80 (reference0 -> expression LSQUARE expression : expression RSQUARE .)
    RPAREN          reduce using rule 80 (reference0 -> expression LSQUARE expression : expression RSQUARE .)
    :               reduce using rule 80 (reference0 -> expression LSQUARE expression : expression RSQUARE .)
    OBJ_END         reduce using rule 80 (reference0 -> expression LSQUARE expression : expression RSQUARE .)
    DIVEQUALS       reduce using rule 80 (reference0 -> expression LSQUARE expression : expression RSQUARE .)
    MINUSEQUALS     reduce using rule 80 (reference0 -> expression LSQUARE expression : expression RSQUARE .)
    PLUSEQUALS      reduce using rule 80 (reference0 -> expression LSQUARE expression : expression RSQUARE .)
    TIMESEQUALS     reduce using rule 80 (reference0 -> expression LSQUARE expression : expression RSQUARE .)
    ASSIGN          reduce using rule 80 (reference0 -> expression LSQUARE expression : expression RSQUARE .)


state 175

    (69) else_if_chain -> ELSE block_statement .

    LPAREN          reduce using rule 69 (else_if_chain -> ELSE block_statement .)
    PLUS            reduce using rule 69 (else_if_chain -> ELSE block_statement .)
    AND             reduce using rule 69 (else_if_chain -> ELSE block_statement .)
    DIVIDE          reduce using rule 69 (else_if_chain -> ELSE block_statement .)
    EQUALS          reduce using rule 69 (else_if_chain -> ELSE block_statement .)
    EXPT            reduce using rule 69 (else_if_chain -> ELSE block_statement .)
    GE              reduce using rule 69 (else_if_chain -> ELSE block_statement .)
    GT              reduce using rule 69 (else_if_chain -> ELSE block_statement .)
    LE              reduce using rule 69 (else_if_chain -> ELSE block_statement .)
    LT              reduce using rule 69 (else_if_chain -> ELSE block_statement .)
    MOD             reduce using rule 69 (else_if_chain -> ELSE block_statement .)
    NE              reduce using rule 69 (else_if_chain -> ELSE block_statement .)
    OR              reduce using rule 69 (else_if_chain -> ELSE block_statement .)
    MINUS           reduce using rule 69 (else_if_chain -> ELSE block_statement .)
    TIMES           reduce using rule 69 (else_if_chain -> ELSE block_statement .)
    XOR             reduce using rule 69 (else_if_chain -> ELSE block_statement .)
    IN              reduce using rule 69 (else_if_chain -> ELSE block_statement .)
    LSQUARE         reduce using rule 69 (else_if_chain -> ELSE block_statement .)
    DOT             reduce using rule 69 (else_if_chain -> ELSE block_statement .)
    STATEMENT_END   reduce using rule 69 (else_if_chain -> ELSE block_statement .)
    $end            reduce using rule 69 (else_if_chain -> ELSE block_statement .)
    RSQUARE         reduce using rule 69 (else_if_chain -> ELSE block_statement .)
    ,               reduce using rule 69 (else_if_chain -> ELSE block_statement .)
    RBRACE          reduce using rule 69 (else_if_chain -> ELSE block_statement .)
    RPAREN          reduce using rule 69 (else_if_chain -> ELSE block_statement .)
    :               reduce using rule 69 (else_if_chain -> ELSE block_statement .)
    OBJ_END         reduce using rule 69 (else_if_chain -> ELSE block_statement .)


state 176

    (70) else_if_chain -> ELSE IF . LPAREN expression RPAREN block_statement
    (71) else_if_chain -> ELSE IF . LPAREN expression RPAREN block_statement else_if_chain

    LPAREN          shift and go to state 177


state 177

    (70) else_if_chain -> ELSE IF LPAREN . expression RPAREN block_statement
    (71) else_if_chain -> ELSE IF LPAREN . expression RPAREN block_statement else_if_chain
    (27) expression -> . expression0
    (28) expression -> . expression1
    (45) expression -> . LPAREN expression RPAREN
    (46) expression -> . expression PLUS expression
    (47) expression -> . expression AND expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . expression EQUALS expression
    (50) expression -> . expression EXPT expression
    (51) expression -> . expression GE expression
    (52) expression -> . expression GT expression
    (53) expression -> . expression LE expression
    (54) expression -> . expression LT expression
    (55) expression -> . expression MOD expression
    (56) expression -> . expression NE expression
    (57) expression -> . expression OR expression
    (58) expression -> . expression MINUS expression
    (59) expression -> . expression TIMES expression
    (60) expression -> . expression XOR expression
    (61) expression -> . reference DIVEQUALS expression
    (62) expression -> . reference MINUSEQUALS expression
    (63) expression -> . reference PLUSEQUALS expression
    (64) expression -> . reference TIMESEQUALS expression
    (18) expression0 -> . OBJ_BEGIN property_list OBJ_END
    (19) expression0 -> . expression IN expression
    (23) expression0 -> . LSQUARE empty RSQUARE
    (24) expression0 -> . LSQUARE list_contents RSQUARE
    (29) expression0 -> . reference0
    (31) expression0 -> . FLOAT
    (32) expression0 -> . INT
    (33) expression0 -> . LPAREN tuple_contents RPAREN
    (39) expression0 -> . NEW ID LPAREN expression_list RPAREN
    (40) expression0 -> . FUNCTION LPAREN paramlist RPAREN block_statement
    (41) expression0 -> . expression0 LPAREN expression_list RPAREN
    (42) expression0 -> . expression1 LPAREN expression_list RPAREN
    (43) expression0 -> . LPAREN expression0 RPAREN
    (65) expression0 -> . TRUE
    (66) expression0 -> . FALSE
    (67) expression0 -> . NOT expression
    (68) expression0 -> . STRING
    (72) expression0 -> . IF LPAREN expression RPAREN block_statement
    (73) expression0 -> . IF LPAREN expression RPAREN block_statement else_if_chain
    (84) expression0 -> . reference ASSIGN expression
    (89) expression0 -> . UNDEFINED
    (30) expression1 -> . reference1
    (44) expression1 -> . LPAREN expression1 RPAREN
    (75) reference -> . reference0
    (76) reference -> . reference1
    (77) reference0 -> . ID
    (80) reference0 -> . expression LSQUARE expression : expression RSQUARE
    (81) reference0 -> . expression LSQUARE : RSQUARE
    (82) reference0 -> . expression LSQUARE : expression RSQUARE
    (83) reference0 -> . expression LSQUARE expression : RSQUARE
    (78) reference1 -> . expression DOT ID
    (79) reference1 -> . expression LSQUARE expression RSQUARE

    LPAREN          shift and go to state 23
    OBJ_BEGIN       shift and go to state 17
    LSQUARE         shift and go to state 1
    FLOAT           shift and go to state 32
    INT             shift and go to state 31
    NEW             shift and go to state 13
    FUNCTION        shift and go to state 22
    TRUE            shift and go to state 16
    FALSE           shift and go to state 30
    NOT             shift and go to state 7
    STRING          shift and go to state 11
    IF              shift and go to state 28
    UNDEFINED       shift and go to state 19
    ID              shift and go to state 27

    reference1                     shift and go to state 3
    reference                      shift and go to state 4
    expression                     shift and go to state 178
    reference0                     shift and go to state 6
    expression1                    shift and go to state 9
    expression0                    shift and go to state 25

state 178

    (70) else_if_chain -> ELSE IF LPAREN expression . RPAREN block_statement
    (71) else_if_chain -> ELSE IF LPAREN expression . RPAREN block_statement else_if_chain
    (46) expression -> expression . PLUS expression
    (47) expression -> expression . AND expression
    (48) expression -> expression . DIVIDE expression
    (49) expression -> expression . EQUALS expression
    (50) expression -> expression . EXPT expression
    (51) expression -> expression . GE expression
    (52) expression -> expression . GT expression
    (53) expression -> expression . LE expression
    (54) expression -> expression . LT expression
    (55) expression -> expression . MOD expression
    (56) expression -> expression . NE expression
    (57) expression -> expression . OR expression
    (58) expression -> expression . MINUS expression
    (59) expression -> expression . TIMES expression
    (60) expression -> expression . XOR expression
    (19) expression0 -> expression . IN expression
    (80) reference0 -> expression . LSQUARE expression : expression RSQUARE
    (81) reference0 -> expression . LSQUARE : RSQUARE
    (82) reference0 -> expression . LSQUARE : expression RSQUARE
    (83) reference0 -> expression . LSQUARE expression : RSQUARE
    (78) reference1 -> expression . DOT ID
    (79) reference1 -> expression . LSQUARE expression RSQUARE

    RPAREN          shift and go to state 179
    PLUS            shift and go to state 76
    AND             shift and go to state 85
    DIVIDE          shift and go to state 79
    EQUALS          shift and go to state 80
    EXPT            shift and go to state 74
    GE              shift and go to state 82
    GT              shift and go to state 77
    LE              shift and go to state 72
    LT              shift and go to state 75
    MOD             shift and go to state 87
    NE              shift and go to state 73
    OR              shift and go to state 86
    MINUS           shift and go to state 70
    TIMES           shift and go to state 81
    XOR             shift and go to state 78
    IN              shift and go to state 84
    LSQUARE         shift and go to state 83
    DOT             shift and go to state 71


state 179

    (70) else_if_chain -> ELSE IF LPAREN expression RPAREN . block_statement
    (71) else_if_chain -> ELSE IF LPAREN expression RPAREN . block_statement else_if_chain
    (3) block_statement -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 29

    block_statement                shift and go to state 180

state 180

    (70) else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement .
    (71) else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement . else_if_chain
    (69) else_if_chain -> . ELSE block_statement
    (70) else_if_chain -> . ELSE IF LPAREN expression RPAREN block_statement
    (71) else_if_chain -> . ELSE IF LPAREN expression RPAREN block_statement else_if_chain

    LPAREN          reduce using rule 70 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement .)
    PLUS            reduce using rule 70 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement .)
    AND             reduce using rule 70 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement .)
    DIVIDE          reduce using rule 70 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement .)
    EQUALS          reduce using rule 70 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement .)
    EXPT            reduce using rule 70 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement .)
    GE              reduce using rule 70 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement .)
    GT              reduce using rule 70 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement .)
    LE              reduce using rule 70 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement .)
    LT              reduce using rule 70 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement .)
    MOD             reduce using rule 70 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement .)
    NE              reduce using rule 70 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement .)
    OR              reduce using rule 70 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement .)
    MINUS           reduce using rule 70 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement .)
    TIMES           reduce using rule 70 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement .)
    XOR             reduce using rule 70 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement .)
    IN              reduce using rule 70 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement .)
    LSQUARE         reduce using rule 70 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement .)
    DOT             reduce using rule 70 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement .)
    STATEMENT_END   reduce using rule 70 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement .)
    $end            reduce using rule 70 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement .)
    RSQUARE         reduce using rule 70 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement .)
    ,               reduce using rule 70 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement .)
    RBRACE          reduce using rule 70 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement .)
    RPAREN          reduce using rule 70 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement .)
    :               reduce using rule 70 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement .)
    OBJ_END         reduce using rule 70 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement .)
    ELSE            shift and go to state 172

    else_if_chain                  shift and go to state 181

state 181

    (71) else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement else_if_chain .

    LPAREN          reduce using rule 71 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement else_if_chain .)
    PLUS            reduce using rule 71 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement else_if_chain .)
    AND             reduce using rule 71 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement else_if_chain .)
    DIVIDE          reduce using rule 71 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement else_if_chain .)
    EQUALS          reduce using rule 71 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement else_if_chain .)
    EXPT            reduce using rule 71 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement else_if_chain .)
    GE              reduce using rule 71 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement else_if_chain .)
    GT              reduce using rule 71 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement else_if_chain .)
    LE              reduce using rule 71 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement else_if_chain .)
    LT              reduce using rule 71 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement else_if_chain .)
    MOD             reduce using rule 71 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement else_if_chain .)
    NE              reduce using rule 71 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement else_if_chain .)
    OR              reduce using rule 71 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement else_if_chain .)
    MINUS           reduce using rule 71 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement else_if_chain .)
    TIMES           reduce using rule 71 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement else_if_chain .)
    XOR             reduce using rule 71 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement else_if_chain .)
    IN              reduce using rule 71 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement else_if_chain .)
    LSQUARE         reduce using rule 71 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement else_if_chain .)
    DOT             reduce using rule 71 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement else_if_chain .)
    STATEMENT_END   reduce using rule 71 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement else_if_chain .)
    $end            reduce using rule 71 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement else_if_chain .)
    RSQUARE         reduce using rule 71 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement else_if_chain .)
    ,               reduce using rule 71 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement else_if_chain .)
    RBRACE          reduce using rule 71 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement else_if_chain .)
    RPAREN          reduce using rule 71 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement else_if_chain .)
    :               reduce using rule 71 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement else_if_chain .)
    OBJ_END         reduce using rule 71 (else_if_chain -> ELSE IF LPAREN expression RPAREN block_statement else_if_chain .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LPAREN in state 9 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 25 resolved as shift
